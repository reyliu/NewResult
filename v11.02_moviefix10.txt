liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/moviefix10/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix10/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [99.5 s]. #user=69838, #item=8940, #train_user=1396760, #cv=349190, #test=9285378
Time: [677.7], Init: 
Init_NDCG1: [ 0.60546387  0.65675222  0.71629002  0.78220593  0.8568904 ]
Init_NDCG2: [ 0.60319453  0.65618071  0.71596521  0.78154427  0.85647577]
Init_NDCG3: [ 0.60586888  0.65628407  0.71458779  0.78072466  0.85658771]
Init_NDCG4: [ 0.60831302  0.65922179  0.71899529  0.78418586  0.8580364 ]
Iteration 0 [143.0 s]: ranku_loss = 1.694188 [690.36 s],
NDCG1: [ 0.68486798  0.72286624  0.77072892  0.82373618  0.88482569]
NDCG2: [ 0.54476341  0.60011645  0.66569984  0.7406045   0.83307735]
NDCG3: [ 0.68497004  0.7228179   0.77070733  0.82376476  0.88483106]
NDCG4: [ 0.54441676  0.59988469  0.66549243  0.74047394  0.83297004]
Iteration 1 [211.3 s]: ranku_loss = 0.702495 [685.94 s],
NDCG1: [ 0.71790717  0.7519177   0.79528803  0.84267796  0.89700881]
NDCG2: [ 0.51604851  0.57485905  0.64396272  0.72390767  0.82265206]
NDCG3: [ 0.71773412  0.75191922  0.79529845  0.84266705  0.89698683]
NDCG4: [ 0.51562058  0.57466074  0.64385273  0.72367635  0.82253925]
Iteration 2 [218.1 s]: ranku_loss = 0.688249 [666.60 s],
NDCG1: [ 0.73827096  0.7715943   0.81334889  0.85795455  0.90547131]
NDCG2: [ 0.67905693  0.719687    0.77107711  0.82567445  0.88393018]
NDCG3: [ 0.73818208  0.77159986  0.81332593  0.8579561   0.90546005]
NDCG4: [ 0.67870752  0.71926516  0.77035365  0.82518702  0.88369252]
Iteration 3 [215.7 s]: ranku_loss = 0.671632 [665.49 s],
NDCG1: [ 0.74753625  0.78262446  0.82396708  0.8662921   0.90996062]
NDCG2: [ 0.75104585  0.78525042  0.82464268  0.86561074  0.91070976]
NDCG3: [ 0.74762296  0.78264895  0.82399709  0.86630198  0.90997919]
NDCG4: [ 0.75112117  0.78526791  0.82466394  0.86563522  0.91072818]
Iteration 4 [215.6 s]: ranku_loss = 0.648466 [570.93 s],
NDCG1: [ 0.75401616  0.789346    0.82964871  0.87094732  0.91267294]
NDCG2: [ 0.75539223  0.78984178  0.82958626  0.86957667  0.9127418 ]
NDCG3: [ 0.75396788  0.7893028   0.82962298  0.87092335  0.91265607]
NDCG4: [ 0.75519394  0.78979894  0.82958085  0.86953688  0.91270721]
Iteration 5 [128.4 s]: ranku_loss = 0.639007 [500.76 s],
NDCG1: [ 0.75709179  0.79186114  0.8321844   0.87267178  0.91380959]
NDCG2: [ 0.75675248  0.79222272  0.8321908   0.87247575  0.9137825 ]
NDCG3: [ 0.75708783  0.79183177  0.83218218  0.87266127  0.91380397]
NDCG4: [ 0.75682703  0.79231799  0.83224752  0.87251778  0.91381498]
Iteration 6 [128.7 s]: ranku_loss = 0.632247 [571.26 s],
NDCG1: [ 0.75798593  0.79355479  0.83342292  0.87360021  0.91435281]
NDCG2: [ 0.75576358  0.79226702  0.83217696  0.87282684  0.91371304]
NDCG3: [ 0.7580388   0.79359176  0.8334115   0.87362437  0.91436511]
NDCG4: [ 0.7555615   0.79225728  0.83213186  0.87280272  0.91368768]
Iteration 7 [281.5 s]: ranku_loss = 0.620705 [655.36 s],
NDCG1: [ 0.75882545  0.79387319  0.83396092  0.87399155  0.9146085 ]
NDCG2: [ 0.7409264   0.78154219  0.82509644  0.86744465  0.90932015]
NDCG3: [ 0.75872998  0.79384401  0.83391709  0.87398817  0.91459045]
NDCG4: [ 0.74093369  0.78148507  0.82512134  0.86741866  0.9093118 ]
Iteration 8 [276.4 s]: ranku_loss = 0.607257 [645.02 s],
NDCG1: [ 0.75695493  0.79101664  0.83064564  0.87127913  0.9134031 ]
NDCG2: [ 0.72776106  0.76927604  0.81431367  0.85897749  0.90423736]
NDCG3: [ 0.75685498  0.79094426  0.8306806   0.87122943  0.91338186]
NDCG4: [ 0.72758599  0.76910023  0.81417352  0.85892518  0.90417984]
End. Best Model is model1.
Test_NDCG:
[ 0.71315172  0.70741387  0.705422    0.70633776  0.70845768  0.71137001
  0.71497034  0.71894645  0.72310542  0.72749783]

