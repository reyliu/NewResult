liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [14.8 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [15.2], Init: 
Init_NDCG1: [ 0.61622642  0.66075185  0.71414426  0.77895907  0.85863294]
Init_NDCG2: [ 0.61722605  0.66047034  0.71328373  0.77919133  0.85865151]
Init_NDCG3: [ 0.62372658  0.66402873  0.71759659  0.78229824  0.86045997]
Init_NDCG4: [ 0.61895233  0.66263492  0.7159704   0.78040925  0.85941533]
Iteration 0 [20.9 s]: ranku_loss = 1.670196 [13.27 s],
NDCG1: [ 0.6705759   0.69988564  0.74621011  0.80319754  0.87557302]
NDCG2: [ 0.64395605  0.68023962  0.73035091  0.79151022  0.8673002 ]
NDCG3: [ 0.61099769  0.65686353  0.7107404   0.77468019  0.85669788]
NDCG4: [ 0.62227544  0.66125883  0.71486424  0.78092558  0.85948358]
Iteration 1 [16.6 s]: ranku_loss = 0.817316 [13.37 s],
NDCG1: [ 0.68400689  0.71490979  0.75849221  0.81393917  0.88155761]
NDCG2: [ 0.64663928  0.68090869  0.73156097  0.79335777  0.86786154]
NDCG3: [ 0.6036845   0.64976334  0.70399997  0.77067544  0.85383941]
NDCG4: [ 0.62276118  0.66381581  0.71652086  0.78208642  0.86010599]
Iteration 2 [19.4 s]: ranku_loss = 0.687877 [13.16 s],
NDCG1: [ 0.71140903  0.74131864  0.78344763  0.83381114  0.89285695]
NDCG2: [ 0.70385592  0.73050387  0.77407801  0.82771668  0.88877762]
NDCG3: [ 0.58982473  0.6396146   0.69523102  0.76322883  0.84924955]
NDCG4: [ 0.62624253  0.66619939  0.71927172  0.78384517  0.86134033]
Iteration 3 [18.2 s]: ranku_loss = 0.666724 [13.26 s],
NDCG1: [ 0.73392381  0.75898238  0.79842907  0.84563719  0.90036374]
NDCG2: [ 0.73542617  0.76025347  0.79854199  0.8454686   0.9006041 ]
NDCG3: [ 0.57488227  0.62406491  0.6815412   0.75412019  0.84319636]
NDCG4: [ 0.63595709  0.67518759  0.72557242  0.78877703  0.86476205]
Iteration 4 [16.7 s]: ranku_loss = 0.637306 [13.29 s],
NDCG1: [ 0.74292962  0.76515653  0.8025818   0.84932993  0.90296847]
NDCG2: [ 0.74012762  0.76551662  0.80164286  0.84890342  0.90253606]
NDCG3: [ 0.55737822  0.60999732  0.66975518  0.74475826  0.83728142]
NDCG4: [ 0.65599819  0.68990199  0.73921229  0.79893756  0.87136478]
Iteration 5 [16.7 s]: ranku_loss = 0.622099 [13.30 s],
NDCG1: [ 0.74503386  0.76899046  0.80526608  0.85071486  0.90412358]
NDCG2: [ 0.7421319   0.76705293  0.80440797  0.85090212  0.90348154]
NDCG3: [ 0.55072871  0.603632    0.66502992  0.74013286  0.83469894]
NDCG4: [ 0.66032693  0.69056731  0.74063721  0.80012873  0.87229335]
Iteration 6 [18.8 s]: ranku_loss = 0.617412 [13.37 s],
NDCG1: [ 0.74737548  0.76845314  0.80672472  0.85095207  0.90452918]
NDCG2: [ 0.74378529  0.76856653  0.80525472  0.85040449  0.90393205]
NDCG3: [ 0.54997671  0.60231622  0.66511036  0.73970911  0.83440948]
NDCG4: [ 0.63492118  0.6733559   0.72717194  0.78954363  0.86469846]
Iteration 7 [17.3 s]: ranku_loss = 0.612138 [13.17 s],
NDCG1: [ 0.74793501  0.77007802  0.80674158  0.85121468  0.90482079]
NDCG2: [ 0.74393557  0.76743051  0.80559802  0.85068117  0.90391936]
NDCG3: [ 0.54636731  0.60115107  0.66336108  0.73828606  0.83345499]
NDCG4: [ 0.61181601  0.65620869  0.71257803  0.77667869  0.85702181]
Iteration 8 [18.8 s]: ranku_loss = 0.605178 [13.24 s],
NDCG1: [ 0.74758297  0.77021188  0.8073521   0.85142916  0.90496315]
NDCG2: [ 0.7425482   0.76715693  0.80588136  0.85066942  0.90375251]
NDCG3: [ 0.54546404  0.60361136  0.66295304  0.73854816  0.83354011]
NDCG4: [ 0.58418348  0.63473339  0.69110727  0.76080925  0.84730038]
Iteration 9 [19.1 s]: ranku_loss = 0.597735 [13.18 s],
NDCG1: [ 0.74517586  0.7696238   0.80725141  0.85162913  0.90460463]
NDCG2: [ 0.74134665  0.7673193   0.80538978  0.8508947   0.9036159 ]
NDCG3: [ 0.54552346  0.60322282  0.66361656  0.73824441  0.83353575]
NDCG4: [ 0.57775559  0.62522355  0.68263718  0.75360851  0.84367053]
End. Best Model is model1.
Test_NDCG:
[ 0.74266885  0.73091888  0.72515442  0.7243755   0.72530828  0.72882461
  0.73314009  0.73946185  0.74680896  0.75480938]

liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [15.0 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [15.6], Init: 
Init_NDCG1: [ 0.61516514  0.65736287  0.71037123  0.77636737  0.85713128]
Init_NDCG2: [ 0.61618357  0.6579629   0.71256834  0.77786701  0.85771023]
Init_NDCG3: [ 0.61512493  0.65864811  0.71191874  0.77741141  0.8575921 ]
Init_NDCG4: [ 0.62003773  0.66389124  0.71536485  0.77968883  0.85963964]
Iteration 0 [20.5 s]: ranku_loss = 1.705721 [13.60 s],
NDCG1: [ 0.6703854   0.70255905  0.74955434  0.80737719  0.87662198]
NDCG2: [ 0.62867797  0.67112931  0.7239768   0.78667559  0.86292962]
NDCG3: [ 0.61363463  0.65570615  0.70889187  0.77398724  0.85647028]
NDCG4: [ 0.62826774  0.66627852  0.71853058  0.78231028  0.86161472]
Iteration 1 [18.1 s]: ranku_loss = 0.831312 [13.56 s],
NDCG1: [ 0.69508994  0.7263486   0.76873813  0.8234112   0.88612602]
NDCG2: [ 0.62906218  0.66987669  0.72298279  0.78652768  0.8626586 ]
NDCG3: [ 0.59295833  0.63752775  0.69430278  0.76152572  0.84899124]
NDCG4: [ 0.64687197  0.6831964   0.73225018  0.79299768  0.86819267]
Iteration 2 [19.5 s]: ranku_loss = 0.699366 [13.54 s],
NDCG1: [ 0.7122436   0.74154764  0.78235598  0.83360966  0.89250129]
NDCG2: [ 0.63005294  0.67022616  0.72373352  0.78812403  0.86304565]
NDCG3: [ 0.57091402  0.61896052  0.67967144  0.7511153   0.84145878]
NDCG4: [ 0.65166478  0.68938997  0.73612245  0.79563375  0.87027373]
Iteration 3 [16.9 s]: ranku_loss = 0.684370 [13.62 s],
NDCG1: [ 0.72018929  0.74954673  0.79049409  0.84023969  0.89600421]
NDCG2: [ 0.65420962  0.69251213  0.74238003  0.80291453  0.8721499 ]
NDCG3: [ 0.54978489  0.60186169  0.66610274  0.7416      0.83456108]
NDCG4: [ 0.64366919  0.68270203  0.73088534  0.79087716  0.86751899]
Iteration 4 [16.2 s]: ranku_loss = 0.676769 [13.47 s],
NDCG1: [ 0.72548023  0.75385099  0.79468894  0.84359139  0.89804772]
NDCG2: [ 0.71867921  0.74672899  0.78688106  0.83718255  0.8948059 ]
NDCG3: [ 0.53549159  0.59063463  0.65518343  0.73474079  0.82972523]
NDCG4: [ 0.62698288  0.66853454  0.71895062  0.78217514  0.8617005 ]
Iteration 5 [17.3 s]: ranku_loss = 0.669394 [13.60 s],
NDCG1: [ 0.72863426  0.75820415  0.79736123  0.84501121  0.89938891]
NDCG2: [ 0.73128786  0.75714465  0.79784006  0.8449458   0.89972707]
NDCG3: [ 0.52564751  0.58138343  0.64891111  0.73042022  0.82641935]
NDCG4: [ 0.55550609  0.60763675  0.67191822  0.74514566  0.83700186]
Iteration 6 [18.5 s]: ranku_loss = 0.655933 [13.66 s],
NDCG1: [ 0.73542921  0.76269188  0.80101438  0.84775714  0.90146134]
NDCG2: [ 0.73920596  0.76364036  0.80161186  0.84831264  0.90209356]
NDCG3: [ 0.51846129  0.57715868  0.64487691  0.72713531  0.82433561]
NDCG4: [ 0.53131248  0.58534965  0.64855588  0.72680462  0.82706953]
Iteration 7 [18.3 s]: ranku_loss = 0.635192 [13.36 s],
NDCG1: [ 0.73857601  0.76417964  0.80239413  0.84880197  0.90230566]
NDCG2: [ 0.74078442  0.76419821  0.80277766  0.8494536   0.90273247]
NDCG3: [ 0.51244617  0.57031266  0.64081899  0.72351348  0.8219467 ]
NDCG4: [ 0.52449201  0.57660677  0.64319731  0.72203148  0.82411098]
Iteration 8 [17.7 s]: ranku_loss = 0.618361 [13.61 s],
NDCG1: [ 0.74119432  0.76494258  0.80298226  0.84906825  0.90272207]
NDCG2: [ 0.74258784  0.7661035   0.80321345  0.85001243  0.90323058]
NDCG3: [ 0.50786997  0.56464462  0.63561539  0.72003665  0.81979736]
NDCG4: [ 0.5067757   0.56132554  0.63068563  0.71399906  0.81817422]
Iteration 9 [19.4 s]: ranku_loss = 0.609198 [13.52 s],
NDCG1: [ 0.74624608  0.76715661  0.8047547   0.85050058  0.90397947]
NDCG2: [ 0.74417475  0.76660472  0.8044031   0.8505926   0.90369267]
NDCG3: [ 0.507018    0.56111438  0.63237107  0.71635079  0.81853051]
NDCG4: [ 0.50612868  0.56053862  0.62795034  0.71336809  0.81758484]
Iteration 10 [11.1 s]: ranku_loss = 0.599629 [13.36 s],
NDCG1: [ 0.7456744   0.76786316  0.80472234  0.85076815  0.90400383]
NDCG2: [ 0.74369492  0.76731395  0.8036293   0.85038297  0.90359206]
NDCG3: [ 0.50505386  0.56013422  0.63146434  0.71501107  0.81798008]
NDCG4: [ 0.50472456  0.55972953  0.62849035  0.71302348  0.81734084]
Iteration 11 [8.7 s]: ranku_loss = 0.592985 [13.24 s],
NDCG1: [ 0.74420799  0.7683217   0.80523225  0.85026939  0.90388101]
NDCG2: [ 0.73680944  0.76264271  0.79989908  0.84684423  0.90138366]
NDCG3: [ 0.50490554  0.5587201   0.63012634  0.7140425   0.81753903]
NDCG4: [ 0.50240798  0.55984922  0.62860314  0.71311905  0.81716281]
End. Best Model is model1.
Test_NDCG:
[ 0.74185242  0.73048221  0.7252054   0.72475683  0.72501592  0.72798868
  0.73285936  0.73909921  0.74631481  0.75504788]

liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [14.4 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [15.8], Init: 
Init_NDCG1: [ 0.62046996  0.66004571  0.71388146  0.77928643  0.85883885]
Init_NDCG2: [ 0.62006884  0.66364792  0.71678492  0.78046624  0.85965899]
Init_NDCG3: [ 0.61484537  0.65632172  0.71024449  0.77547128  0.85712071]
Init_NDCG4: [ 0.61636004  0.65727961  0.71394325  0.77864101  0.85803419]
Iteration 0 [15.4 s]: ranku_loss = 1.273204 [13.56 s],
NDCG1: [ 0.66818463  0.70050041  0.74714143  0.8046388   0.87565426]
NDCG2: [ 0.61729918  0.65871396  0.71098174  0.77746275  0.85785683]
NDCG3: [ 0.61246911  0.65660236  0.70871619  0.7762136   0.85665578]
NDCG4: [ 0.62336609  0.66529985  0.7181366   0.78187394  0.86059666]
Iteration 1 [9.1 s]: ranku_loss = 0.700826 [13.33 s],
NDCG1: [ 0.70987449  0.73422308  0.77575046  0.82975997  0.8902927 ]
NDCG2: [ 0.65041242  0.68865494  0.73823598  0.8004684   0.8707696 ]
NDCG3: [ 0.60208726  0.64784948  0.7019452   0.77107032  0.85308756]
NDCG4: [ 0.62680756  0.66949491  0.72100778  0.7842268   0.86196778]
Iteration 2 [11.7 s]: ranku_loss = 0.671487 [13.31 s],
NDCG1: [ 0.73442957  0.75601735  0.79863747  0.84543021  0.89994476]
NDCG2: [ 0.73703154  0.75990275  0.80028611  0.84703506  0.90115258]
NDCG3: [ 0.56218473  0.61010148  0.6715372   0.74676457  0.83805887]
NDCG4: [ 0.63743229  0.6759846   0.72611714  0.78802812  0.86492516]
Iteration 3 [11.1 s]: ranku_loss = 0.636424 [13.98 s],
NDCG1: [ 0.73889119  0.76410695  0.80314322  0.84835877  0.90234232]
NDCG2: [ 0.7425642   0.76500904  0.80449639  0.84990489  0.9032018 ]
NDCG3: [ 0.53550603  0.58653235  0.65332952  0.73241625  0.82869088]
NDCG4: [ 0.65152795  0.68817975  0.73608556  0.79573379  0.86990674]
Iteration 4 [18.5 s]: ranku_loss = 0.621339 [14.26 s],
NDCG1: [ 0.74131202  0.7660046   0.80408983  0.84940389  0.90308163]
NDCG2: [ 0.74345279  0.76612528  0.8048066   0.85042337  0.90358563]
NDCG3: [ 0.52711039  0.58248849  0.65047838  0.73006871  0.82680352]
NDCG4: [ 0.62520276  0.66630193  0.72026438  0.78375295  0.86128921]
Iteration 5 [11.3 s]: ranku_loss = 0.616828 [13.39 s],
NDCG1: [ 0.74826496  0.76901749  0.80633585  0.85158018  0.90471301]
NDCG2: [ 0.74520869  0.76753796  0.80616402  0.85078673  0.90411589]
NDCG3: [ 0.52629913  0.58134841  0.65107274  0.72968472  0.82651938]
NDCG4: [ 0.57629262  0.62932027  0.68905236  0.75999742  0.84524219]
Iteration 6 [10.6 s]: ranku_loss = 0.612837 [13.47 s],
NDCG1: [ 0.7451363   0.76704086  0.80567226  0.85051338  0.90392409]
NDCG2: [ 0.74359281  0.76738717  0.80489694  0.85049661  0.90375766]
NDCG3: [ 0.52626646  0.58437689  0.65284224  0.73222976  0.82729859]
NDCG4: [ 0.53841342  0.59627015  0.66316449  0.73971546  0.83214876]
End. Best Model is model1.
Test_NDCG:
[ 0.74379957  0.72945062  0.72592667  0.72345646  0.72516512  0.72828036
  0.73276648  0.73928629  0.74665641  0.75517429]


