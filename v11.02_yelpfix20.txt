liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [15.5 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [20.5], Init: 
Init_NDCG1: [ 0.62501489  0.66361235  0.71670264  0.78196485  0.86049538]
Init_NDCG2: [ 0.61977483  0.65844767  0.71255103  0.77811527  0.85841982]
Init_NDCG3: [ 0.62177722  0.6601887   0.71194643  0.77809262  0.85860761]
Init_NDCG4: [ 0.62204332  0.66153504  0.71451152  0.77937548  0.85919926]
Iteration 0 [48.1 s]: ranku_loss = 1.149093 [21.29 s],
NDCG1: [ 0.71348028  0.74086993  0.78305861  0.83395991  0.89303077]
NDCG2: [ 0.71773925  0.74334381  0.78272763  0.83234736  0.8934145 ]
NDCG3: [ 0.7131834   0.74082056  0.78289225  0.83414351  0.89298872]
NDCG4: [ 0.71704347  0.74212907  0.78272272  0.83179239  0.89309103]
Iteration 1 [40.0 s]: ranku_loss = 0.642892 [19.88 s],
NDCG1: [ 0.74291222  0.76588651  0.80265797  0.84896332  0.90318229]
NDCG2: [ 0.74013608  0.76547836  0.80229041  0.84854591  0.90252708]
NDCG3: [ 0.74223573  0.76553295  0.80263205  0.84879519  0.90303776]
NDCG4: [ 0.74025616  0.7654268   0.80228059  0.84853968  0.90253195]
Iteration 2 [36.6 s]: ranku_loss = 0.626713 [19.07 s],
NDCG1: [ 0.74735545  0.76793143  0.80576661  0.85002896  0.90430473]
NDCG2: [ 0.74369024  0.76692822  0.80417765  0.84982321  0.90367434]
NDCG3: [ 0.7480656   0.76777868  0.80604988  0.85043166  0.90443074]
NDCG4: [ 0.7439945   0.76730116  0.8041709   0.85011397  0.9037875 ]
Iteration 3 [35.3 s]: ranku_loss = 0.622539 [16.54 s],
NDCG1: [ 0.74552633  0.76847168  0.80503288  0.85062905  0.90417084]
NDCG2: [ 0.74058833  0.76620335  0.8025637   0.84990276  0.9029135 ]
NDCG3: [ 0.74521091  0.76836401  0.80486622  0.85055604  0.90407877]
NDCG4: [ 0.73988722  0.76596027  0.80251129  0.84954518  0.90274495]
End. Best Model is model1.
Test_NDCG:
[ 0.74192137  0.73131371  0.72541075  0.72361294  0.72451792  0.72805842
  0.73338877  0.73923136  0.74655232  0.75518996]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [15.0 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [18.9], Init: 
Init_NDCG1: [ 0.61613712  0.66143352  0.71438033  0.77855634  0.85852552]
Init_NDCG2: [ 0.61731338  0.65963501  0.71223483  0.77805812  0.85831687]
Init_NDCG3: [ 0.61189522  0.65513955  0.71006612  0.77555856  0.8566276 ]
Init_NDCG4: [ 0.61877832  0.66009789  0.71415429  0.77969968  0.85882939]
Iteration 0 [38.6 s]: ranku_loss = 1.385387 [16.09 s],
NDCG1: [ 0.62840235  0.66948451  0.7210272   0.78345281  0.86234942]
NDCG2: [ 0.61845936  0.65679286  0.70948044  0.77613151  0.85726001]
NDCG3: [ 0.62719637  0.66868582  0.71975466  0.78292394  0.86190267]
NDCG4: [ 0.61906838  0.65665002  0.7094171   0.776064    0.85729752]
Iteration 1 [30.3 s]: ranku_loss = 0.699619 [16.31 s],
NDCG1: [ 0.59142748  0.63849992  0.69525372  0.76474526  0.84967555]
NDCG2: [ 0.64773166  0.6866572   0.73561416  0.79638902  0.86921069]
NDCG3: [ 0.58889183  0.63539387  0.69321108  0.76344229  0.84858701]
NDCG4: [ 0.64731585  0.68615804  0.73500516  0.79608726  0.86897901]
Iteration 2 [44.4 s]: ranku_loss = 0.690197 [20.28 s],
NDCG1: [ 0.7153776   0.74362515  0.78379201  0.8343184   0.89337454]
NDCG2: [ 0.69494688  0.72687505  0.76973817  0.82273293  0.88601102]
NDCG3: [ 0.7051425   0.73511892  0.77614757  0.8285279   0.88961747]
NDCG4: [ 0.69462801  0.72688997  0.76957505  0.82258205  0.88596269]
Iteration 3 [52.8 s]: ranku_loss = 0.653300 [17.34 s],
NDCG1: [ 0.73586455  0.76127239  0.80021168  0.84564823  0.90095398]
NDCG2: [ 0.73197403  0.75899822  0.79795852  0.84429988  0.89981472]
NDCG3: [ 0.73710221  0.76162734  0.8004692   0.84580708  0.90119045]
NDCG4: [ 0.73128236  0.75896797  0.79768626  0.84409114  0.89968305]
Iteration 4 [31.2 s]: ranku_loss = 0.629952 [16.31 s],
NDCG1: [ 0.74021528  0.76599191  0.8037395   0.84874764  0.9027269 ]
NDCG2: [ 0.73582671  0.76246495  0.80221732  0.84754163  0.90153668]
NDCG3: [ 0.73836228  0.76604387  0.80331774  0.84832602  0.90241941]
NDCG4: [ 0.73474771  0.76218322  0.80196512  0.8472733   0.901333  ]
Iteration 5 [32.6 s]: ranku_loss = 0.622886 [16.47 s],
NDCG1: [ 0.7433382   0.76792879  0.80574591  0.85004745  0.90373669]
NDCG2: [ 0.73901251  0.76623989  0.80532303  0.84984543  0.90297689]
NDCG3: [ 0.74225731  0.76772193  0.80570901  0.84978362  0.90356174]
NDCG4: [ 0.73810759  0.76611134  0.80507347  0.84947885  0.90276184]
Iteration 6 [50.2 s]: ranku_loss = 0.617089 [19.15 s],
NDCG1: [ 0.74267936  0.76809261  0.80524592  0.85013293  0.90354729]
NDCG2: [ 0.73724306  0.76592437  0.80414715  0.84919253  0.9025411 ]
NDCG3: [ 0.74181811  0.76770628  0.805317    0.84984701  0.90339027]
NDCG4: [ 0.73776647  0.76611567  0.80422908  0.84944259  0.90265625]
End. Best Model is model1.
Test_NDCG:
[ 0.73450303  0.72482987  0.72074942  0.71977974  0.72103896  0.72442848
  0.72978536  0.735992    0.74318353  0.75142271]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [14.9 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [17.4], Init: 
Init_NDCG1: [ 0.61962767  0.65915623  0.71473586  0.77974134  0.85882317]
Init_NDCG2: [ 0.61847151  0.66068221  0.71589657  0.78088909  0.85916576]
Init_NDCG3: [ 0.61518591  0.65975932  0.71318117  0.77946236  0.85820944]
Init_NDCG4: [ 0.61894724  0.65974095  0.7141397   0.77917869  0.85883645]
Iteration 0 [36.5 s]: ranku_loss = 1.327277 [15.66 s],
NDCG1: [ 0.65563467  0.69128119  0.74085017  0.80090195  0.8720899 ]
NDCG2: [ 0.58074086  0.628754    0.68772894  0.75851322  0.84551363]
NDCG3: [ 0.65550539  0.69067864  0.74066838  0.80080333  0.87196918]
NDCG4: [ 0.58137098  0.62859499  0.68793579  0.75839965  0.8455594 ]
Iteration 1 [56.3 s]: ranku_loss = 0.701162 [16.55 s],
NDCG1: [ 0.65861896  0.69725034  0.74512192  0.80395315  0.87383748]
NDCG2: [ 0.57633415  0.62420079  0.68349185  0.75624435  0.84365908]
NDCG3: [ 0.65913761  0.69654031  0.74465905  0.80352374  0.87369301]
NDCG4: [ 0.575516    0.62363267  0.68303173  0.75582804  0.84341338]
Iteration 2 [44.2 s]: ranku_loss = 0.698220 [15.20 s],
NDCG1: [ 0.66616714  0.70159588  0.74882502  0.80752851  0.87598305]
NDCG2: [ 0.57096844  0.62093758  0.6798222   0.75296433  0.84194808]
NDCG3: [ 0.66515527  0.70085131  0.74830427  0.8070313   0.87568327]
NDCG4: [ 0.56953264  0.61990643  0.67931793  0.75257404  0.84153506]
Iteration 3 [28.7 s]: ranku_loss = 0.696108 [15.13 s],
NDCG1: [ 0.67022977  0.70741696  0.75351568  0.81078581  0.87803175]
NDCG2: [ 0.56711945  0.61702386  0.67672718  0.75106931  0.84038498]
NDCG3: [ 0.66884207  0.70670128  0.75251883  0.80996584  0.87761255]
NDCG4: [ 0.56543036  0.61532517  0.67548552  0.75027918  0.83979815]
Iteration 4 [30.3 s]: ranku_loss = 0.694510 [15.64 s],
NDCG1: [ 0.67552942  0.71179489  0.75695314  0.81407882  0.87990378]
NDCG2: [ 0.56783091  0.61823837  0.67798305  0.75282867  0.84110926]
NDCG3: [ 0.67204822  0.70931234  0.75512986  0.81250646  0.87883321]
NDCG4: [ 0.5603291   0.61276166  0.67321234  0.74841788  0.8385719 ]
Iteration 5 [31.5 s]: ranku_loss = 0.692255 [15.74 s],
NDCG1: [ 0.69225684  0.72719643  0.76964519  0.82376201  0.88608694]
NDCG2: [ 0.58341055  0.63012768  0.69051123  0.76202468  0.84660972]
NDCG3: [ 0.68227331  0.71827523  0.76317291  0.81743937  0.88241733]
NDCG4: [ 0.55167795  0.60345398  0.66658996  0.74355635  0.83523432]
Iteration 6 [29.6 s]: ranku_loss = 0.682640 [15.73 s],
NDCG1: [ 0.72940867  0.75438783  0.79383176  0.84237902  0.89835115]
NDCG2: [ 0.7273224   0.75482826  0.79433461  0.84229061  0.89846421]
NDCG3: [ 0.70892673  0.74101807  0.78166288  0.83281059  0.89189849]
NDCG4: [ 0.56660343  0.61901676  0.68049872  0.75284618  0.84138287]
Iteration 7 [29.4 s]: ranku_loss = 0.639838 [15.92 s],
NDCG1: [ 0.74523676  0.76765716  0.80427967  0.84995333  0.90384046]
NDCG2: [ 0.73673836  0.76408428  0.8024298   0.84811551  0.90203276]
NDCG3: [ 0.73157053  0.75661992  0.79642288  0.84381153  0.89928235]
NDCG4: [ 0.55434706  0.6089231   0.67450335  0.74802363  0.83761283]
Iteration 8 [29.9 s]: ranku_loss = 0.615604 [16.24 s],
NDCG1: [ 0.74555202  0.76924884  0.80539126  0.85091735  0.90422049]
NDCG2: [ 0.73928796  0.76570145  0.80328225  0.84902323  0.90263575]
NDCG3: [ 0.73907956  0.76213987  0.80014232  0.84592032  0.90148269]
NDCG4: [ 0.63769387  0.67502778  0.72535675  0.78691575  0.86462233]
Iteration 9 [25.5 s]: ranku_loss = 0.602115 [15.27 s],
NDCG1: [ 0.74523922  0.76876835  0.80539121  0.85111939  0.90417412]
NDCG2: [ 0.73831385  0.76579539  0.80462987  0.8499768   0.90281358]
NDCG3: [ 0.73762431  0.76123442  0.79844447  0.84494065  0.90090847]
NDCG4: [ 0.66976472  0.70131024  0.74700168  0.80353613  0.87574288]
End. Best Model is model1.
Test_NDCG:
[ 0.74298543  0.73059555  0.72581912  0.72422049  0.72461079  0.72810912
  0.73266867  0.73882506  0.74632807  0.75506673]



liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [15.0 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [18.3], Init: 
Init_NDCG1: [ 0.61827764  0.65718339  0.71273539  0.77754771  0.85783161]
Init_NDCG2: [ 0.62214444  0.66571396  0.71726252  0.7814979   0.86055108]
Init_NDCG3: [ 0.61768799  0.65969992  0.71500482  0.78093172  0.85877841]
Init_NDCG4: [ 0.61888625  0.65987827  0.71356969  0.77935165  0.85856133]
Iteration 0 [34.0 s]: ranku_loss = 1.322587 [15.18 s],
NDCG1: [ 0.67840988  0.71097274  0.75803947  0.81343829  0.88037257]
NDCG2: [ 0.56159845  0.61155079  0.67257898  0.74648698  0.83828892]
NDCG3: [ 0.67888848  0.71107866  0.75812186  0.81364545  0.8804503 ]
NDCG4: [ 0.56235677  0.61165351  0.67259254  0.74652533  0.83839215]
Iteration 1 [25.9 s]: ranku_loss = 0.693115 [16.42 s],
NDCG1: [ 0.70169332  0.73361155  0.777052    0.82875921  0.88931271]
NDCG2: [ 0.53718175  0.59050327  0.65567359  0.73467541  0.82988361]
NDCG3: [ 0.70108142  0.73388505  0.7772585   0.82860997  0.88927888]
NDCG4: [ 0.53551777  0.58906284  0.65489309  0.73422946  0.82934736]
Iteration 2 [25.6 s]: ranku_loss = 0.673227 [16.08 s],
NDCG1: [ 0.73076026  0.75624761  0.79659766  0.84335615  0.89917657]
NDCG2: [ 0.73789788  0.7596745   0.79899285  0.8449741   0.9008121 ]
NDCG3: [ 0.73106419  0.75631519  0.79660092  0.84346382  0.89923101]
NDCG4: [ 0.73723198  0.7594566   0.79891612  0.8447687   0.90067327]
Iteration 3 [26.5 s]: ranku_loss = 0.638013 [16.32 s],
NDCG1: [ 0.74012253  0.76391511  0.80255295  0.84794489  0.90241744]
NDCG2: [ 0.73668369  0.76325981  0.80237257  0.84713187  0.9018267 ]
NDCG3: [ 0.73980883  0.76386961  0.80247838  0.84772784  0.90235032]
NDCG4: [ 0.73719389  0.76356779  0.80248274  0.84722443  0.90195639]
Iteration 4 [29.2 s]: ranku_loss = 0.627341 [15.87 s],
NDCG1: [ 0.74289966  0.7666564   0.80470375  0.84962231  0.90344605]
NDCG2: [ 0.74178421  0.76573329  0.80452064  0.84905395  0.90306929]
NDCG3: [ 0.7432961   0.76694414  0.8047243   0.8497404   0.90353994]
NDCG4: [ 0.74206976  0.76585896  0.80452812  0.84904931  0.90311773]
Iteration 5 [30.3 s]: ranku_loss = 0.620760 [16.15 s],
NDCG1: [ 0.73918774  0.76751567  0.80438902  0.84960354  0.90302557]
NDCG2: [ 0.73865858  0.76696619  0.80466711  0.8495983   0.90299523]
NDCG3: [ 0.73938137  0.767487    0.80452617  0.84960686  0.90305023]
NDCG4: [ 0.73888446  0.76704668  0.80461763  0.84957487  0.9030162 ]
End. Best Model is model3.
Test_NDCG:
[ 0.74108252  0.73078656  0.72656069  0.72508289  0.72590341  0.72895015
  0.73366689  0.73985966  0.74685667  0.75494577]

