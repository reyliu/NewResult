liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/moviefix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [339.3 s]. #user=49522, #item=8940, #train_user=29713200, #cv=247610, #test=7929676
Time: [235.8], Init: 
Init_NDCG1: [ 0.60591456  0.65703585  0.71630874  0.78154676  0.85701873]
Init_NDCG2: [ 0.59937889  0.65216464  0.71212327  0.77873597  0.85491792]
Init_NDCG3: [ 0.60465559  0.65795341  0.71756342  0.78239001  0.85725657]
Init_NDCG4: [ 0.60335116  0.65701653  0.71775875  0.78301267  0.8570304 ]
Iteration 0 [66.2 s]: ranku_loss = 1.224558 [233.46 s],
NDCG1: [ 0.64923532  0.6897161   0.74163453  0.80099819  0.87111686]
NDCG2: [ 0.62769092  0.67742409  0.73669498  0.79868953  0.86609154]
NDCG3: [ 0.57349606  0.63073671  0.69249481  0.76269356  0.84542055]
NDCG4: [ 0.68027477  0.72141391  0.77239423  0.82621134  0.88465416]
Iteration 1 [71.1 s]: ranku_loss = 0.678473 [250.72 s],
NDCG1: [ 0.7456518   0.78347939  0.82602443  0.86861951  0.91049115]
NDCG2: [ 0.74754685  0.782118    0.82361201  0.86583698  0.90992232]
NDCG3: [ 0.50427604  0.57046754  0.64199312  0.72225922  0.8203519 ]
NDCG4: [ 0.73871422  0.775187    0.8179065   0.86196776  0.90702433]
Iteration 2 [71.2 s]: ranku_loss = 0.642812 [250.81 s],
NDCG1: [ 0.75945503  0.7958965   0.83660239  0.87682421  0.91570178]
NDCG2: [ 0.75977167  0.79585154  0.8361602   0.87622597  0.91559661]
NDCG3: [ 0.5538123   0.61222635  0.67654536  0.74942905  0.83774291]
NDCG4: [ 0.73993705  0.77687699  0.82008973  0.86374063  0.90777025]
Iteration 3 [72.1 s]: ranku_loss = 0.633913 [233.57 s],
NDCG1: [ 0.76253534  0.79888004  0.83903074  0.87859658  0.91688866]
NDCG2: [ 0.76155584  0.79776538  0.83843969  0.878076    0.91651591]
NDCG3: [ 0.63237252  0.68023165  0.73596665  0.79718958  0.86679011]
NDCG4: [ 0.66769018  0.70859532  0.76040767  0.81707159  0.87923344]
Iteration 4 [70.6 s]: ranku_loss = 0.629727 [233.85 s],
NDCG1: [ 0.76305629  0.79933773  0.83976793  0.87933526  0.91716123]
NDCG2: [ 0.76237656  0.79838877  0.8391124   0.87902163  0.9168451 ]
NDCG3: [ 0.6167861   0.66603823  0.72494242  0.7890596   0.86112147]
NDCG4: [ 0.56378547  0.62297196  0.69005141  0.76135404  0.84295326]
Iteration 5 [70.5 s]: ranku_loss = 0.624359 [233.43 s],
NDCG1: [ 0.7639708   0.79948344  0.83991818  0.8795722   0.91731762]
NDCG2: [ 0.76184201  0.7983325   0.83939082  0.87901593  0.91681743]
NDCG3: [ 0.58971051  0.64494531  0.70735151  0.77513985  0.85198077]
NDCG4: [ 0.53208243  0.59610763  0.66631978  0.74299297  0.83149073]
Iteration 6 [70.2 s]: ranku_loss = 0.618527 [233.61 s],
NDCG1: [ 0.76430597  0.79986751  0.84037757  0.87975717  0.91747578]
NDCG2: [ 0.76034366  0.79728804  0.83894993  0.87856733  0.91644617]
NDCG3: [ 0.56970943  0.62884354  0.6933547   0.76386891  0.84497719]
NDCG4: [ 0.53465065  0.59823353  0.66777211  0.74380759  0.83230591]
Iteration 7 [70.2 s]: ranku_loss = 0.614790 [233.58 s],
NDCG1: [ 0.76365387  0.79981142  0.84038367  0.87961802  0.91737671]
NDCG2: [ 0.75790162  0.79576268  0.83740736  0.87763403  0.9156525 ]
NDCG3: [ 0.56424964  0.62428289  0.6894651   0.76087271  0.84305156]
NDCG4: [ 0.54308611  0.60473298  0.67251118  0.7470595   0.83493142]
End. Best Model is model1.
Test_NDCG:
[ 0.72049154  0.71321275  0.70920388  0.70798128  0.70908373  0.71060141
  0.71274703  0.7156504   0.71879913  0.72207351]

