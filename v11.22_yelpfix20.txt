liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [15.0 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [15.7], Init: 
Init_NDCG1: [ 0.62244181  0.66295616  0.71730589  0.78178019  0.86022728]
Init_NDCG2: [ 0.61407342  0.65504824  0.70977864  0.77620568  0.8567856 ]
Init_NDCG3: [ 0.62244181  0.66295616  0.71730589  0.78178019  0.86022728]
Init_NDCG4: [ 0.61407342  0.65504824  0.70977864  0.77620568  0.8567856 ]
Iteration 0 [37.2 s]: ranku_loss = 1.713535 [14.16 s],
NDCG1: [ 0.66536745  0.69835093  0.7448341   0.80246848  0.87458821]
NDCG2: [ 0.58590294  0.62870999  0.68552078  0.75646482  0.84556211]
NDCG3: [ 0.66536745  0.69835093  0.7448341   0.80246848  0.87458821]
NDCG4: [ 0.58590294  0.62870999  0.68552078  0.75646482  0.84556211]
Iteration 1 [33.5 s]: ranku_loss = 0.699424 [13.97 s],
NDCG1: [ 0.67779848  0.71430674  0.759741    0.81580264  0.88105558]
NDCG2: [ 0.55381765  0.60685858  0.66798596  0.74427965  0.83618166]
NDCG3: [ 0.67779848  0.71430674  0.759741    0.81580264  0.88105558]
NDCG4: [ 0.55381765  0.60685858  0.66798596  0.74427965  0.83618166]
Iteration 2 [19.0 s]: ranku_loss = 0.693774 [13.89 s],
NDCG1: [ 0.70210872  0.73393914  0.77727652  0.82951861  0.8897099 ]
NDCG2: [ 0.53152826  0.58805119  0.65393233  0.7330286   0.82873183]
NDCG3: [ 0.70210872  0.73393914  0.77727652  0.82951861  0.8897099 ]
NDCG4: [ 0.53152826  0.58805119  0.65393233  0.7330286   0.82873183]
Iteration 3 [15.9 s]: ranku_loss = 0.679849 [13.86 s],
NDCG1: [ 0.72761509  0.75504323  0.79580592  0.84312884  0.89867038]
NDCG2: [ 0.73587662  0.76161645  0.79864007  0.84385976  0.90081499]
NDCG3: [ 0.72761509  0.75504323  0.79580592  0.84312884  0.89867038]
NDCG4: [ 0.73587662  0.76161645  0.79864007  0.84385976  0.90081499]
Iteration 4 [15.8 s]: ranku_loss = 0.647983 [13.96 s],
NDCG1: [ 0.74117527  0.76533677  0.80283961  0.84834929  0.90280912]
NDCG2: [ 0.74467559  0.76597494  0.80117866  0.84499397  0.90281402]
NDCG3: [ 0.74117527  0.76533677  0.80283961  0.84834929  0.90280912]
NDCG4: [ 0.74467559  0.76597494  0.80117866  0.84499397  0.90281402]
Iteration 5 [16.0 s]: ranku_loss = 0.632432 [13.82 s],
NDCG1: [ 0.74424164  0.76680598  0.80485734  0.84950972  0.90364247]
NDCG2: [ 0.743008    0.76594846  0.8039329   0.84880946  0.90321205]
NDCG3: [ 0.74424164  0.76680598  0.80485734  0.84950972  0.90364247]
NDCG4: [ 0.743008    0.76594846  0.8039329   0.84880946  0.90321205]
Iteration 6 [15.9 s]: ranku_loss = 0.625139 [13.86 s],
NDCG1: [ 0.7428766   0.76561244  0.80434109  0.84873796  0.90318407]
NDCG2: [ 0.74213592  0.76548451  0.80437284  0.84951922  0.90326335]
NDCG3: [ 0.7428766   0.76561244  0.80434109  0.84873796  0.90318407]
NDCG4: [ 0.74213592  0.76548451  0.80437284  0.84951922  0.90326335]
End. Best Model is model1.
Test_NDCG:
[ 0.73679007  0.72382967  0.72056373  0.7205644   0.72290943  0.72652072
  0.73081006  0.73746365  0.74494493  0.7533979 ]

liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [14.6 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [15.9], Init: 
Init_NDCG1: [ 0.62433848  0.66189975  0.71604275  0.78035428  0.859964  ]
Init_NDCG2: [ 0.62075748  0.66176161  0.71512004  0.78050888  0.85954574]
Init_NDCG3: [ 0.62433848  0.66189975  0.71604275  0.78035428  0.859964  ]
Init_NDCG4: [ 0.62075748  0.66176161  0.71512004  0.78050888  0.85954574]
Iteration 0 [34.7 s]: ranku_loss = 1.757367 [14.27 s],
NDCG1: [ 0.65503763  0.68941375  0.7381308   0.79716794  0.87118573]
NDCG2: [ 0.59534123  0.6357731   0.69249364  0.7617558   0.84867348]
NDCG3: [ 0.65503763  0.68941375  0.7381308   0.79716794  0.87118573]
NDCG4: [ 0.59534123  0.6357731   0.69249364  0.7617558   0.84867348]
Iteration 1 [31.5 s]: ranku_loss = 0.704267 [14.52 s],
NDCG1: [ 0.65489883  0.68902032  0.73890748  0.7980414   0.87119356]
NDCG2: [ 0.59207409  0.63401873  0.69204527  0.76110029  0.8479609 ]
NDCG3: [ 0.65489883  0.68902032  0.73890748  0.7980414   0.87119356]
NDCG4: [ 0.59207409  0.63401873  0.69204527  0.76110029  0.8479609 ]
Iteration 2 [19.0 s]: ranku_loss = 0.700470 [14.26 s],
NDCG1: [ 0.65345466  0.6916574   0.74045751  0.79965227  0.87174032]
NDCG2: [ 0.58739677  0.63288184  0.69030358  0.76109979  0.84728362]
NDCG3: [ 0.65345466  0.6916574   0.74045751  0.79965227  0.87174032]
NDCG4: [ 0.58739677  0.63288184  0.69030358  0.76109979  0.84728362]
Iteration 3 [15.9 s]: ranku_loss = 0.698933 [14.41 s],
NDCG1: [ 0.65652645  0.69693189  0.74554944  0.80275468  0.87358221]
NDCG2: [ 0.58468605  0.62893775  0.68836101  0.75986261  0.84610193]
NDCG3: [ 0.65652645  0.69693189  0.74554944  0.80275468  0.87358221]
NDCG4: [ 0.58468605  0.62893775  0.68836101  0.75986261  0.84610193]
Iteration 4 [20.2 s]: ranku_loss = 0.693264 [14.53 s],
NDCG1: [ 0.70925537  0.74011441  0.77982401  0.83023893  0.89150334]
NDCG2: [ 0.72208842  0.74533105  0.78499091  0.8351308   0.89469345]
NDCG3: [ 0.70925537  0.74011441  0.77982401  0.83023893  0.89150334]
NDCG4: [ 0.72208842  0.74533105  0.78499091  0.8351308   0.89469345]
Iteration 5 [29.9 s]: ranku_loss = 0.646539 [14.73 s],
NDCG1: [ 0.73646692  0.76169347  0.80058094  0.84637494  0.90121121]
NDCG2: [ 0.73454342  0.76178102  0.7998486   0.84520233  0.90078432]
NDCG3: [ 0.73646692  0.76169347  0.80058094  0.84637494  0.90121121]
NDCG4: [ 0.73454342  0.76178102  0.7998486   0.84520233  0.90078432]
Iteration 6 [29.3 s]: ranku_loss = 0.632363 [14.80 s],
NDCG1: [ 0.7417339   0.76557311  0.80317322  0.84813712  0.90277763]
NDCG2: [ 0.73610315  0.76395024  0.80254643  0.84775439  0.90187427]
NDCG3: [ 0.7417339   0.76557311  0.80317322  0.84813712  0.90277763]
NDCG4: [ 0.73610315  0.76395024  0.80254643  0.84775439  0.90187427]
Iteration 7 [20.4 s]: ranku_loss = 0.627157 [14.26 s],
NDCG1: [ 0.74503132  0.76825947  0.80536279  0.84954037  0.9039031 ]
NDCG2: [ 0.74083514  0.76614977  0.80445762  0.84906944  0.90305929]
NDCG3: [ 0.74503132  0.76825947  0.80536279  0.84954037  0.9039031 ]
NDCG4: [ 0.74083514  0.76614977  0.80445762  0.84906944  0.90305929]
Iteration 8 [19.0 s]: ranku_loss = 0.622666 [14.38 s],
NDCG1: [ 0.74484385  0.7684393   0.80604479  0.8493255   0.90403718]
NDCG2: [ 0.74171699  0.76712977  0.80461976  0.84958299  0.90344493]
NDCG3: [ 0.74484385  0.7684393   0.80604479  0.8493255   0.90403718]
NDCG4: [ 0.74171699  0.76712977  0.80461976  0.84958299  0.90344493]
Iteration 9 [30.0 s]: ranku_loss = 0.619215 [14.72 s],
NDCG1: [ 0.74316042  0.76828289  0.80601223  0.85005913  0.90386514]
NDCG2: [ 0.74293947  0.76715163  0.8056457   0.85019432  0.90372172]
NDCG3: [ 0.74316042  0.76828289  0.80601223  0.85005913  0.90386514]
NDCG4: [ 0.74293947  0.76715163  0.8056457   0.85019432  0.90372172]
End. Best Model is model1.
Test_NDCG:
[ 0.7374146   0.72624624  0.72329951  0.72288589  0.72476129  0.72753474
  0.732253    0.73848973  0.7465082   0.75456474]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [14.9 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [16.2], Init: 
Init_NDCG1: [ 0.62262411  0.66369789  0.71534088  0.78071742  0.85984744]
Init_NDCG2: [ 0.62677547  0.66491154  0.71782308  0.78167216  0.86081644]
Init_NDCG3: [ 0.62262411  0.66369789  0.71534088  0.78071742  0.85984744]
Init_NDCG4: [ 0.62677547  0.66491154  0.71782308  0.78167216  0.86081644]
Iteration 0 [34.0 s]: ranku_loss = 1.924206 [14.36 s],
NDCG1: [ 0.66272616  0.69260994  0.73721342  0.79715865  0.87213033]
NDCG2: [ 0.60066434  0.6408034   0.6933454   0.7619904   0.85012412]
NDCG3: [ 0.66272616  0.69260994  0.73721342  0.79715865  0.87213033]
NDCG4: [ 0.60066434  0.6408034   0.6933454   0.7619904   0.85012412]
Iteration 1 [16.9 s]: ranku_loss = 0.704849 [14.00 s],
NDCG1: [ 0.66126525  0.69558196  0.74155809  0.80023579  0.87320003]
NDCG2: [ 0.59124395  0.63335916  0.68865657  0.76001042  0.84729209]
NDCG3: [ 0.66126525  0.69558196  0.74155809  0.80023579  0.87320003]
NDCG4: [ 0.59124395  0.63335916  0.68865657  0.76001042  0.84729209]
Iteration 2 [15.9 s]: ranku_loss = 0.699481 [14.05 s],
NDCG1: [ 0.67547639  0.70635082  0.75162933  0.80820356  0.8781805 ]
NDCG2: [ 0.58161295  0.62465175  0.68359025  0.75463088  0.8440872 ]
NDCG3: [ 0.67547639  0.70635082  0.75162933  0.80820356  0.8781805 ]
NDCG4: [ 0.58161295  0.62465175  0.68359025  0.75463088  0.8440872 ]
Iteration 3 [16.1 s]: ranku_loss = 0.691433 [13.94 s],
NDCG1: [ 0.71317199  0.73788727  0.78009589  0.83055183  0.89179351]
NDCG2: [ 0.70911485  0.7356955   0.7768913   0.82876683  0.89039686]
NDCG3: [ 0.71317199  0.73788727  0.78009589  0.83055183  0.89179351]
NDCG4: [ 0.70911485  0.7356955   0.7768913   0.82876683  0.89039686]
Iteration 4 [15.9 s]: ranku_loss = 0.654470 [14.62 s],
NDCG1: [ 0.74058849  0.7644789   0.80175374  0.84791631  0.90243605]
NDCG2: [ 0.74110469  0.76543863  0.80124159  0.84670799  0.90247669]
NDCG3: [ 0.74058849  0.7644789   0.80175374  0.84791631  0.90243605]
NDCG4: [ 0.74110469  0.76543863  0.80124159  0.84670799  0.90247669]
Iteration 5 [18.7 s]: ranku_loss = 0.632136 [14.41 s],
NDCG1: [ 0.74137546  0.76597209  0.80346066  0.84797323  0.90297438]
NDCG2: [ 0.74250864  0.76562472  0.80278839  0.8478734   0.9029248 ]
NDCG3: [ 0.74137546  0.76597209  0.80346066  0.84797323  0.90297438]
NDCG4: [ 0.74250864  0.76562472  0.80278839  0.8478734   0.9029248 ]
Iteration 6 [28.1 s]: ranku_loss = 0.626153 [14.46 s],
NDCG1: [ 0.74304847  0.76817439  0.80483838  0.84969313  0.90370192]
NDCG2: [ 0.73999416  0.7658348   0.8033453   0.84816057  0.90271003]
NDCG3: [ 0.74304847  0.76817439  0.80483838  0.84969313  0.90370192]
NDCG4: [ 0.73999416  0.7658348   0.8033453   0.84816057  0.90271003]
Iteration 7 [30.2 s]: ranku_loss = 0.620717 [14.70 s],
NDCG1: [ 0.74459491  0.76935393  0.80626245  0.85056719  0.90426589]
NDCG2: [ 0.74130348  0.76716847  0.80415279  0.84928396  0.9031994 ]
NDCG3: [ 0.74459491  0.76935393  0.80626245  0.85056719  0.90426589]
NDCG4: [ 0.74130348  0.76716847  0.80415279  0.84928396  0.9031994 ]
Iteration 8 [20.0 s]: ranku_loss = 0.616108 [14.45 s],
NDCG1: [ 0.74485132  0.7699096   0.80683135  0.85078497  0.90444007]
NDCG2: [ 0.73885475  0.7679049   0.80429706  0.84978505  0.90311745]
NDCG3: [ 0.74485132  0.7699096   0.80683135  0.85078497  0.90444007]
NDCG4: [ 0.73885475  0.7679049   0.80429706  0.84978505  0.90311745]
Iteration 9 [16.1 s]: ranku_loss = 0.612100 [14.18 s],
NDCG1: [ 0.74576132  0.76878647  0.80660354  0.85034689  0.90435218]
NDCG2: [ 0.74017712  0.76619457  0.80415344  0.84976597  0.90303083]
NDCG3: [ 0.74576132  0.76878647  0.80660354  0.85034689  0.90435218]
NDCG4: [ 0.74017712  0.76619457  0.80415344  0.84976597  0.90303083]
End. Best Model is model1.
Test_NDCG:
[ 0.73781794  0.72849729  0.72428853  0.7225051   0.72407756  0.72799594
  0.73326273  0.73948492  0.74651323  0.7547022 ]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [15.6 s]. #user=7486, #item=12922, #train_user=1572060, #cv=37430, #test=343504
Time: [17.8], Init: 
Init_NDCG1: [ 0.61413375  0.65469431  0.71067533  0.77716881  0.85698887]
Init_NDCG2: [ 0.61691112  0.65779078  0.71271449  0.77894581  0.85815435]
Init_NDCG3: [ 0.61413375  0.65469431  0.71067533  0.77716881  0.85698887]
Init_NDCG4: [ 0.61691112  0.65779078  0.71271449  0.77894581  0.85815435]
Iteration 0 [34.3 s]: ranku_loss = 2.096361 [15.31 s],
NDCG1: [ 0.66116774  0.6953275   0.74227205  0.80008795  0.87342798]
NDCG2: [ 0.59176277  0.63202049  0.68826907  0.75873909  0.84710896]
NDCG3: [ 0.66116774  0.6953275   0.74227205  0.80008795  0.87342798]
NDCG4: [ 0.59176277  0.63202049  0.68826907  0.75873909  0.84710896]
Iteration 1 [20.5 s]: ranku_loss = 0.707999 [14.82 s],
NDCG1: [ 0.67426024  0.70778313  0.75244527  0.80856365  0.87841424]
NDCG2: [ 0.57543359  0.61930458  0.67707597  0.75043766  0.84158315]
NDCG3: [ 0.67426024  0.70778313  0.75244527  0.80856365  0.87841424]
NDCG4: [ 0.57543359  0.61930458  0.67707597  0.75043766  0.84158315]
Iteration 2 [16.3 s]: ranku_loss = 0.698828 [14.75 s],
NDCG1: [ 0.68899283  0.71998569  0.76332687  0.81753093  0.8836046 ]
NDCG2: [ 0.5571502   0.60527197  0.66603154  0.74148595  0.8357412 ]
NDCG3: [ 0.68899283  0.71998569  0.76332687  0.81753093  0.8836046 ]
NDCG4: [ 0.5571502   0.60527197  0.66603154  0.74148595  0.8357412 ]
Iteration 3 [16.2 s]: ranku_loss = 0.696492 [14.79 s],
NDCG1: [ 0.69327814  0.7246383   0.76916764  0.82184556  0.88575178]
NDCG2: [ 0.5473337   0.59656626  0.66048689  0.73712983  0.83245383]
NDCG3: [ 0.69327814  0.7246383   0.76916764  0.82184556  0.88575178]
NDCG4: [ 0.5473337   0.59656626  0.66048689  0.73712983  0.83245383]
Iteration 4 [16.3 s]: ranku_loss = 0.695132 [14.73 s],
NDCG1: [ 0.69926289  0.73217627  0.77368406  0.82641384  0.88839167]
NDCG2: [ 0.53729025  0.59099768  0.65396088  0.73286616  0.82956397]
NDCG3: [ 0.69926289  0.73217627  0.77368406  0.82641384  0.88839167]
NDCG4: [ 0.53729025  0.59099768  0.65396088  0.73286616  0.82956397]
Iteration 5 [16.2 s]: ranku_loss = 0.692946 [14.64 s],
NDCG1: [ 0.70913094  0.73679435  0.78026986  0.83168947  0.89134171]
NDCG2: [ 0.52529482  0.58185426  0.64918647  0.72730445  0.8261706 ]
NDCG3: [ 0.70913094  0.73679435  0.78026986  0.83168947  0.89134171]
NDCG4: [ 0.52529482  0.58185426  0.64918647  0.72730445  0.8261706 ]
Iteration 6 [16.1 s]: ranku_loss = 0.690151 [14.62 s],
NDCG1: [ 0.72233457  0.74808526  0.78878189  0.8379908   0.89583185]
NDCG2: [ 0.51675201  0.57322308  0.64082904  0.72097328  0.82260894]
NDCG3: [ 0.72233457  0.74808526  0.78878189  0.8379908   0.89583185]
NDCG4: [ 0.51675201  0.57322308  0.64082904  0.72097328  0.82260894]
Iteration 7 [16.2 s]: ranku_loss = 0.685887 [14.64 s],
NDCG1: [ 0.72203195  0.75220571  0.79208369  0.84021762  0.89695093]
NDCG2: [ 0.51117322  0.56803208  0.63621212  0.71895382  0.82065501]
NDCG3: [ 0.72203195  0.75220571  0.79208369  0.84021762  0.89695093]
NDCG4: [ 0.51117322  0.56803208  0.63621212  0.71895382  0.82065501]
Iteration 8 [16.3 s]: ranku_loss = 0.679997 [14.65 s],
NDCG1: [ 0.72526609  0.75480804  0.7949382   0.84284116  0.89821882]
NDCG2: [ 0.50490144  0.56378271  0.63318322  0.71636173  0.81881082]
NDCG3: [ 0.72526609  0.75480804  0.7949382   0.84284116  0.89821882]
NDCG4: [ 0.50490144  0.56378271  0.63318322  0.71636173  0.81881082]
Iteration 9 [16.2 s]: ranku_loss = 0.675793 [14.52 s],
NDCG1: [ 0.73273285  0.75971653  0.79803202  0.8456985   0.90026492]
NDCG2: [ 0.5014429   0.56146148  0.63009041  0.71350103  0.81748216]
NDCG3: [ 0.73273285  0.75971653  0.79803202  0.8456985   0.90026492]
NDCG4: [ 0.5014429   0.56146148  0.63009041  0.71350103  0.81748216]
Iteration 10 [16.3 s]: ranku_loss = 0.673279 [14.76 s],
NDCG1: [ 0.73602608  0.76188554  0.79999514  0.84679035  0.9012506 ]
NDCG2: [ 0.73602608  0.76188554  0.79999514  0.84679035  0.9012506 ]
NDCG3: [ 0.73602608  0.76188554  0.79999514  0.84679035  0.9012506 ]
NDCG4: [ 0.73602608  0.76188554  0.79999514  0.84679035  0.9012506 ]
Iteration 11 [16.4 s]: ranku_loss = 0.671358 [14.83 s],
NDCG1: [ 0.73868969  0.76426072  0.80242602  0.84855     0.90229609]
NDCG2: [ 0.73868969  0.76426072  0.80240761  0.8485477   0.90229398]
NDCG3: [ 0.73868969  0.76426072  0.80242602  0.84855     0.90229609]
NDCG4: [ 0.73868969  0.76426072  0.80240761  0.8485477   0.90229398]
Iteration 12 [16.4 s]: ranku_loss = 0.669073 [14.63 s],
NDCG1: [ 0.74351878  0.76704337  0.80421037  0.84863476  0.90332393]
NDCG2: [ 0.74341249  0.76715092  0.80430314  0.8486923   0.90335736]
NDCG3: [ 0.74351878  0.76704337  0.80421037  0.84863476  0.90332393]
NDCG4: [ 0.74341249  0.76715092  0.80430314  0.8486923   0.90335736]
Iteration 13 [16.2 s]: ranku_loss = 0.666665 [14.52 s],
NDCG1: [ 0.73778379  0.76497438  0.80286977  0.84822308  0.90221926]
NDCG2: [ 0.74422925  0.76757155  0.80483188  0.84979829  0.90372318]
NDCG3: [ 0.73778379  0.76497438  0.80286977  0.84822308  0.90221926]
NDCG4: [ 0.74422925  0.76757155  0.80483188  0.84979829  0.90372318]
Iteration 14 [16.3 s]: ranku_loss = 0.663477 [14.61 s],
NDCG1: [ 0.73189384  0.76167535  0.80068283  0.84684936  0.90081345]
NDCG2: [ 0.74621111  0.76917845  0.80545659  0.85056567  0.90430757]
NDCG3: [ 0.73189384  0.76167535  0.80068283  0.84684936  0.90081345]
NDCG4: [ 0.74621111  0.76917845  0.80545659  0.85056567  0.90430757]
Iteration 15 [16.4 s]: ranku_loss = 0.660095 [14.58 s],
NDCG1: [ 0.72397926  0.75765903  0.79779176  0.84464686  0.89889457]
NDCG2: [ 0.7458906   0.76978257  0.80508585  0.85051878  0.90430745]
NDCG3: [ 0.72397926  0.75765903  0.79779176  0.84464686  0.89889457]
NDCG4: [ 0.7458906   0.76978257  0.80508585  0.85051878  0.90430745]
End. Best Model is model2.
Test_NDCG:
[ 0.7403109   0.72966776  0.72430569  0.7236501   0.72501493  0.72848884
  0.73293136  0.73928766  0.74651679  0.75469231]
Test_NDCG By model1:
[ 0.67369611  0.67429695  0.67757505  0.68202704  0.68769414  0.69427099
  0.70141103  0.71001135  0.71892279  0.72893337]

