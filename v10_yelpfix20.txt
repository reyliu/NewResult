1. With rating initialization
liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v10_2Embed_2MLPshare/MLP.py --learner adam --lr 0.0001 --batch_size_random 1000000 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1000000, epochs=20, layers='[64,32,16,8]', learner='adam', lr=0.0001, path='Data/yelpfix20/', reg_layers='[0,0,0,0]', verbose=1) 
Load data done [63.2 s]. #user=7486, #item=12922, #train_user=2844680, #train_item=4439778, #test=343504
Time: [16.7], Init: 
Init_NDCG: [ 0.55310866  0.55457094  0.55832355  0.56534856  0.57174573  0.5797157
  0.59023141  0.60116805  0.61314048  0.62666872]
RatingInit_NDCG: [ 0.5550998   0.5593951   0.5627571   0.56882286  0.57502947  0.58306317
  0.59264894  0.60319485  0.61533787  0.62888509]
Iteration 0 [43.1 s]: rank_loss = 0.644728 [17.33 s],
NDCG: [ 0.75900386  0.74565214  0.73952591  0.73628283  0.73624999  0.73833912
  0.74180257  0.74765516  0.75434642  0.76226061]
Iteration 0 [51.4 s]: rank_loss = 0.654671 [13.01 s],
NDCG: [ 0.72427294  0.71217009  0.70928954  0.70819923  0.70958807  0.71421311
  0.71952235  0.72544966  0.73340685  0.74265573]
Iteration 1 [32.3 s]: rank_loss = 0.623781 [13.03 s],
NDCG: [ 0.74063782  0.72918775  0.72415942  0.72163095  0.72345575  0.72589211
  0.72982943  0.73539277  0.7428241   0.75123236]
Iteration 1 [53.1 s]: rank_loss = 0.640584 [13.00 s],
NDCG: [ 0.71592014  0.70000564  0.69423407  0.69331159  0.69503795  0.69962584
  0.70447785  0.71186952  0.72006668  0.72899958]
Iteration 2 [31.9 s]: rank_loss = 0.621866 [12.98 s],
NDCG: [ 0.73851544  0.72957813  0.72492777  0.72434834  0.72484064  0.72854577
  0.73353288  0.73947174  0.74646867  0.75497646]
Iteration 2 [55.0 s]: rank_loss = 0.639539 [13.01 s],
NDCG: [ 0.73378288  0.72752562  0.72309894  0.72254373  0.72465143  0.72836613
  0.73259098  0.73831845  0.74609592  0.75459524]
Iteration 3 [32.1 s]: rank_loss = 0.619937 [12.96 s],
NDCG: [ 0.74139048  0.73065964  0.72661073  0.72506839  0.7261671   0.72997294
  0.7347848   0.74085553  0.74867434  0.75700275]
Iteration 3 [55.1 s]: rank_loss = 0.638413 [13.02 s],
NDCG: [ 0.74272631  0.73193976  0.7270335   0.72561282  0.72715473  0.7307162
  0.73542194  0.74130985  0.74880356  0.75703471]
Iteration 4 [32.0 s]: rank_loss = 0.619488 [12.98 s],
NDCG: [ 0.73755881  0.72939476  0.72462161  0.72420758  0.72660404  0.7301114
  0.73523403  0.74147653  0.7490828   0.75729781]
Iteration 4 [56.1 s]: rank_loss = 0.638767 [13.01 s],
NDCG: [ 0.73331002  0.7271646   0.72277839  0.72163735  0.72342598  0.72661355
  0.7320029   0.73876783  0.74615867  0.75477626]
Iteration 5 [32.0 s]: rank_loss = 0.619862 [12.94 s],
NDCG: [ 0.7346516   0.7267223   0.72350708  0.72216933  0.72484697  0.72849906
  0.73352804  0.73987481  0.74777039  0.7563383 ]
Iteration 5 [56.4 s]: rank_loss = 0.638512 [13.06 s],
NDCG: [ 0.73052978  0.72307264  0.71889531  0.71818008  0.72020705  0.72518075
  0.72953437  0.73568391  0.74374886  0.75239399]
Iteration 6 [34.7 s]: rank_loss = 0.619249 [14.67 s],
NDCG: [ 0.7356065   0.72851958  0.72340195  0.72364866  0.72548463  0.72915357
  0.7345489   0.74087814  0.74862297  0.75695032]
Iteration 6 [60.5 s]: rank_loss = 0.638692 [14.62 s],
NDCG: [ 0.73305607  0.72624561  0.72141278  0.72145134  0.72336117  0.72716222
  0.7320832   0.73823278  0.74590198  0.75436905]
Iteration 7 [34.6 s]: rank_loss = 0.619365 [14.65 s],
NDCG: [ 0.73614083  0.72839474  0.72419354  0.72358316  0.72575731  0.72981266
  0.7350893   0.7412093   0.74891319  0.75711481]
Iteration 7 [58.3 s]: rank_loss = 0.638852 [13.06 s],
NDCG: [ 0.73510147  0.72616146  0.72299633  0.72189366  0.72336178  0.7278365
  0.73280283  0.73927426  0.74692858  0.75572658]
Iteration 8 [31.7 s]: rank_loss = 0.618734 [13.02 s],
NDCG: [ 0.7378909   0.72901355  0.72449841  0.72354448  0.72584628  0.72960777
  0.73446516  0.74068203  0.74828517  0.75673194]
Iteration 8 [56.2 s]: rank_loss = 0.639086 [13.02 s],
NDCG: [ 0.73462517  0.72719182  0.72198412  0.72132959  0.72311423  0.72744356
  0.73174593  0.73756128  0.74554406  0.75409694]
Iteration 9 [34.0 s]: rank_loss = 0.619172 [13.73 s],
NDCG: [ 0.73481649  0.72876408  0.72438431  0.72369606  0.7259601   0.72996746
  0.73471593  0.74089129  0.74847767  0.75686793]
Iteration 9 [58.8 s]: rank_loss = 0.638558 [13.26 s],
NDCG: [ 0.72943929  0.72410352  0.72121141  0.7208993   0.7226743   0.72747736
  0.73298888  0.73936148  0.74664105  0.75505341]
Iteration 10 [31.1 s]: rank_loss = 0.618292 [12.79 s],
NDCG: [ 0.73533186  0.72842791  0.72472891  0.72414505  0.72593607  0.72997634
  0.73520886  0.74130529  0.74878237  0.75774149]
Iteration 10 [55.8 s]: rank_loss = 0.637986 [12.89 s],
NDCG: [ 0.7354393   0.72732074  0.72322044  0.72313366  0.72492064  0.72917837
  0.73440937  0.74032613  0.74807396  0.75653291]
Iteration 11 [31.7 s]: rank_loss = 0.617726 [12.81 s],
NDCG: [ 0.73646085  0.72793094  0.72472978  0.72504153  0.72658913  0.73064248
  0.73494493  0.74144871  0.74886069  0.75717455]
Iteration 11 [56.5 s]: rank_loss = 0.638538 [13.05 s],
NDCG: [ 0.73490267  0.72754042  0.72424885  0.72328036  0.72513178  0.72905028
  0.73368499  0.73996842  0.74788894  0.75618364]
Iteration 12 [31.6 s]: rank_loss = 0.618326 [12.79 s],
NDCG: [ 0.73621667  0.72927954  0.7251987   0.72555695  0.72673442  0.73002995
  0.73542924  0.74173387  0.74905595  0.75744359]
Iteration 12 [56.0 s]: rank_loss = 0.638390 [12.78 s],
NDCG: [ 0.73296874  0.72693504  0.72372962  0.72297042  0.72447579  0.7284559
  0.73319664  0.73935095  0.74708036  0.75547564]
Iteration 13 [31.7 s]: rank_loss = 0.618416 [12.79 s],
NDCG: [ 0.7377938   0.72908211  0.72596226  0.72544259  0.7265929   0.73071805
  0.73537592  0.74131715  0.7489512   0.75763047]
Iteration 13 [56.4 s]: rank_loss = 0.638250 [12.75 s],
NDCG: [ 0.73313306  0.72744346  0.72340837  0.72291673  0.72457179  0.7281553
  0.73360269  0.7399779   0.74691269  0.75540315]
Iteration 14 [31.2 s]: rank_loss = 0.618142 [12.80 s],
NDCG: [ 0.73413048  0.72683954  0.72431364  0.72457169  0.72610852  0.72980703
  0.73470919  0.7411531   0.74836918  0.75695123]
Iteration 14 [56.5 s]: rank_loss = 0.637901 [12.75 s],
NDCG: [ 0.73445682  0.72753087  0.72345879  0.72398897  0.72555627  0.72944907
  0.7345601   0.74008139  0.74760261  0.75626875]
Iteration 15 [31.8 s]: rank_loss = 0.617481 [12.75 s],
NDCG: [ 0.73643557  0.72945683  0.72581793  0.72488602  0.72686632  0.73059393
  0.73604784  0.74212275  0.74948124  0.7576358 ]
Iteration 15 [56.0 s]: rank_loss = 0.638126 [12.79 s],
NDCG: [ 0.73739679  0.72850048  0.72429368  0.72348611  0.7253538   0.72948622
  0.7345899   0.74104895  0.74872759  0.75680352]
Iteration 16 [31.3 s]: rank_loss = 0.617677 [12.79 s],
NDCG: [ 0.73530486  0.72792461  0.72540766  0.72528075  0.72725725  0.73084207
  0.7359604   0.74206678  0.7495745   0.7574958 ]
Iteration 16 [55.9 s]: rank_loss = 0.638127 [12.93 s],
NDCG: [ 0.73237466  0.72438086  0.72282672  0.72307509  0.72541128  0.72878054
  0.73393178  0.73988143  0.74755268  0.75568005]
Iteration 17 [31.2 s]: rank_loss = 0.617974 [12.76 s],
NDCG: [ 0.73413335  0.72780371  0.725076    0.72525217  0.72679516  0.72987144
  0.73517733  0.74176117  0.74923163  0.75721433]
Iteration 17 [56.1 s]: rank_loss = 0.637816 [12.77 s],
NDCG: [ 0.73448785  0.72822226  0.72450443  0.72397848  0.72585459  0.72906087
  0.73426485  0.74063322  0.74775716  0.75613405]
Iteration 18 [31.5 s]: rank_loss = 0.618039 [12.79 s],
NDCG: [ 0.73364039  0.72707114  0.72447438  0.72490783  0.72671508  0.73034405
  0.73518955  0.74119456  0.7486803   0.75738245]
Iteration 18 [56.2 s]: rank_loss = 0.638036 [13.22 s],
NDCG: [ 0.7321638   0.72545486  0.72338507  0.7231717   0.72483032  0.72897557
  0.73441974  0.73989957  0.74793789  0.75626524]
Iteration 19 [33.2 s]: rank_loss = 0.617691 [17.93 s],
NDCG: [ 0.73375185  0.72841726  0.72522351  0.72528109  0.7269669   0.73146288
  0.73592353  0.74191569  0.74953342  0.75782252]
Iteration 19 [62.0 s]: rank_loss = 0.637981 [14.82 s],
NDCG: [ 0.73378805  0.72770269  0.72418875  0.72373405  0.72557172  0.73002677
  0.73462368  0.74052958  0.74793251  0.75638945]
End. Best Iteration 0.

liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v10_2Embed_2MLPshare/ML --learner adam --lr 0.0001 --batch_size_random 1000000 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1000000, epochs=20, layers='[64,32,16,8]', learner='adam', lr=0.0001, path='Data/yelpfix20/', reg_layers='[0,0,0,0]', verbose=1) 
Load data done [60.1 s]. #user=7486, #item=12922, #train_user=2844680, #train_item=4439778, #test=343504
Time: [15.7], Init: 
Init_NDCG: [ 0.54400427  0.54872625  0.55400146  0.56126991  0.56978067  0.57890569
  0.58917102  0.60116572  0.61263081  0.62584287]
RatingInit_NDCG: [ 0.54521197  0.54976714  0.55612682  0.56280138  0.57033434  0.5790888
  0.58961614  0.60058339  0.61250334  0.62538869]
Iteration 0 [40.7 s]: rank_loss = 0.641174 [15.43 s],
NDCG: [ 0.75899697  0.74243428  0.73604759  0.73301757  0.73328711  0.73651457
  0.74097735  0.74669371  0.75388465  0.76187333]
Iteration 0 [48.1 s]: rank_loss = 0.650734 [13.21 s],
NDCG: [ 0.73087508  0.72021581  0.71571922  0.71513361  0.71717609  0.7215973
  0.72639722  0.73245465  0.73966403  0.74849334]
Iteration 1 [32.7 s]: rank_loss = 0.622818 [13.72 s],
NDCG: [ 0.74332039  0.73630063  0.73011009  0.72928724  0.73177438  0.73452134
  0.73921083  0.74527606  0.75251197  0.76063222]
Iteration 1 [57.0 s]: rank_loss = 0.640306 [14.60 s],
NDCG: [ 0.73986505  0.7320978   0.72826362  0.72680713  0.72838733  0.7317497
  0.73647737  0.7429029   0.74992798  0.75831041]
Iteration 2 [35.1 s]: rank_loss = 0.621040 [14.51 s],
NDCG: [ 0.74404318  0.7337124   0.72951311  0.72895332  0.73125743  0.73464152
  0.73937028  0.74506628  0.75248959  0.76065917]
Iteration 2 [59.5 s]: rank_loss = 0.639241 [14.65 s],
NDCG: [ 0.74162777  0.73236589  0.72846768  0.72691388  0.72872105  0.73163934
  0.73622835  0.74244271  0.74997142  0.7582218 ]
Iteration 3 [33.5 s]: rank_loss = 0.619954 [13.06 s],
NDCG: [ 0.74034308  0.73357212  0.72925055  0.72850487  0.73019521  0.73362163
  0.73837141  0.74448895  0.75163324  0.75986858]
Iteration 3 [56.3 s]: rank_loss = 0.639048 [13.06 s],
NDCG: [ 0.74113481  0.73083401  0.72684628  0.7260412   0.72785567  0.73133698
  0.73664984  0.74288423  0.74985682  0.75793208]
Iteration 4 [32.8 s]: rank_loss = 0.619803 [13.02 s],
NDCG: [ 0.73861081  0.73117421  0.72790097  0.72718124  0.72915715  0.73258679
  0.73781782  0.74436754  0.75164956  0.75995069]
Iteration 4 [57.1 s]: rank_loss = 0.639327 [13.12 s],
NDCG: [ 0.73742667  0.7298938   0.72596909  0.7257006   0.72743044  0.73086532
  0.73559814  0.74230207  0.74972833  0.75811718]
Iteration 5 [32.5 s]: rank_loss = 0.619301 [13.11 s],
NDCG: [ 0.73979898  0.73184938  0.72872073  0.72790644  0.72942508  0.73291867
  0.73787046  0.74382677  0.75093663  0.7591536 ]
Iteration 5 [60.0 s]: rank_loss = 0.639486 [13.86 s],
NDCG: [ 0.73784494  0.7294728   0.725796    0.72466598  0.72705392  0.73033331
  0.735713    0.74199746  0.74880868  0.75702464]
Iteration 6 [35.5 s]: rank_loss = 0.619172 [15.37 s],
NDCG: [ 0.74010292  0.73288659  0.72995106  0.72835306  0.73000927  0.7333983
  0.73835872  0.74453041  0.75189395  0.75997721]
Iteration 6 [57.7 s]: rank_loss = 0.638789 [13.08 s],
NDCG: [ 0.73905322  0.73063545  0.7277515   0.72622393  0.72815     0.73173595
  0.73661641  0.74309265  0.75038502  0.75857386]
Iteration 7 [33.0 s]: rank_loss = 0.619252 [13.11 s],
NDCG: [ 0.74038157  0.73086018  0.72831215  0.72779997  0.72935635  0.73232494
  0.73785693  0.74421995  0.75138427  0.75964247]
Iteration 7 [58.0 s]: rank_loss = 0.638700 [13.11 s],
NDCG: [ 0.73674813  0.73026536  0.72642382  0.7257572   0.72726243  0.73064803
  0.73565697  0.74204275  0.74927594  0.75777422]
Iteration 8 [32.4 s]: rank_loss = 0.618687 [13.12 s],
NDCG: [ 0.74046201  0.73111987  0.72862813  0.72768031  0.72963229  0.73293351
  0.73762647  0.74366945  0.75101     0.75905955]
Iteration 8 [58.9 s]: rank_loss = 0.638637 [14.24 s],
NDCG: [ 0.73707504  0.72953688  0.7260657   0.72558917  0.72783845  0.73067902
  0.73588666  0.74232458  0.74961964  0.75790822]
Iteration 9 [36.1 s]: rank_loss = 0.618556 [15.73 s],
NDCG: [ 0.73774439  0.73184908  0.72721229  0.72746088  0.72923006  0.7331227
  0.73722193  0.74370345  0.7511635   0.75956405]
Iteration 9 [61.0 s]: rank_loss = 0.638365 [13.28 s],
NDCG: [ 0.73561684  0.72977565  0.72677022  0.72568585  0.72760878  0.73193055
  0.73658951  0.74292433  0.75051121  0.75794077]
Iteration 10 [33.1 s]: rank_loss = 0.618633 [13.29 s],
NDCG: [ 0.73551572  0.73142174  0.72828589  0.72744953  0.72947485  0.73289378
  0.73764347  0.74366883  0.75095862  0.75944627]
Iteration 10 [57.8 s]: rank_loss = 0.637833 [13.49 s],
NDCG: [ 0.73520833  0.72996237  0.72632622  0.72611435  0.72742727  0.73120355
  0.73647484  0.74253175  0.74976143  0.75814487]
Iteration 11 [32.2 s]: rank_loss = 0.618388 [13.02 s],
NDCG: [ 0.73904517  0.7323171   0.72797061  0.72707664  0.72836236  0.73306338
  0.73830874  0.74407546  0.75150507  0.75990165]
Iteration 11 [57.7 s]: rank_loss = 0.637824 [13.22 s],
NDCG: [ 0.73771107  0.73154938  0.72725791  0.72624103  0.72805289  0.73171781
  0.73733039  0.74343318  0.75064034  0.75900403]
Iteration 12 [32.6 s]: rank_loss = 0.617788 [13.02 s],
NDCG: [ 0.73877916  0.73242702  0.7287519   0.72806315  0.72970801  0.73322399
  0.7379244   0.74406279  0.75162443  0.76021218]
Iteration 12 [57.1 s]: rank_loss = 0.638122 [13.32 s],
NDCG: [ 0.73745597  0.73010665  0.726853    0.72616506  0.72821959  0.73186632
  0.73664505  0.74315062  0.75006359  0.75861248]
Iteration 13 [32.4 s]: rank_loss = 0.617944 [13.22 s],
NDCG: [ 0.73898542  0.73235456  0.72834757  0.72759725  0.73020352  0.73397636
  0.7384445   0.74443794  0.75193577  0.76015914]
Iteration 13 [57.7 s]: rank_loss = 0.637982 [13.24 s],
NDCG: [ 0.73653382  0.73014211  0.72675889  0.72676348  0.72838389  0.73208905
  0.73724547  0.7435785   0.75125403  0.75917902]
Iteration 14 [32.1 s]: rank_loss = 0.617820 [13.22 s],
NDCG: [ 0.74099289  0.7324063   0.72776526  0.72861815  0.73004985  0.73377874
  0.73809626  0.74443436  0.75165023  0.75990661]
Iteration 14 [57.3 s]: rank_loss = 0.638364 [13.09 s],
NDCG: [ 0.73941518  0.73173427  0.72779092  0.72793354  0.72901245  0.73296915
  0.73777453  0.74390012  0.75106417  0.75970789]
Iteration 15 [32.0 s]: rank_loss = 0.617873 [13.11 s],
NDCG: [ 0.73859185  0.73178726  0.72806814  0.72760803  0.72992605  0.73290024
  0.73770629  0.74412359  0.75143246  0.75978754]
Iteration 15 [57.2 s]: rank_loss = 0.638458 [13.06 s],
NDCG: [ 0.73970246  0.73094744  0.72702098  0.72729843  0.72961818  0.73268834
  0.73749776  0.74366479  0.75123986  0.75934337]
Iteration 16 [32.2 s]: rank_loss = 0.617793 [13.12 s],
NDCG: [ 0.73622126  0.73022042  0.72789503  0.72724188  0.7284393   0.73222772
  0.73756077  0.74383099  0.75104722  0.75925005]
Iteration 16 [57.5 s]: rank_loss = 0.637465 [13.12 s],
NDCG: [ 0.73681937  0.7300882   0.72721883  0.72670911  0.72800405  0.73203763
  0.73707225  0.74298037  0.75048015  0.75875174]
Iteration 17 [32.1 s]: rank_loss = 0.617750 [13.07 s],
NDCG: [ 0.73893199  0.73259481  0.72812687  0.72806774  0.72905111  0.7331498
  0.73848539  0.74434143  0.75162701  0.7599811 ]
Iteration 17 [57.5 s]: rank_loss = 0.638077 [13.05 s],
NDCG: [ 0.73750136  0.73210248  0.72742931  0.72726396  0.72923707  0.73255536
  0.73743776  0.74357388  0.75091499  0.75936052]
Iteration 18 [32.1 s]: rank_loss = 0.617445 [13.03 s],
NDCG: [ 0.73978519  0.7331293   0.7287967   0.72874308  0.73013807  0.73397909
  0.73848759  0.74450972  0.75174375  0.76029304]
Iteration 18 [57.1 s]: rank_loss = 0.637887 [13.26 s],
NDCG: [ 0.73855393  0.73223872  0.72832701  0.72721261  0.72956956  0.73346719
  0.73781579  0.74393123  0.75107921  0.75974631]
Iteration 19 [32.4 s]: rank_loss = 0.617688 [13.06 s],
NDCG: [ 0.74010866  0.73327987  0.72913324  0.72862489  0.73062328  0.73419739
  0.73902232  0.7446257   0.75204944  0.7603876 ]
Iteration 19 [57.7 s]: rank_loss = 0.638000 [13.04 s],
NDCG: [ 0.73764902  0.7317785   0.72802006  0.72795891  0.72917402  0.73262687
  0.73792173  0.74407783  0.75090475  0.75934344]
End. Best Iteration 0.




2. Without rating initialization
liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v10_2Embed_2MLPshare/MLP.py --learner adam --lr 0.0001 --batch_size_random 1000000 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1000000, epochs=20, layers='[64,32,16,8]', learner='adam', lr=0.0001, path='Data/yelpfix20/', reg_layers='[0,0,0,0]', verbose=1) 
Load data done [60.6 s]. #user=7486, #item=12922, #train_user=2844680, #train_item=4439778, #test=343504
Time: [15.8], Init: 
Init_NDCG: [ 0.53500749  0.54216572  0.54888804  0.55601312  0.56420568  0.57424401
  0.58501205  0.59661026  0.60896304  0.62256859]
Iteration 0 [38.9 s]: rank_loss = 0.641218 [14.51 s],
NDCG: [ 0.74204432  0.73273038  0.72914404  0.7287415   0.73017686  0.73303537
  0.73830641  0.74373833  0.75112309  0.75953478]
Iteration 0 [51.0 s]: rank_loss = 0.648673 [13.77 s],
NDCG: [ 0.71847598  0.7098445   0.70368466  0.70348116  0.70552592  0.70933513
  0.71505413  0.72206666  0.73004056  0.73928517]
Iteration 1 [36.1 s]: rank_loss = 0.624751 [15.92 s],
NDCG: [ 0.74293774  0.73461789  0.72983968  0.72876971  0.73000774  0.73350634
  0.73855521  0.74483388  0.75192055  0.7602555 ]
Iteration 1 [58.8 s]: rank_loss = 0.640590 [13.29 s],
NDCG: [ 0.73969212  0.73074784  0.72647171  0.72562095  0.72699434  0.73065151
  0.73513304  0.74105677  0.74854185  0.75691666]
Iteration 2 [32.8 s]: rank_loss = 0.620609 [13.32 s],
NDCG: [ 0.74404835  0.73484088  0.72982019  0.72924007  0.72963449  0.73328726
  0.73857986  0.74465895  0.75189844  0.76026779]
Iteration 2 [56.2 s]: rank_loss = 0.639246 [13.27 s],
NDCG: [ 0.73950826  0.72798043  0.72332537  0.72353598  0.725047    0.72824543
  0.7333623   0.73959211  0.74699211  0.75542182]
Iteration 3 [32.3 s]: rank_loss = 0.620263 [13.24 s],
NDCG: [ 0.74039421  0.73281373  0.72939514  0.72828561  0.72986233  0.73277336
  0.73787193  0.74399417  0.75093154  0.75984669]
Iteration 3 [59.7 s]: rank_loss = 0.638721 [16.33 s],
NDCG: [ 0.73866942  0.72807914  0.72418971  0.72409689  0.72579784  0.72949392
  0.73422248  0.74032282  0.7475284   0.75594766]
Iteration 4 [35.9 s]: rank_loss = 0.620090 [15.00 s],
NDCG: [ 0.74351746  0.7340333   0.72947449  0.72898178  0.72994857  0.73368024
  0.73914701  0.74519805  0.75262069  0.76057545]
Iteration 4 [61.5 s]: rank_loss = 0.638936 [15.10 s],
NDCG: [ 0.73458667  0.72913839  0.72411791  0.72231463  0.7245831   0.72828257
  0.73405981  0.74037929  0.74766213  0.75597847]
Iteration 5 [36.0 s]: rank_loss = 0.619868 [13.90 s],
NDCG: [ 0.7403645   0.73258947  0.7286554   0.72808983  0.72975466  0.73318709
  0.73823377  0.74451566  0.7513899   0.75979407]
Iteration 5 [59.1 s]: rank_loss = 0.638693 [13.68 s],
NDCG: [ 0.73835112  0.73177651  0.72726979  0.72619998  0.72764303  0.73102638
  0.73605569  0.74201652  0.74958924  0.75800047]
Iteration 6 [33.6 s]: rank_loss = 0.619498 [13.61 s],
NDCG: [ 0.7398053   0.7321196   0.72860096  0.72833593  0.72986366  0.73386023
  0.7389073   0.74469068  0.75189864  0.76008871]
Iteration 6 [58.6 s]: rank_loss = 0.638613 [13.73 s],
NDCG: [ 0.738593    0.72864145  0.72435453  0.72310212  0.7251246   0.72963942
  0.73423251  0.74088537  0.7484169   0.75698186]
Iteration 7 [33.2 s]: rank_loss = 0.619372 [13.50 s],
NDCG: [ 0.74287742  0.73290754  0.72951032  0.72846953  0.72924917  0.73334543
  0.73863693  0.74476537  0.75128152  0.75986804]
Iteration 7 [59.1 s]: rank_loss = 0.638685 [13.40 s],
NDCG: [ 0.74115795  0.73235711  0.72781622  0.72677398  0.72800152  0.73194745
  0.73691058  0.74272002  0.74996543  0.75831522]
Iteration 8 [33.0 s]: rank_loss = 0.618913 [13.78 s],
NDCG: [ 0.74034825  0.73321824  0.72805334  0.72738839  0.7294697   0.73331207
  0.73806266  0.74413915  0.75113063  0.76004896]
Iteration 8 [58.0 s]: rank_loss = 0.638316 [13.22 s],
NDCG: [ 0.73672514  0.728985    0.72608123  0.72521816  0.72767323  0.73072613
  0.73558333  0.74144545  0.74917975  0.75740132]
Iteration 9 [32.2 s]: rank_loss = 0.619326 [13.31 s],
NDCG: [ 0.73834595  0.73166039  0.7288255   0.72856283  0.73004173  0.73353641
  0.73815536  0.74440908  0.75180644  0.76007784]
Iteration 9 [57.3 s]: rank_loss = 0.638194 [13.19 s],
NDCG: [ 0.74000122  0.73086102  0.72623083  0.72592966  0.72764004  0.73146169
  0.73687234  0.74321129  0.75036166  0.75835656]
Iteration 10 [32.1 s]: rank_loss = 0.619008 [13.17 s],
NDCG: [ 0.74103541  0.73296659  0.72873403  0.72859366  0.73006194  0.73336893
  0.73815025  0.74443882  0.75192827  0.76021367]
Iteration 10 [57.3 s]: rank_loss = 0.637862 [13.12 s],
NDCG: [ 0.74369787  0.73072224  0.72681161  0.7269517   0.72829374  0.73167025
  0.73649953  0.74285315  0.75048299  0.75893777]
Iteration 11 [32.7 s]: rank_loss = 0.618506 [13.24 s],
NDCG: [ 0.73894463  0.73328728  0.72814655  0.72778744  0.7288006   0.73324653
  0.7383453   0.74432635  0.75153731  0.76000982]
Iteration 11 [57.7 s]: rank_loss = 0.638116 [13.66 s],
NDCG: [ 0.73746114  0.7301749   0.72475789  0.72509901  0.72764771  0.73056389
  0.73549162  0.74181464  0.74910994  0.75736037]
Iteration 12 [32.3 s]: rank_loss = 0.618737 [13.16 s],
NDCG: [ 0.74103082  0.73358246  0.72951884  0.72895507  0.72961137  0.73388226
  0.7387193   0.74501142  0.75219486  0.76067329]
Iteration 12 [57.4 s]: rank_loss = 0.638107 [13.16 s],
NDCG: [ 0.74242352  0.73297571  0.7280173   0.72743926  0.72870001  0.73316998
  0.73800191  0.74395104  0.75113612  0.75937483]
Iteration 13 [32.5 s]: rank_loss = 0.617838 [13.16 s],
NDCG: [ 0.74118537  0.73359811  0.72940558  0.72865809  0.73038588  0.73378498
  0.73840118  0.74438144  0.75213732  0.76051622]
Iteration 13 [57.7 s]: rank_loss = 0.638407 [13.32 s],
NDCG: [ 0.74173751  0.73144132  0.72711323  0.72681442  0.72876377  0.73284162
  0.73723018  0.74312775  0.7502905   0.75880804]
Iteration 14 [34.5 s]: rank_loss = 0.618052 [14.98 s],
NDCG: [ 0.7409567   0.73279064  0.7278947   0.72794601  0.7292757   0.73342303
  0.73783899  0.74400258  0.75156715  0.75985797]
Iteration 14 [59.1 s]: rank_loss = 0.637803 [13.38 s],
NDCG: [ 0.74331407  0.73340376  0.7278816   0.72602479  0.72775673  0.73128432
  0.73612743  0.74268889  0.75043731  0.75881249]
Iteration 15 [33.4 s]: rank_loss = 0.618410 [16.36 s],
NDCG: [ 0.74287857  0.7347496   0.72877188  0.72843429  0.73055     0.73397262
  0.73909043  0.7451687   0.75234097  0.76077451]
Iteration 15 [63.5 s]: rank_loss = 0.638169 [16.21 s],
NDCG: [ 0.74157434  0.73244349  0.72730804  0.72636647  0.72794588  0.73175378
  0.73675846  0.74302846  0.74986316  0.75850603]
Iteration 16 [36.7 s]: rank_loss = 0.618386 [16.39 s],
NDCG: [ 0.74293717  0.73284044  0.72906216  0.72888345  0.73044153  0.73388876
  0.7385472   0.74505888  0.75246794  0.76081149]
Iteration 16 [63.6 s]: rank_loss = 0.637827 [16.07 s],
NDCG: [ 0.74116871  0.73206745  0.72752062  0.72653396  0.72819941  0.73215373
  0.73723308  0.74359869  0.75064934  0.75870017]
Iteration 17 [36.6 s]: rank_loss = 0.617935 [16.30 s],
NDCG: [ 0.74025173  0.73265818  0.72905617  0.72844897  0.73011021  0.73309501
  0.7378525   0.74440981  0.75174038  0.76041405]
Iteration 17 [62.9 s]: rank_loss = 0.638101 [14.82 s],
NDCG: [ 0.73864988  0.729639    0.72555957  0.72568976  0.72752565  0.731407
  0.73651197  0.7426087   0.7497101   0.75817041]
Iteration 18 [35.3 s]: rank_loss = 0.618108 [14.20 s],
NDCG: [ 0.74091763  0.73261847  0.72873534  0.72806922  0.72920723  0.73352002
  0.7380254   0.74474256  0.75195478  0.76040431]
Iteration 18 [64.0 s]: rank_loss = 0.637767 [16.74 s],
NDCG: [ 0.73759673  0.73083431  0.72567523  0.72617135  0.72748796  0.73107985
  0.73611991  0.74235867  0.74945398  0.75767466]
Iteration 19 [36.6 s]: rank_loss = 0.618011 [15.84 s],
NDCG: [ 0.74048787  0.73295837  0.7292236   0.72878403  0.7295081   0.73312746
  0.73855585  0.74459306  0.75170414  0.76023034]
Iteration 19 [62.8 s]: rank_loss = 0.638449 [15.13 s],
NDCG: [ 0.7349584   0.72834152  0.72555455  0.72536548  0.72707882  0.73133774
  0.73614309  0.74231747  0.75000444  0.75833951]
End. Best Iteration 16.



3. only update for rank_u with rating initialization
liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v10_2Embed_2MLPshare/MLP.py --learner adam --lr 0.0001 --batch_size_random 1000000 --path Data/yelpfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1000000, epochs=20, layers='[64,32,16,8]', learner='adam', lr=0.0001, path='Data/yelpfix20/', reg_layers='[0,0,0,0]', verbose=1) 
Load data done [60.3 s]. #user=7486, #item=12922, #train_user=2844680, #train_item=4439778, #test=343504
Time: [17.1], Init: 
Init_NDCG: [ 0.55962479  0.5615001   0.56493666  0.5715766   0.57819582  0.58588674
  0.59486879  0.60584815  0.61779818  0.63107575]
RatingInit_NDCG: [ 0.56612466  0.56673821  0.56974181  0.57514125  0.5826522   0.59030172
  0.59965497  0.60989944  0.62156611  0.63473875]
Iteration 0 [37.3 s]: rank_loss = 0.640755 [13.28 s],
NDCG: [ 0.75369117  0.73966495  0.7353001   0.73319799  0.73400306  0.73687246
  0.74104371  0.74688178  0.75368763  0.76229693]
Iteration 1 [33.2 s]: rank_loss = 0.621665 [13.23 s],
NDCG: [ 0.75000125  0.73871627  0.73298067  0.73138832  0.73164833  0.73548162
  0.74020638  0.74621012  0.75309373  0.76125951]
Iteration 2 [56.4 s]: rank_loss = 0.620177 [13.25 s],
NDCG: [ 0.74917448  0.7380176   0.73350592  0.73190962  0.73309919  0.73569101
  0.74060642  0.74652891  0.75318919  0.76141778]
Iteration 3 [56.8 s]: rank_loss = 0.619851 [14.62 s],
NDCG: [ 0.74494752  0.73457284  0.73030163  0.72991085  0.73106865  0.73395936
  0.73881903  0.74497286  0.75224856  0.76029702]
Iteration 4 [73.1 s]: rank_loss = 0.619246 [14.16 s],
NDCG: [ 0.74198112  0.73350691  0.72921407  0.72832617  0.72987118  0.73367996
  0.73876287  0.74403828  0.75164196  0.76000882]
Iteration 5 [79.0 s]: rank_loss = 0.618826 [14.64 s],
NDCG: [ 0.74274987  0.73265196  0.72924177  0.72856379  0.73023332  0.73374181
  0.73866632  0.74455802  0.75181147  0.76060759]
Iteration 6 [75.7 s]: rank_loss = 0.619106 [14.33 s],
NDCG: [ 0.73966798  0.73198783  0.72771853  0.72706746  0.72897948  0.7329205
  0.73791731  0.74392989  0.75106158  0.75962307]
Iteration 7 [78.2 s]: rank_loss = 0.618267 [14.00 s],
NDCG: [ 0.73956916  0.73225572  0.72792921  0.72826648  0.72973557  0.73374803
  0.73844577  0.74451665  0.75127364  0.7599948 ]
Iteration 8 [69.8 s]: rank_loss = 0.618179 [13.07 s],
NDCG: [ 0.7367803   0.73226879  0.72785869  0.72771621  0.72863387  0.73244654
  0.73743388  0.74443297  0.75150455  0.75978256]
Iteration 9 [73.1 s]: rank_loss = 0.617754 [13.01 s],
NDCG: [ 0.73809315  0.7306926   0.72695304  0.72701876  0.72956664  0.73293483
  0.73824645  0.74435937  0.75170283  0.75988983]
Iteration 10 [73.1 s]: rank_loss = 0.618459 [13.10 s],
NDCG: [ 0.73474927  0.72918269  0.72598998  0.72612049  0.72900948  0.73268937
  0.73756242  0.74382111  0.75098965  0.75974648]
Iteration 11 [75.2 s]: rank_loss = 0.617881 [13.06 s],
NDCG: [ 0.74113711  0.73297     0.72849765  0.72808485  0.72998964  0.7339301
  0.73920467  0.74535184  0.75257241  0.76089961]
Iteration 12 [75.2 s]: rank_loss = 0.618032 [13.20 s],
NDCG: [ 0.73654991  0.73061953  0.72862117  0.72821802  0.73048232  0.73336002
  0.73828273  0.74447976  0.75181092  0.76016151]
Iteration 13 [76.8 s]: rank_loss = 0.617323 [13.19 s],
NDCG: [ 0.73787309  0.73254087  0.72912571  0.72855445  0.73022126  0.73366845
  0.73862135  0.74517685  0.75196991  0.76047335]
Iteration 14 [74.8 s]: rank_loss = 0.618081 [13.12 s],
NDCG: [ 0.73745827  0.73205998  0.72796028  0.7278598   0.72975426  0.73327254
  0.73793162  0.7440114   0.75148262  0.76018905]
Iteration 15 [74.9 s]: rank_loss = 0.617144 [13.02 s],
NDCG: [ 0.73816037  0.73254747  0.72757846  0.7285225   0.72987775  0.73325626
  0.73811134  0.74449189  0.75142907  0.75985597]
Iteration 16 [76.1 s]: rank_loss = 0.617192 [13.55 s],
NDCG: [ 0.74026839  0.73285134  0.72913504  0.72898174  0.73036737  0.73353052
  0.73861458  0.74446348  0.75200796  0.7602898 ]
Iteration 17 [76.1 s]: rank_loss = 0.617628 [15.44 s],
NDCG: [ 0.73849993  0.73163754  0.72796721  0.72854364  0.72948572  0.73327258
  0.73788367  0.74418673  0.7518344   0.76029548]
Iteration 18 [80.2 s]: rank_loss = 0.617372 [15.15 s],
NDCG: [ 0.7369768   0.73166082  0.72866808  0.72801613  0.72943977  0.73376665
  0.737952    0.74405872  0.75128626  0.75983383]
Iteration 19 [81.1 s]: rank_loss = 0.617524 [12.90 s],
NDCG: [ 0.73685844  0.73151094  0.72781588  0.72749397  0.72943501  0.73342394
  0.73802967  0.74417626  0.75151859  0.75999831]
End. Best Iteration 0.

