liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/moviefix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [368.9 s]. #user=49522, #item=8940, #train_user=29713200, #cv=247610, #test=7929676
Time: [247.9], Init: 
Init_NDCG1: [ 0.60259868  0.65300102  0.71301251  0.77917661  0.85551393]
Init_NDCG2: [ 0.60846131  0.66014655  0.71967316  0.7846242   0.85835718]
Init_NDCG3: [ 0.60215566  0.65557358  0.7155576   0.78149639  0.85635617]
Init_NDCG4: [ 0.60510802  0.65886921  0.71884292  0.78401834  0.85768398]
Iteration 0 [189.1 s]: ranku_loss = 0.938845 [244.12 s],
NDCG1: [ 0.75014077  0.78631134  0.82661858  0.86801335  0.91140422]
NDCG2: [ 0.75002312  0.78534429  0.82650061  0.86827628  0.91125058]
NDCG3: [ 0.75019726  0.78629335  0.82659091  0.8679714   0.91140339]
NDCG4: [ 0.75016971  0.7853415   0.82653848  0.86828454  0.91127585]
Iteration 1 [223.3 s]: ranku_loss = 0.639191 [243.76 s],
NDCG1: [ 0.76163467  0.79767434  0.83763857  0.8774345   0.916328  ]
NDCG2: [ 0.76187183  0.7970141   0.83746426  0.87720545  0.91622567]
NDCG3: [ 0.76167066  0.79764249  0.83756786  0.87742164  0.91631859]
NDCG4: [ 0.76178603  0.79697569  0.83748404  0.87722934  0.91621549]
Iteration 2 [205.6 s]: ranku_loss = 0.632043 [243.57 s],
NDCG1: [ 0.76192895  0.79796551  0.83878127  0.87824253  0.91663287]
NDCG2: [ 0.76078115  0.79750161  0.83814767  0.8779906   0.91633891]
NDCG3: [ 0.7617212   0.7979619   0.83864521  0.87820451  0.91658809]
NDCG4: [ 0.76055642  0.79746318  0.83818353  0.87798973  0.91631176]
Iteration 3 [205.7 s]: ranku_loss = 0.628517 [243.82 s],
NDCG1: [ 0.76237742  0.79844171  0.83888795  0.87842403  0.91678437]
NDCG2: [ 0.76017336  0.79678605  0.83796755  0.87803968  0.91617104]
NDCG3: [ 0.76241009  0.79841478  0.83902728  0.87847214  0.9168065 ]
NDCG4: [ 0.75994574  0.79663062  0.83798617  0.87797584  0.91612474]
Iteration 4 [206.2 s]: ranku_loss = 0.625625 [245.84 s],
NDCG1: [ 0.76289399  0.79891064  0.83930044  0.87864952  0.91697282]
NDCG2: [ 0.75830287  0.79617434  0.83770709  0.87769221  0.91580691]
NDCG3: [ 0.76308811  0.79881431  0.83917824  0.87861742  0.91696792]
NDCG4: [ 0.75795615  0.79602696  0.8376426   0.87758507  0.91573545]
Iteration 5 [205.8 s]: ranku_loss = 0.623876 [243.52 s],
NDCG1: [ 0.76373783  0.79933886  0.83936022  0.87901094  0.91718908]
NDCG2: [ 0.75756237  0.79509626  0.83707107  0.87729736  0.91550474]
NDCG3: [ 0.76313308  0.7991818   0.83904171  0.87884679  0.91702662]
NDCG4: [ 0.75689566  0.79440393  0.83668569  0.87694636  0.91526896]
Iteration 6 [206.0 s]: ranku_loss = 0.622067 [243.66 s],
NDCG1: [ 0.76185574  0.79911572  0.83957289  0.87897859  0.91694899]
NDCG2: [ 0.75744203  0.7950627   0.83717489  0.87734876  0.91550115]
NDCG3: [ 0.76144804  0.79853186  0.83892064  0.87856152  0.91671744]
NDCG4: [ 0.75538284  0.7940021   0.83618854  0.87659728  0.91492484]
End. Best Model is model1.
Test_NDCG:
[ 0.71654     0.71235361  0.70842877  0.70751362  0.7082352   0.70985764
  0.7120374   0.71471117  0.71799222  0.72140758]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/moviefix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [334.9 s]. #user=49522, #item=8940, #train_user=29713200, #cv=247610, #test=7929676
Time: [252.1], Init: 
Init_NDCG1: [ 0.59856692  0.65335521  0.71427648  0.7801409   0.85529363]
Init_NDCG2: [ 0.61231993  0.66316018  0.72188481  0.78578533  0.85964386]
Init_NDCG3: [ 0.60279688  0.65801426  0.71805486  0.78398822  0.85722668]
Init_NDCG4: [ 0.59985699  0.65400383  0.71427556  0.78000052  0.85555554]
Iteration 0 [195.0 s]: ranku_loss = 0.975006 [251.28 s],
NDCG1: [ 0.72217773  0.76030611  0.80447804  0.84986691  0.9005455 ]
NDCG2: [ 0.49793554  0.56072823  0.63365716  0.71610726  0.81694599]
NDCG3: [ 0.72216552  0.76023694  0.80446031  0.84989459  0.900539  ]
NDCG4: [ 0.49572707  0.55883778  0.63149271  0.71448885  0.81605841]
Iteration 1 [204.9 s]: ranku_loss = 0.690742 [249.39 s],
NDCG1: [ 0.74155039  0.77866266  0.82120209  0.86371217  0.90831697]
NDCG2: [ 0.48421773  0.55415962  0.63078152  0.71583493  0.81426372]
NDCG3: [ 0.74154888  0.77858783  0.82119622  0.86368362  0.90829956]
NDCG4: [ 0.46689181  0.53727426  0.61421482  0.70123802  0.80698635]
Iteration 2 [207.4 s]: ranku_loss = 0.661133 [250.96 s],
NDCG1: [ 0.75953045  0.79482482  0.83596479  0.87572691  0.9154059 ]
NDCG2: [ 0.76059675  0.794879    0.83524039  0.87497827  0.91536466]
NDCG3: [ 0.75951217  0.79481071  0.83594944  0.87572288  0.91540247]
NDCG4: [ 0.74514477  0.77407276  0.81150985  0.85383929  0.90615036]
Iteration 3 [208.4 s]: ranku_loss = 0.636379 [250.57 s],
NDCG1: [ 0.76184087  0.79776474  0.8384614   0.87805145  0.91653819]
NDCG2: [ 0.76084517  0.79658381  0.83764032  0.87731861  0.91610605]
NDCG3: [ 0.7619152   0.79778548  0.83840888  0.87799446  0.91654037]
NDCG4: [ 0.73717616  0.76829207  0.80745816  0.85164563  0.90379368]
Iteration 4 [209.5 s]: ranku_loss = 0.631121 [254.83 s],
NDCG1: [ 0.76218912  0.79839835  0.83894335  0.8787554   0.91680061]
NDCG2: [ 0.75989048  0.79656189  0.83789237  0.87784298  0.91608666]
NDCG3: [ 0.76197803  0.79827969  0.83881167  0.87853493  0.91671665]
NDCG4: [ 0.70139624  0.74260672  0.78748654  0.83582368  0.89269761]
Iteration 5 [208.9 s]: ranku_loss = 0.626427 [253.36 s],
NDCG1: [ 0.76293982  0.79887038  0.83973422  0.87931877  0.91709612]
NDCG2: [ 0.75901312  0.79612206  0.83767205  0.87779051  0.91588817]
NDCG3: [ 0.76284562  0.79861373  0.83935929  0.8787436   0.91694808]
NDCG4: [ 0.7002018   0.74195798  0.78844172  0.83681076  0.89278072]
Iteration 6 [208.2 s]: ranku_loss = 0.623084 [252.62 s],
NDCG1: [ 0.76325074  0.79930377  0.83970382  0.87937617  0.91720038]
NDCG2: [ 0.76022853  0.79711851  0.8389741   0.87843136  0.91636552]
NDCG3: [ 0.7623659   0.7984362   0.83890165  0.87862053  0.91681982]
NDCG4: [ 0.71294051  0.75336026  0.79770832  0.84499755  0.89751034]
Iteration 7 [210.3 s]: ranku_loss = 0.620126 [253.68 s],
NDCG1: [ 0.76298978  0.79966459  0.84007875  0.87965545  0.91724052]
NDCG2: [ 0.75820776  0.79585515  0.83790106  0.87785668  0.9157422 ]
NDCG3: [ 0.76221967  0.79840044  0.83838779  0.87838808  0.91671706]
NDCG4: [ 0.71818553  0.75835958  0.8026649   0.84885034  0.89965769]
Iteration 8 [207.9 s]: ranku_loss = 0.616894 [252.80 s],
NDCG1: [ 0.76346542  0.80049973  0.84043152  0.87979718  0.91747196]
NDCG2: [ 0.75809191  0.79558429  0.8373894   0.87766737  0.91566409]
NDCG3: [ 0.76054976  0.79766614  0.83819506  0.87776551  0.91634451]
NDCG4: [ 0.72780547  0.76820658  0.81150559  0.85597846  0.9037427 ]
Iteration 9 [208.6 s]: ranku_loss = 0.613076 [251.98 s],
NDCG1: [ 0.7619472   0.79878693  0.83947289  0.8788914   0.91688321]
NDCG2: [ 0.75613997  0.79424026  0.83658129  0.87706347  0.91513922]
NDCG3: [ 0.75978685  0.79592625  0.8368018   0.87659467  0.91575008]
NDCG4: [ 0.72588394  0.76598687  0.80965623  0.85470239  0.90288419]
End. Best Model is model1.
Test_NDCG:
[ 0.71654991  0.70924511  0.70623963  0.70541025  0.70604726  0.70754051
  0.70991442  0.71243029  0.71568925  0.71906113]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/moviefix30/ --batch_size_random 1280000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1280000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [347.4 s]. #user=49522, #item=8940, #train_user=29713200, #cv=247610, #test=7929676
Time: [249.4], Init: 
Init_NDCG1: [ 0.60343175  0.65536784  0.7157515   0.78090698  0.85645157]
Init_NDCG2: [ 0.60721641  0.66007731  0.71890025  0.78336958  0.85803709]
Init_NDCG3: [ 0.60910502  0.65990218  0.71838224  0.78333033  0.85820061]
Init_NDCG4: [ 0.59963517  0.65330239  0.71375645  0.77977921  0.85537988]
Iteration 0 [400.2 s]: ranku_loss = 0.853511 [247.09 s],
NDCG1: [ 0.74530954  0.78293015  0.82461425  0.8670624   0.9101166 ]
NDCG2: [ 0.46119176  0.53367373  0.61153375  0.69896453  0.80531812]
NDCG3: [ 0.74532784  0.78289836  0.82459441  0.86702672  0.9101087 ]
NDCG4: [ 0.45932696  0.53205138  0.60975404  0.69754835  0.80456043]
Iteration 1 [422.5 s]: ranku_loss = 0.656891 [247.44 s],
NDCG1: [ 0.76088322  0.79689953  0.83745531  0.87750885  0.91616407]
NDCG2: [ 0.76025399  0.79579532  0.83656701  0.87682303  0.91573012]
NDCG3: [ 0.76096642  0.79691486  0.83748131  0.87753163  0.91618367]
NDCG4: [ 0.74219806  0.77302271  0.81186213  0.85595638  0.90586698]
Iteration 2 [419.7 s]: ranku_loss = 0.632034 [251.84 s],
NDCG1: [ 0.76231161  0.79828241  0.83899595  0.87839578  0.91677362]
NDCG2: [ 0.76182867  0.79800786  0.83905799  0.87877268  0.9167058 ]
NDCG3: [ 0.76248183  0.79851123  0.83894281  0.87834685  0.91681396]
NDCG4: [ 0.73313576  0.76810945  0.81135746  0.85727463  0.90427671]
Iteration 3 [422.7 s]: ranku_loss = 0.624459 [251.95 s],
NDCG1: [ 0.76419512  0.79957525  0.84014397  0.87966661  0.91739958]
NDCG2: [ 0.7588117   0.79602212  0.83719862  0.87763109  0.91583478]
NDCG3: [ 0.76189976  0.79701018  0.83778902  0.8774626   0.91634394]
NDCG4: [ 0.70076406  0.73844473  0.78588667  0.83660838  0.89181976]
Iteration 4 [422.2 s]: ranku_loss = 0.615751 [250.07 s],
NDCG1: [ 0.76476955  0.80048037  0.84043054  0.87980169  0.91763587]
NDCG2: [ 0.75651427  0.79384464  0.83570295  0.87638783  0.91496898]
NDCG3: [ 0.75145711  0.78183789  0.81951989  0.86116713  0.90951686]
NDCG4: [ 0.62420001  0.66801567  0.72318324  0.78634328  0.86192393]
Iteration 5 [423.5 s]: ranku_loss = 0.608511 [248.40 s],
NDCG1: [ 0.76269159  0.79856158  0.83839753  0.87798954  0.91676374]
NDCG2: [ 0.75310499  0.79237477  0.8346974   0.87533729  0.9141761 ]
NDCG3: [ 0.68499769  0.71693891  0.76260863  0.81715127  0.88261563]
NDCG4: [ 0.54007624  0.60217065  0.67009382  0.74545679  0.83385959]
End. Best Model is model1.
Test_NDCG:
[ 0.72109562  0.71321717  0.71030458  0.70972413  0.71044291  0.71189914
  0.71417692  0.71679241  0.71984368  0.72308204]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/moviefix30/ --batch_size_random 1280000 --epochs 5
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1280000, epochs=5, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [338.1 s]. #user=49522, #item=8940, #train_user=29713200, #cv=247610, #test=7929676
Time: [245.5], Init: 
Init_NDCG1: [ 0.60079835  0.65373538  0.71367154  0.78004088  0.8555966 ]
Init_NDCG2: [ 0.60881376  0.66187412  0.72081821  0.7850791   0.85875033]
Init_NDCG3: [ 0.60551916  0.65779689  0.71619729  0.78099156  0.85698419]
Init_NDCG4: [ 0.60586108  0.65909409  0.71795356  0.78275922  0.85755577]
Iteration 0 [396.2 s]: ranku_loss = 0.841371 [244.50 s],
NDCG1: [ 0.75453524  0.79052587  0.83117327  0.87208196  0.91338007]
NDCG2: [ 0.75361216  0.7886445   0.82987856  0.87108845  0.9127528 ]
NDCG3: [ 0.75423661  0.79040693  0.83102848  0.87198528  0.91330529]
NDCG4: [ 0.75356957  0.78868829  0.82979013  0.87101345  0.91274052]
Iteration 1 [417.4 s]: ranku_loss = 0.634180 [244.76 s],
NDCG1: [ 0.76252916  0.79804478  0.8387181   0.87854909  0.91672458]
NDCG2: [ 0.76168616  0.79758305  0.83843389  0.87821855  0.9165378 ]
NDCG3: [ 0.76235718  0.79804919  0.83887046  0.87859069  0.91673053]
NDCG4: [ 0.76167663  0.79768759  0.83831607  0.87821574  0.91653757]
Iteration 2 [423.7 s]: ranku_loss = 0.625559 [253.46 s],
NDCG1: [ 0.7627029   0.79883887  0.83931198  0.87873138  0.91695371]
NDCG2: [ 0.75523936  0.79521471  0.83697877  0.87706892  0.91516535]
NDCG3: [ 0.76250106  0.79875036  0.83923065  0.87862359  0.91691957]
NDCG4: [ 0.75477454  0.7948241   0.83665926  0.87692237  0.91501906]
Iteration 3 [415.9 s]: ranku_loss = 0.620862 [245.23 s],
NDCG1: [ 0.76260511  0.79898714  0.83945914  0.87899389  0.91698892]
NDCG2: [ 0.75721339  0.79554753  0.83722733  0.87750735  0.91554949]
NDCG3: [ 0.76077534  0.7976033   0.83823641  0.8781317   0.91640396]
NDCG4: [ 0.75294775  0.79297155  0.83545317  0.87635271  0.91443116]
Iteration 4 [429.6 s]: ranku_loss = 0.614058 [306.87 s],
NDCG1: [ 0.76312346  0.79881665  0.83919422  0.87874661  0.91695623]
NDCG2: [ 0.75306355  0.79138628  0.83425571  0.87538907  0.91400988]
NDCG3: [ 0.7556697   0.792609    0.8333217   0.87397983  0.91424315]
NDCG4: [ 0.74388806  0.78568195  0.82997431  0.87226447  0.91142944]
End. Best Model is model1.
Test_NDCG:
[ 0.71737644  0.71245124  0.71001668  0.70861205  0.70892791  0.70978413
  0.71181616  0.71454998  0.71763588  0.72117856]

