liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [35.9 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [43.3], Init: 
Init_NDCG1: [ 0.72021016  0.74739065  0.78476735  0.83375405  0.89840964]
Init_NDCG2: [ 0.71741576  0.74509364  0.78271155  0.83203618  0.8973018 ]
Init_NDCG3: [ 0.72021016  0.74739065  0.78476735  0.83375405  0.89840964]
Init_NDCG4: [ 0.71741576  0.74509364  0.78271155  0.83203618  0.8973018 ]
Iteration 0 [79.2 s]: ranku_loss = 3.097112 [41.74 s],
NDCG1: [ 0.72861083  0.75428558  0.78995974  0.83784719  0.9009056 ]
NDCG2: [ 0.72322414  0.75152472  0.78762939  0.8364001   0.89964179]
NDCG3: [ 0.72861083  0.75428558  0.78995974  0.83784719  0.9009056 ]
NDCG4: [ 0.72322414  0.75152472  0.78762939  0.8364001   0.89964179]
Iteration 1 [89.0 s]: ranku_loss = 2.278330 [43.31 s],
NDCG1: [ 0.7413843   0.76406911  0.79881287  0.84562369  0.90526356]
NDCG2: [ 0.74135364  0.76398899  0.79878571  0.84558809  0.90524447]
NDCG3: [ 0.7413843   0.76406911  0.79881287  0.84562369  0.90526356]
NDCG4: [ 0.74135364  0.76398899  0.79878571  0.84558809  0.90524447]
Iteration 2 [44.6 s]: ranku_loss = 0.763736 [45.07 s],
NDCG1: [ 0.76735989  0.7875666   0.81833184  0.86073979  0.91451395]
NDCG2: [ 0.76735989  0.7875666   0.81833184  0.86073979  0.91451395]
NDCG3: [ 0.76735989  0.7875666   0.81833184  0.86073979  0.91451395]
NDCG4: [ 0.76735989  0.7875666   0.81833184  0.86073979  0.91451395]
Iteration 3 [36.9 s]: ranku_loss = 0.690714 [45.97 s],
NDCG1: [ 0.78164949  0.79819417  0.8276143   0.8674888   0.91895312]
NDCG2: [ 0.78164949  0.79819417  0.8276143   0.8674888   0.91895312]
NDCG3: [ 0.78164949  0.79819417  0.8276143   0.8674888   0.91895312]
NDCG4: [ 0.78164949  0.79819417  0.8276143   0.8674888   0.91895312]
Iteration 4 [37.5 s]: ranku_loss = 0.684785 [45.26 s],
NDCG1: [ 0.7856098   0.80162017  0.83004772  0.86992782  0.92033183]
NDCG2: [ 0.78534668  0.80162593  0.83014308  0.86997214  0.92031666]
NDCG3: [ 0.7856098   0.80162017  0.83004772  0.86992782  0.92033183]
NDCG4: [ 0.78534668  0.80162593  0.83014308  0.86997214  0.92031666]
Iteration 5 [36.9 s]: ranku_loss = 0.682971 [46.10 s],
NDCG1: [ 0.79025423  0.80472554  0.83287879  0.87157935  0.92170356]
NDCG2: [ 0.79025423  0.80472554  0.83289311  0.87158099  0.92170519]
NDCG3: [ 0.79025423  0.80472554  0.83287879  0.87157935  0.92170356]
NDCG4: [ 0.79025423  0.80472554  0.83289311  0.87158099  0.92170519]
Iteration 6 [37.5 s]: ranku_loss = 0.681660 [45.90 s],
NDCG1: [ 0.78983525  0.80556707  0.83409381  0.87265519  0.92199202]
NDCG2: [ 0.78986693  0.80557423  0.83410008  0.87266085  0.92199747]
NDCG3: [ 0.78983525  0.80556707  0.83409381  0.87265519  0.92199202]
NDCG4: [ 0.78986693  0.80557423  0.83410008  0.87266085  0.92199747]
Iteration 7 [37.4 s]: ranku_loss = 0.679932 [46.01 s],
NDCG1: [ 0.79065814  0.80761074  0.83531149  0.8735834   0.92254019]
NDCG2: [ 0.79065814  0.80761074  0.83531149  0.8735834   0.92254019]
NDCG3: [ 0.79065814  0.80761074  0.83531149  0.8735834   0.92254019]
NDCG4: [ 0.79065814  0.80761074  0.83531149  0.8735834   0.92254019]
Iteration 8 [37.4 s]: ranku_loss = 0.678381 [45.50 s],
NDCG1: [ 0.79176296  0.80762229  0.8366924   0.87459918  0.92287992]
NDCG2: [ 0.79176296  0.80762229  0.8366924   0.87459918  0.92287992]
NDCG3: [ 0.79176296  0.80762229  0.8366924   0.87459918  0.92287992]
NDCG4: [ 0.79176296  0.80762229  0.8366924   0.87459918  0.92287992]
Iteration 9 [42.8 s]: ranku_loss = 0.676947 [42.06 s],
NDCG1: [ 0.79235389  0.80894829  0.8381473   0.87620553  0.92341317]
NDCG2: [ 0.79235389  0.80896904  0.83815148  0.87620961  0.92341722]
NDCG3: [ 0.79235389  0.80894829  0.8381473   0.87620553  0.92341317]
NDCG4: [ 0.79235389  0.80896904  0.83815148  0.87620961  0.92341722]
Iteration 10 [71.8 s]: ranku_loss = 0.675000 [42.59 s],
NDCG1: [ 0.7941222   0.80972661  0.83859743  0.87628881  0.92379946]
NDCG2: [ 0.7941222   0.80972661  0.83859743  0.87628881  0.92379946]
NDCG3: [ 0.7941222   0.80972661  0.83859743  0.87628881  0.92379946]
NDCG4: [ 0.7941222   0.80972661  0.83859743  0.87628881  0.92379946]
Iteration 11 [76.0 s]: ranku_loss = 0.673163 [41.87 s],
NDCG1: [ 0.79360467  0.81005965  0.83924047  0.87643162  0.9238831 ]
NDCG2: [ 0.79360467  0.81007744  0.83924329  0.87641064  0.92388324]
NDCG3: [ 0.79360467  0.81005965  0.83924047  0.87643162  0.9238831 ]
NDCG4: [ 0.79360467  0.81007744  0.83924329  0.87641064  0.92388324]
Iteration 12 [75.2 s]: ranku_loss = 0.672071 [42.26 s],
NDCG1: [ 0.79341786  0.81027697  0.83882717  0.87648906  0.92379214]
NDCG2: [ 0.79341786  0.81027697  0.83878934  0.87648667  0.9237875 ]
NDCG3: [ 0.79341786  0.81027697  0.83882717  0.87648906  0.92379214]
NDCG4: [ 0.79341786  0.81027697  0.83878934  0.87648667  0.9237875 ]
End. Best Model is model1.
Test_NDCG:
[ 0.77785208  0.77877974  0.77846946  0.77902563  0.78033198  0.78296869
  0.78633286  0.79001004  0.79486009  0.80051417]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [36.0 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [43.7], Init: 
Init_NDCG1: [ 0.71803451  0.74608709  0.78388638  0.83310983  0.89772714]
Init_NDCG2: [ 0.71765356  0.74517454  0.78301509  0.832531    0.897475  ]
Init_NDCG3: [ 0.71803451  0.74608709  0.78388638  0.83310983  0.89772714]
Init_NDCG4: [ 0.71765356  0.74517454  0.78301509  0.832531    0.897475  ]
Iteration 0 [75.6 s]: ranku_loss = 2.024743 [41.80 s],
NDCG1: [ 0.76526447  0.78408536  0.81510065  0.85750147  0.91302467]
NDCG2: [ 0.76526447  0.78408536  0.81510065  0.85750147  0.91302467]
NDCG3: [ 0.76526447  0.78408536  0.81510065  0.85750147  0.91302467]
NDCG4: [ 0.76526447  0.78408536  0.81510065  0.85750147  0.91302467]
Iteration 1 [73.4 s]: ranku_loss = 0.711956 [42.00 s],
NDCG1: [ 0.77576042  0.79473133  0.82466515  0.86508664  0.91726573]
NDCG2: [ 0.6550574   0.69461041  0.74160128  0.80039945  0.87723657]
NDCG3: [ 0.77576042  0.79473133  0.82466515  0.86508664  0.91726573]
NDCG4: [ 0.6550574   0.69461041  0.74160128  0.80039945  0.87723657]
Iteration 2 [72.4 s]: ranku_loss = 0.687356 [42.77 s],
NDCG1: [ 0.78376557  0.8000967   0.82946285  0.86937831  0.91972072]
NDCG2: [ 0.64640929  0.68857027  0.73684908  0.79610363  0.87458056]
NDCG3: [ 0.78376557  0.8000967   0.82946285  0.86937831  0.91972072]
NDCG4: [ 0.64640929  0.68857027  0.73684908  0.79610363  0.87458056]
Iteration 3 [44.4 s]: ranku_loss = 0.685070 [45.13 s],
NDCG1: [ 0.78454288  0.80278232  0.83177478  0.87151156  0.92057358]
NDCG2: [ 0.63927933  0.68428637  0.73342781  0.79413652  0.87284245]
NDCG3: [ 0.78454288  0.80278232  0.83177478  0.87151156  0.92057358]
NDCG4: [ 0.63927933  0.68428637  0.73342781  0.79413652  0.87284245]
Iteration 4 [38.0 s]: ranku_loss = 0.682412 [42.35 s],
NDCG1: [ 0.78614285  0.8044445   0.8337018   0.8723913   0.92126923]
NDCG2: [ 0.63806195  0.68199853  0.73208426  0.79315631  0.8722385 ]
NDCG3: [ 0.78614285  0.8044445   0.8337018   0.8723913   0.92126923]
NDCG4: [ 0.63806195  0.68199853  0.73208426  0.79315631  0.8722385 ]
Iteration 5 [51.8 s]: ranku_loss = 0.680726 [45.56 s],
NDCG1: [ 0.78922895  0.8065271   0.83475005  0.87333082  0.92205421]
NDCG2: [ 0.78922895  0.8065271   0.8347451   0.87333656  0.92205423]
NDCG3: [ 0.78922895  0.8065271   0.83475005  0.87333082  0.92205421]
NDCG4: [ 0.78922895  0.8065271   0.8347451   0.87333656  0.92205423]
Iteration 6 [52.2 s]: ranku_loss = 0.678914 [44.92 s],
NDCG1: [ 0.79215686  0.80807993  0.83650914  0.87404993  0.92281895]
NDCG2: [ 0.79210321  0.80806779  0.83649779  0.87403918  0.92280841]
NDCG3: [ 0.79215686  0.80807993  0.83650914  0.87404993  0.92281895]
NDCG4: [ 0.79210321  0.80806779  0.83649779  0.87403918  0.92280841]
Iteration 7 [43.0 s]: ranku_loss = 0.677122 [44.53 s],
NDCG1: [ 0.79582124  0.8107064   0.83821546  0.87531453  0.92387135]
NDCG2: [ 0.79548781  0.81065767  0.83816404  0.87526644  0.92382484]
NDCG3: [ 0.79582124  0.8107064   0.83821546  0.87531453  0.92387135]
NDCG4: [ 0.79548781  0.81065767  0.83816404  0.87526644  0.92382484]
Iteration 8 [42.4 s]: ranku_loss = 0.675720 [40.82 s],
NDCG1: [ 0.79497188  0.81192633  0.83849274  0.87570287  0.92398275]
NDCG2: [ 0.79667066  0.81277035  0.83894382  0.87614306  0.92437893]
NDCG3: [ 0.79497188  0.81192633  0.83849274  0.87570287  0.92398275]
NDCG4: [ 0.79667066  0.81277035  0.83894382  0.87614306  0.92437893]
Iteration 9 [36.5 s]: ranku_loss = 0.674796 [40.73 s],
NDCG1: [ 0.7929369   0.80959856  0.83825698  0.87492733  0.92335234]
NDCG2: [ 0.7976493   0.81177792  0.83956529  0.87612872  0.92442542]
NDCG3: [ 0.7929369   0.80959856  0.83825698  0.87492733  0.92335234]
NDCG4: [ 0.7976493   0.81177792  0.83956529  0.87612872  0.92442542]
Iteration 10 [36.6 s]: ranku_loss = 0.673582 [40.91 s],
NDCG1: [ 0.79157655  0.80917322  0.83738455  0.87479154  0.92300218]
NDCG2: [ 0.79841616  0.81282331  0.83969353  0.87674086  0.92469202]
NDCG3: [ 0.79157655  0.80917322  0.83738455  0.87479154  0.92300218]
NDCG4: [ 0.79841616  0.81282331  0.83969353  0.87674086  0.92469202]
Iteration 11 [37.1 s]: ranku_loss = 0.672651 [40.90 s],
NDCG1: [ 0.78562338  0.8067725   0.83618392  0.87389098  0.9218467 ]
NDCG2: [ 0.7955015   0.81204272  0.83942285  0.87658377  0.92423366]
NDCG3: [ 0.78562338  0.8067725   0.83618392  0.87389098  0.9218467 ]
NDCG4: [ 0.7955015   0.81204272  0.83942285  0.87658377  0.92423366]
End. Best Model is model2.
Test_NDCG:
[ 0.81541252  0.80753394  0.80382496  0.8012869   0.80008333  0.80033267
  0.80172437  0.80435961  0.80816833  0.81258402]
Test_NDCG By model1:
[ 0.76773942  0.76609374  0.76646382  0.76735695  0.76950468  0.7720885
  0.77585715  0.78057737  0.78589717  0.79150805]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [35.7 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [48.5], Init: 
Init_NDCG1: [ 0.72538727  0.75065596  0.78667027  0.8352521   0.8995898 ]
Init_NDCG2: [ 0.71795235  0.74560103  0.78300105  0.83251698  0.89753646]
Init_NDCG3: [ 0.72538727  0.75065596  0.78667027  0.8352521   0.8995898 ]
Init_NDCG4: [ 0.71795235  0.74560103  0.78300105  0.83251698  0.89753646]
Iteration 0 [79.6 s]: ranku_loss = 1.959506 [47.19 s],
NDCG1: [ 0.74971949  0.76893799  0.80209143  0.84719456  0.9070595 ]
NDCG2: [ 0.69358753  0.72493269  0.76582331  0.81804377  0.88924369]
NDCG3: [ 0.74971949  0.76893799  0.80209143  0.84719456  0.9070595 ]
NDCG4: [ 0.69358753  0.72493269  0.76582331  0.81804377  0.88924369]
Iteration 1 [79.8 s]: ranku_loss = 0.707547 [46.84 s],
NDCG1: [ 0.7565484   0.77750233  0.80936226  0.85253792  0.91009394]
NDCG2: [ 0.68318068  0.71558404  0.75799603  0.81322253  0.88571477]
NDCG3: [ 0.7565484   0.77750233  0.80936226  0.85253792  0.91009394]
NDCG4: [ 0.68318068  0.71558404  0.75799603  0.81322253  0.88571477]
Iteration 2 [45.1 s]: ranku_loss = 0.697619 [50.62 s],
NDCG1: [ 0.76013339  0.78177751  0.81370172  0.85577249  0.91185606]
NDCG2: [ 0.67696865  0.71020126  0.75402437  0.81037816  0.88368813]
NDCG3: [ 0.76013339  0.78177751  0.81370172  0.85577249  0.91185606]
NDCG4: [ 0.67696865  0.71020126  0.75402437  0.81037816  0.88368813]
Iteration 3 [37.4 s]: ranku_loss = 0.693213 [44.35 s],
NDCG1: [ 0.77287473  0.79260418  0.82220376  0.86289511  0.9161542 ]
NDCG2: [ 0.66923016  0.70575158  0.75109596  0.8080259   0.88183875]
NDCG3: [ 0.77287473  0.79260418  0.82220376  0.86289511  0.9161542 ]
NDCG4: [ 0.66923016  0.70575158  0.75109596  0.8080259   0.88183875]
Iteration 4 [37.7 s]: ranku_loss = 0.682209 [45.35 s],
NDCG1: [ 0.78860659  0.80607466  0.83295826  0.87175212  0.92158732]
NDCG2: [ 0.79489344  0.80965151  0.83617883  0.87314794  0.92321774]
NDCG3: [ 0.78860659  0.80607466  0.83295826  0.87175212  0.92158732]
NDCG4: [ 0.79489344  0.80965151  0.83617883  0.87314794  0.92321774]
Iteration 5 [37.7 s]: ranku_loss = 0.664714 [45.13 s],
NDCG1: [ 0.79455655  0.81027492  0.83753525  0.87518235  0.92356459]
NDCG2: [ 0.79491232  0.81000908  0.83667602  0.87352644  0.92333553]
NDCG3: [ 0.79455655  0.81027492  0.83753525  0.87518235  0.92356459]
NDCG4: [ 0.79491232  0.81000908  0.83667602  0.87352644  0.92333553]
Iteration 6 [38.0 s]: ranku_loss = 0.654310 [45.42 s],
NDCG1: [ 0.79643334  0.8121193   0.83966834  0.87654682  0.92436901]
NDCG2: [ 0.79563677  0.8106096   0.83861746  0.87476581  0.92384945]
NDCG3: [ 0.79643334  0.8121193   0.83966834  0.87654682  0.92436901]
NDCG4: [ 0.79563677  0.8106096   0.83861746  0.87476581  0.92384945]
Iteration 7 [38.1 s]: ranku_loss = 0.649098 [45.19 s],
NDCG1: [ 0.79627829  0.81276372  0.84020074  0.87720915  0.92458286]
NDCG2: [ 0.79580167  0.81234046  0.84000087  0.87619736  0.92434758]
NDCG3: [ 0.79627829  0.81276372  0.84020074  0.87720915  0.92458286]
NDCG4: [ 0.79580167  0.81234046  0.84000087  0.87619736  0.92434758]
Iteration 8 [37.9 s]: ranku_loss = 0.646310 [45.25 s],
NDCG1: [ 0.79683856  0.81245977  0.84126231  0.87758385  0.92478365]
NDCG2: [ 0.79671921  0.81155064  0.84041103  0.87752948  0.92458349]
NDCG3: [ 0.79683856  0.81245977  0.84126231  0.87758385  0.92478365]
NDCG4: [ 0.79671921  0.81155064  0.84041103  0.87752948  0.92458349]
Iteration 9 [37.8 s]: ranku_loss = 0.641226 [45.83 s],
NDCG1: [ 0.79773168  0.81368056  0.84103433  0.87797332  0.92499972]
NDCG2: [ 0.79675209  0.81310735  0.84048438  0.87788649  0.9247654 ]
NDCG3: [ 0.79773168  0.81368056  0.84103433  0.87797332  0.92499972]
NDCG4: [ 0.79675209  0.81310735  0.84048438  0.87788649  0.9247654 ]
Iteration 10 [37.9 s]: ranku_loss = 0.636440 [46.04 s],
NDCG1: [ 0.79715199  0.81332247  0.84128021  0.87768506  0.92493463]
NDCG2: [ 0.79688922  0.8125277   0.84121203  0.87788526  0.92481467]
NDCG3: [ 0.79715199  0.81332247  0.84128021  0.87768506  0.92493463]
NDCG4: [ 0.79688922  0.8125277   0.84121203  0.87788526  0.92481467]
End. Best Model is model1.
Test_NDCG:
[ 0.79555512  0.79326181  0.79224735  0.79224577  0.7924811   0.79384676
  0.79594698  0.79916913  0.80326248  0.80829922]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [37.3 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [48.7], Init: 
Init_NDCG1: [ 0.71587127  0.74533608  0.78258873  0.83235963  0.89723139]
Init_NDCG2: [ 0.71764582  0.74547241  0.78312514  0.83318821  0.89762719]
Init_NDCG3: [ 0.71587127  0.74533608  0.78258873  0.83235963  0.89723139]
Init_NDCG4: [ 0.71764582  0.74547241  0.78312514  0.83318821  0.89762719]
Iteration 0 [75.0 s]: ranku_loss = 2.213117 [47.76 s],
NDCG1: [ 0.74882356  0.76973975  0.80206955  0.84645358  0.90696829]
NDCG2: [ 0.69722679  0.72554152  0.76580436  0.81888609  0.88983953]
NDCG3: [ 0.74882356  0.76973975  0.80206955  0.84645358  0.90696829]
NDCG4: [ 0.69722679  0.72554152  0.76580436  0.81888609  0.88983953]
Iteration 1 [79.7 s]: ranku_loss = 0.711914 [47.32 s],
NDCG1: [ 0.75604934  0.77699151  0.80797915  0.85182242  0.9097821 ]
NDCG2: [ 0.68415552  0.71733058  0.75876511  0.81356186  0.88623946]
NDCG3: [ 0.75604934  0.77699151  0.80797915  0.85182242  0.9097821 ]
NDCG4: [ 0.68415552  0.71733058  0.75876511  0.81356186  0.88623946]
Iteration 2 [43.7 s]: ranku_loss = 0.697398 [51.35 s],
NDCG1: [ 0.76327311  0.78342852  0.81460252  0.85708179  0.91263374]
NDCG2: [ 0.67298608  0.70827624  0.75246204  0.80864072  0.88268826]
NDCG3: [ 0.76327311  0.78342852  0.81460252  0.85708179  0.91263374]
NDCG4: [ 0.67298608  0.70827624  0.75246204  0.80864072  0.88268826]
Iteration 3 [37.8 s]: ranku_loss = 0.694996 [45.33 s],
NDCG1: [ 0.7639865   0.78609586  0.81763309  0.86041228  0.91377756]
NDCG2: [ 0.66158807  0.70188966  0.74786065  0.80555643  0.87989759]
NDCG3: [ 0.7639865   0.78609586  0.81763309  0.86041228  0.91377756]
NDCG4: [ 0.66158807  0.70188966  0.74786065  0.80555643  0.87989759]
Iteration 4 [38.1 s]: ranku_loss = 0.690986 [45.62 s],
NDCG1: [ 0.77176616  0.79206313  0.82342691  0.86486533  0.91641294]
NDCG2: [ 0.65181384  0.69426596  0.74241848  0.80124851  0.87699055]
NDCG3: [ 0.77176616  0.79206313  0.82342691  0.86486533  0.91641294]
NDCG4: [ 0.65181384  0.69426596  0.74241848  0.80124851  0.87699055]
Iteration 5 [38.0 s]: ranku_loss = 0.685482 [45.50 s],
NDCG1: [ 0.78057661  0.79863187  0.82918868  0.86850309  0.91910403]
NDCG2: [ 0.78445619  0.80046109  0.82854116  0.86826856  0.91967676]
NDCG3: [ 0.78057661  0.79863187  0.82918868  0.86850309  0.91910403]
NDCG4: [ 0.78445619  0.80046109  0.82854116  0.86826856  0.91967676]
Iteration 6 [38.3 s]: ranku_loss = 0.673368 [45.59 s],
NDCG1: [ 0.79109691  0.80766223  0.8351975   0.87408455  0.92252742]
NDCG2: [ 0.79135482  0.80749724  0.83394197  0.87183222  0.92220103]
NDCG3: [ 0.79109691  0.80766223  0.8351975   0.87408455  0.92252742]
NDCG4: [ 0.79135482  0.80749724  0.83394197  0.87183222  0.92220103]
Iteration 7 [37.9 s]: ranku_loss = 0.658733 [45.35 s],
NDCG1: [ 0.79477938  0.80992431  0.83812923  0.87574523  0.92372371]
NDCG2: [ 0.79341363  0.80871007  0.83604044  0.87316989  0.92291434]
NDCG3: [ 0.79477938  0.80992431  0.83812923  0.87574523  0.92372371]
NDCG4: [ 0.79341363  0.80871007  0.83604044  0.87316989  0.92291434]
Iteration 8 [37.7 s]: ranku_loss = 0.652020 [45.76 s],
NDCG1: [ 0.79637983  0.81186963  0.83966192  0.87610278  0.92433962]
NDCG2: [ 0.7947669   0.81171022  0.83856641  0.87574294  0.92399014]
NDCG3: [ 0.79637983  0.81186963  0.83966192  0.87610278  0.92433962]
NDCG4: [ 0.7947669   0.81171022  0.83856641  0.87574294  0.92399014]
Iteration 9 [45.1 s]: ranku_loss = 0.647035 [49.67 s],
NDCG1: [ 0.79815829  0.81310755  0.84099792  0.8773897   0.92494496]
NDCG2: [ 0.79604524  0.81254729  0.84001001  0.87699985  0.92453893]
NDCG3: [ 0.79815829  0.81310755  0.84099792  0.8773897   0.92494496]
NDCG4: [ 0.79604524  0.81254729  0.84001001  0.87699985  0.92453893]
Iteration 10 [55.9 s]: ranku_loss = 0.642852 [49.10 s],
NDCG1: [ 0.79801714  0.81414063  0.84192046  0.8779245   0.92528566]
NDCG2: [ 0.79677746  0.8131792   0.8411051   0.87776097  0.92493546]
NDCG3: [ 0.79801714  0.81414063  0.84192046  0.8779245   0.92528566]
NDCG4: [ 0.79677746  0.8131792   0.8411051   0.87776097  0.92493546]
Iteration 11 [60.2 s]: ranku_loss = 0.637048 [48.08 s],
NDCG1: [ 0.79668336  0.813338    0.84153042  0.87832054  0.9250166 ]
NDCG2: [ 0.79590026  0.81291206  0.84074354  0.87789858  0.92476099]
NDCG3: [ 0.79668336  0.813338    0.84153042  0.87832054  0.9250166 ]
NDCG4: [ 0.79590026  0.81291206  0.84074354  0.87789858  0.92476099]
End. Best Model is model1.
Test_NDCG:
[ 0.80139762  0.79531211  0.79391375  0.79341182  0.79329736  0.79453501
  0.79672696  0.79995192  0.80421575  0.80902581]


