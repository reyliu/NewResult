liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [25.3 s]. #user=4837, #item=12922, #train_user=2902200, #cv=24185, #test=258641
Time: [12.7], Init: 
Init_NDCG1: [ 0.6177645   0.66032933  0.71592687  0.7801963   0.85874742]
Init_NDCG2: [ 0.62106789  0.65864279  0.71462358  0.77908427  0.85836138]
Init_NDCG3: [ 0.61964859  0.66113748  0.71672545  0.7820805   0.85947235]
Init_NDCG4: [ 0.62473903  0.66541461  0.718763    0.78412505  0.86108382]
Iteration 0 [122.3 s]: ranku_loss = 0.863072 [10.02 s],
NDCG1: [ 0.68163176  0.71173563  0.75967531  0.81495604  0.8809321 ]
NDCG2: [ 0.591955    0.6364169   0.69453566  0.76375834  0.84873369]
NDCG3: [ 0.68203724  0.71116547  0.75865512  0.81398942  0.88072386]
NDCG4: [ 0.58327981  0.62920691  0.68936686  0.75905081  0.84580765]
Iteration 1 [116.1 s]: ranku_loss = 0.649879 [11.83 s],
NDCG1: [ 0.73667102  0.76043736  0.80328432  0.84930773  0.90160819]
NDCG2: [ 0.73349479  0.76120028  0.80229226  0.84932069  0.90115365]
NDCG3: [ 0.73584406  0.76011205  0.80318276  0.84913398  0.90144991]
NDCG4: [ 0.73756912  0.76084505  0.80266853  0.84961518  0.90169105]
Iteration 2 [117.0 s]: ranku_loss = 0.620506 [10.04 s],
NDCG1: [ 0.73334172  0.76105663  0.80246899  0.85046411  0.90116449]
NDCG2: [ 0.72854586  0.75870895  0.80186864  0.84951262  0.90019878]
NDCG3: [ 0.73421936  0.76110682  0.80262631  0.85066551  0.9013504 ]
NDCG4: [ 0.73307839  0.75946499  0.80301553  0.85027144  0.90100723]
End. Best Model is model4.
Test_NDCG:
[ 0.74778288  0.73226119  0.72820872  0.72658138  0.72642647  0.72919965
  0.73272388  0.73784054  0.74418314  0.75057424]
Test_NDCG By model1:
[ 0.75287891  0.73733714  0.73363763  0.73038974  0.72991009  0.73228216
  0.73627335  0.74102021  0.74679457  0.75356636]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [28.7 s]. #user=4837, #item=12922, #train_user=2902200, #cv=24185, #test=258641
Time: [14.6], Init: 
Init_NDCG1: [ 0.62471743  0.66266309  0.71936538  0.78360357  0.86044364]
Init_NDCG2: [ 0.61520969  0.6577031   0.71554923  0.78051484  0.85835597]
Init_NDCG3: [ 0.62251704  0.66545769  0.71823671  0.78261628  0.86032287]
Init_NDCG4: [ 0.62604133  0.66382081  0.71966614  0.78339666  0.86093059]
Iteration 0 [127.0 s]: ranku_loss = 0.993792 [10.54 s],
NDCG1: [ 0.59153568  0.64015927  0.69757246  0.76535837  0.84986025]
NDCG2: [ 0.65308657  0.68719589  0.73852153  0.79973569  0.87077761]
NDCG3: [ 0.59237178  0.64009856  0.69777391  0.76570713  0.8499797 ]
NDCG4: [ 0.65297288  0.6873815   0.73800654  0.79943648  0.87072432]
Iteration 1 [110.9 s]: ranku_loss = 0.687788 [9.99 s],
NDCG1: [ 0.72675615  0.75708779  0.7976799   0.84503701  0.8989616 ]
NDCG2: [ 0.72496225  0.75490705  0.79434687  0.8428857   0.89783586]
NDCG3: [ 0.72651429  0.75730251  0.79741586  0.84503585  0.89893686]
NDCG4: [ 0.7242688   0.75422308  0.79413414  0.84251978  0.89761965]
Iteration 2 [56.9 s]: ranku_loss = 0.632484 [9.87 s],
NDCG1: [ 0.73623747  0.76129861  0.80233148  0.85010103  0.90161595]
NDCG2: [ 0.73556168  0.76055022  0.80279926  0.8498423   0.90155607]
NDCG3: [ 0.73697729  0.76115641  0.80224728  0.85020188  0.90165567]
NDCG4: [ 0.73499881  0.76015151  0.80268379  0.84964353  0.90137869]
Iteration 3 [57.1 s]: ranku_loss = 0.622476 [9.84 s],
NDCG1: [ 0.7346181   0.76267795  0.80275147  0.85059221  0.90175931]
NDCG2: [ 0.73271076  0.76224835  0.80253636  0.85013757  0.90144289]
NDCG3: [ 0.73489643  0.76326624  0.80270018  0.8507712   0.90186083]
NDCG4: [ 0.73192649  0.7615139   0.80210383  0.8496931   0.90118279]
Iteration 4 [57.2 s]: ranku_loss = 0.612829 [9.88 s],
NDCG1: [ 0.73356796  0.76011104  0.80223372  0.84996802  0.90110096]
NDCG2: [ 0.73217191  0.76094283  0.80341445  0.85065731  0.90128442]
NDCG3: [ 0.73490532  0.76020787  0.80268038  0.85077323  0.9013371 ]
NDCG4: [ 0.72919752  0.76128023  0.80330568  0.85028412  0.90098121]
End. Best Model is model3.
Test_NDCG:
[ 0.74168028  0.72867941  0.72433993  0.72324238  0.7240796   0.726223
  0.73112082  0.73677855  0.74283536  0.74939462]
Test_NDCG By model1:
[ 0.75397085  0.73612456  0.72760793  0.72537039  0.72580919  0.72749442
  0.73254898  0.73738624  0.7434288   0.75023357]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [26.7 s]. #user=4837, #item=12922, #train_user=2902200, #cv=24185, #test=258641
Time: [12.8], Init: 
Init_NDCG1: [ 0.62759794  0.6685095   0.72196679  0.78550345  0.8622041 ]
Init_NDCG2: [ 0.62659136  0.66808324  0.7208858   0.78453867  0.86180134]
Init_NDCG3: [ 0.61884018  0.66203424  0.71764453  0.78128284  0.85936858]
Init_NDCG4: [ 0.61066904  0.65789729  0.71509428  0.77943972  0.85757609]
Iteration 0 [83.1 s]: ranku_loss = 0.882157 [11.45 s],
NDCG1: [ 0.62454734  0.66542518  0.7240258   0.7867352   0.8619034 ]
NDCG2: [ 0.62357709  0.66981968  0.72615466  0.78975239  0.86263485]
NDCG3: [ 0.6009033   0.64685576  0.70744979  0.77583565  0.8539675 ]
NDCG4: [ 0.61889099  0.66691621  0.72406313  0.78730132  0.86121408]
Iteration 1 [103.4 s]: ranku_loss = 0.677270 [11.19 s],
NDCG1: [ 0.73049411  0.76011219  0.8014893   0.84737923  0.90041653]
NDCG2: [ 0.72693831  0.75530298  0.79811533  0.84572342  0.89885156]
NDCG3: [ 0.53824231  0.58972107  0.6562032   0.7323275   0.82967931]
NDCG4: [ 0.70672482  0.73473435  0.77744745  0.82974126  0.89015009]
Iteration 2 [98.3 s]: ranku_loss = 0.622624 [11.31 s],
NDCG1: [ 0.73853466  0.76427753  0.80570946  0.85119553  0.90273278]
NDCG2: [ 0.73280451  0.76070118  0.80294116  0.84976098  0.90122684]
NDCG3: [ 0.52273283  0.58276241  0.64971693  0.7287822   0.82601764]
NDCG4: [ 0.68035576  0.70912208  0.75360651  0.81131286  0.87932159]
Iteration 3 [102.8 s]: ranku_loss = 0.603690 [11.29 s],
NDCG1: [ 0.73444649  0.76125518  0.80270087  0.84942738  0.90149629]
NDCG2: [ 0.73265043  0.75949862  0.80196822  0.84885164  0.9009098 ]
NDCG3: [ 0.53295307  0.59260737  0.66244964  0.73768781  0.83070052]
NDCG4: [ 0.60558496  0.65238196  0.7086059   0.77482302  0.85509462]
End. Best Model is model1.
Test_NDCG:
[ 0.7554078   0.73711511  0.73180964  0.72834043  0.72850569  0.73166344
  0.73563005  0.739887    0.74589981  0.75254687]

