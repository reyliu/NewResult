liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix30/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [69.8 s]. #user=11643, #item=30133, #train_user=6985800, #cv=813521, #test=755306
Time: [209.4], Init: 
Init_NDCG1: [ 0.67410873  0.67377799  0.67558862  0.67569804  0.67732333]
Init_NDCG2: [ 0.66910461  0.66963502  0.67060218  0.67292692  0.67449821]
Init_NDCG3: [ 0.66917332  0.67230975  0.67316279  0.67440053  0.6771897 ]
Init_NDCG4: [ 0.66809342  0.67049364  0.67124191  0.67283495  0.67507151]
Iteration 0 [35.0 s]: ranku_loss = 1.811477 [219.31 s],
NDCG1: [ 0.72731639  0.72274241  0.72064483  0.71938091  0.71884608]
NDCG2: [ 0.67189653  0.6724028   0.67422455  0.67596456  0.67831525]
NDCG3: [ 0.65667091  0.6594897   0.66149875  0.6633096   0.66621698]
NDCG4: [ 0.66121653  0.66072286  0.66333034  0.66479578  0.66690577]
Iteration 1 [21.6 s]: ranku_loss = 0.862112 [205.98 s],
NDCG1: [ 0.73416087  0.7282697   0.72411589  0.72179074  0.7214549 ]
NDCG2: [ 0.67833444  0.67830003  0.67990576  0.68192539  0.68372537]
NDCG3: [ 0.67131591  0.66929328  0.6706527   0.67221148  0.67434074]
NDCG4: [ 0.64528929  0.64725627  0.64913876  0.65230067  0.65434766]
Iteration 2 [36.5 s]: ranku_loss = 0.697598 [203.98 s],
NDCG1: [ 0.74419999  0.74061537  0.73689815  0.73473677  0.73325261]
NDCG2: [ 0.70663443  0.70660277  0.70822104  0.70827976  0.7095957 ]
NDCG3: [ 0.68246986  0.67912236  0.68122702  0.68181811  0.68310357]
NDCG4: [ 0.61790988  0.62237155  0.62700007  0.63070535  0.63419406]
Iteration 3 [21.3 s]: ranku_loss = 0.688823 [209.91 s],
NDCG1: [ 0.78201347  0.77684463  0.7720204   0.76914572  0.76713175]
NDCG2: [ 0.77136113  0.76761043  0.76449889  0.76284451  0.761343  ]
NDCG3: [ 0.69727013  0.69354478  0.69257557  0.69307699  0.69399489]
NDCG4: [ 0.5823476   0.59201979  0.59864972  0.60391637  0.60875526]
Iteration 4 [20.8 s]: ranku_loss = 0.677446 [203.23 s],
NDCG1: [ 0.80247383  0.79768276  0.79463696  0.79176867  0.7899379 ]
NDCG2: [ 0.80366408  0.79758103  0.79367024  0.79025509  0.78836497]
NDCG3: [ 0.70577739  0.70177218  0.70101174  0.70103075  0.7017129 ]
NDCG4: [ 0.55571039  0.5663311   0.57364434  0.58094932  0.58752403]
Iteration 5 [33.5 s]: ranku_loss = 0.658146 [205.40 s],
NDCG1: [ 0.80844169  0.80354085  0.79967417  0.79629616  0.79418396]
NDCG2: [ 0.80667073  0.80091814  0.79744244  0.7944271   0.79308602]
NDCG3: [ 0.6863535   0.68718714  0.68748192  0.68881753  0.69065969]
NDCG4: [ 0.53945548  0.54983211  0.56022212  0.56799274  0.57439846]
Iteration 6 [19.9 s]: ranku_loss = 0.647486 [208.38 s],
NDCG1: [ 0.809537    0.80502503  0.80041726  0.79708749  0.7954847 ]
NDCG2: [ 0.80568513  0.7993588   0.79630283  0.79353218  0.79202939]
NDCG3: [ 0.65798934  0.66078295  0.66224227  0.66452789  0.66646693]
NDCG4: [ 0.53671623  0.54953694  0.55969077  0.56728706  0.57387796]
Iteration 7 [28.5 s]: ranku_loss = 0.643582 [201.07 s],
NDCG1: [ 0.81005788  0.80248297  0.79957128  0.79676101  0.7949419 ]
NDCG2: [ 0.80195332  0.79603054  0.79365948  0.79179081  0.79058983]
NDCG3: [ 0.63005803  0.63502562  0.63828732  0.64172399  0.64417008]
NDCG4: [ 0.56259213  0.57121762  0.57736233  0.58400649  0.59030378]
End. Best Model is model1.
Test_NDCG:
[ 0.83438324  0.83021791  0.82751197  0.82470944  0.82330307  0.82267209
  0.82339055  0.82456235  0.82681658  0.829674  ]

