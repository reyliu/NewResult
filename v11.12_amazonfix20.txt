liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [35.1 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [42.2], Init: 
Init_NDCG1: [ 0.71691933  0.74408235  0.78126398  0.83102544  0.89681701]
Init_NDCG2: [ 0.72018392  0.74662673  0.78438135  0.83356714  0.89810459]
Init_NDCG3: [ 0.71884203  0.74582481  0.78441816  0.83319399  0.89790183]
Init_NDCG4: [ 0.72040773  0.74851102  0.78545885  0.8341438   0.89860502]
Iteration 0 [23.5 s]: ranku_loss = 1.677776 [44.39 s],
NDCG1: [ 0.75197369  0.77160221  0.80466749  0.85022566  0.90832876]
NDCG2: [ 0.73333198  0.75843223  0.79541483  0.84219113  0.90308025]
NDCG3: [ 0.71707726  0.74652405  0.78456756  0.83318046  0.89766934]
NDCG4: [ 0.73184855  0.75636901  0.79232662  0.8396421   0.90199688]
Iteration 1 [23.5 s]: ranku_loss = 0.856732 [50.08 s],
NDCG1: [ 0.76280719  0.78213599  0.81252913  0.85602242  0.91219789]
NDCG2: [ 0.73308597  0.75869428  0.79567736  0.84223584  0.9031607 ]
NDCG3: [ 0.71879155  0.74677137  0.78394931  0.83284715  0.89779446]
NDCG4: [ 0.73484447  0.75814153  0.79359711  0.84069004  0.90281104]
Iteration 2 [24.7 s]: ranku_loss = 0.695025 [47.40 s],
NDCG1: [ 0.77753026  0.79398751  0.82298193  0.86412017  0.91718684]
NDCG2: [ 0.75701841  0.78064139  0.81281606  0.85590734  0.91146171]
NDCG3: [ 0.70793696  0.73930179  0.77862186  0.82887975  0.89486551]
NDCG4: [ 0.74008892  0.76284622  0.79751306  0.84364559  0.90465621]
Iteration 3 [19.5 s]: ranku_loss = 0.680630 [43.14 s],
NDCG1: [ 0.79009729  0.80655796  0.83448448  0.8731442   0.92217287]
NDCG2: [ 0.78975444  0.80388639  0.83301246  0.87249956  0.92160068]
NDCG3: [ 0.70222684  0.73350174  0.77398824  0.82476604  0.8926623 ]
NDCG4: [ 0.74868552  0.77000628  0.80346894  0.84830839  0.90752697]
Iteration 4 [23.4 s]: ranku_loss = 0.663257 [40.79 s],
NDCG1: [ 0.79600147  0.81101032  0.83898788  0.87640742  0.92418526]
NDCG2: [ 0.79671457  0.81009179  0.83899715  0.87608002  0.92411115]
NDCG3: [ 0.70180516  0.73188299  0.77246059  0.82377505  0.89219306]
NDCG4: [ 0.75399085  0.77362024  0.80563572  0.85050261  0.90900675]
Iteration 5 [22.7 s]: ranku_loss = 0.648524 [43.25 s],
NDCG1: [ 0.79906473  0.8133848   0.84161879  0.87798159  0.92524151]
NDCG2: [ 0.79588248  0.81248569  0.84060208  0.87742176  0.92459158]
NDCG3: [ 0.7028407   0.73303105  0.77311637  0.82360796  0.89244865]
NDCG4: [ 0.7477163   0.76832233  0.80265279  0.84731517  0.90704633]
Iteration 6 [20.7 s]: ranku_loss = 0.642257 [41.07 s],
NDCG1: [ 0.79894928  0.81351972  0.8416386   0.87816013  0.92527802]
NDCG2: [ 0.79705095  0.81346581  0.84172029  0.87787552  0.92503652]
NDCG3: [ 0.70833174  0.73876403  0.77744462  0.82731892  0.89456373]
NDCG4: [ 0.73287143  0.75807761  0.7935249   0.84004059  0.90254482]
Iteration 7 [23.1 s]: ranku_loss = 0.638862 [43.88 s],
NDCG1: [ 0.79870079  0.81498889  0.84228369  0.87855966  0.92551541]
NDCG2: [ 0.79587642  0.812573    0.84107075  0.87773742  0.92471188]
NDCG3: [ 0.71848244  0.74719552  0.78405753  0.83308984  0.89797173]
NDCG4: [ 0.71858847  0.7459037   0.78373409  0.83278578  0.89790095]
Iteration 8 [22.1 s]: ranku_loss = 0.635984 [42.55 s],
NDCG1: [ 0.79866115  0.81482854  0.84234605  0.87880876  0.92553521]
NDCG2: [ 0.79717319  0.81398734  0.84162656  0.87866407  0.92518524]
NDCG3: [ 0.7295249   0.75656353  0.7907896   0.8380929   0.9014765 ]
NDCG4: [ 0.70710359  0.73596785  0.77492888  0.82662136  0.89383918]
Iteration 9 [23.1 s]: ranku_loss = 0.631813 [45.78 s],
NDCG1: [ 0.79934808  0.81473577  0.84191737  0.87854754  0.92551654]
NDCG2: [ 0.79897198  0.81424144  0.84161951  0.87833651  0.92538711]
NDCG3: [ 0.73031778  0.75692351  0.79168295  0.83896159  0.90191973]
NDCG4: [ 0.70643185  0.73414312  0.77175668  0.82400883  0.89298746]
End. Best Model is model1.
Test_NDCG:
[ 0.80343139  0.79718398  0.79432475  0.79341337  0.79385004  0.79480869
  0.79690725  0.79991557  0.80407603  0.80933066]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [35.6 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [43.8], Init: 
Init_NDCG1: [ 0.71850244  0.74692578  0.78287644  0.83220846  0.89763615]
Init_NDCG2: [ 0.71974781  0.74641967  0.78352923  0.83363389  0.89792288]
Init_NDCG3: [ 0.72217031  0.74660585  0.78447418  0.83307944  0.89818299]
Init_NDCG4: [ 0.71791231  0.74584103  0.78292835  0.8320156   0.89742511]
Iteration 0 [25.9 s]: ranku_loss = 1.754991 [43.34 s],
NDCG1: [ 0.74732214  0.76817738  0.80208612  0.846481    0.90684813]
NDCG2: [ 0.72075594  0.74752142  0.78575788  0.83449092  0.8985438 ]
NDCG3: [ 0.72269909  0.74746462  0.78386075  0.83362741  0.89837603]
NDCG4: [ 0.71862541  0.74496637  0.78397518  0.83146826  0.89745641]
Iteration 1 [22.0 s]: ranku_loss = 0.900286 [40.89 s],
NDCG1: [ 0.75592622  0.77693958  0.80911957  0.85243249  0.91016632]
NDCG2: [ 0.70930611  0.73892532  0.7777163   0.82835655  0.89485566]
NDCG3: [ 0.71897843  0.74529119  0.78234767  0.8317562   0.89741041]
NDCG4: [ 0.72102626  0.74605598  0.78380402  0.83258631  0.89800193]
Iteration 2 [23.4 s]: ranku_loss = 0.709837 [43.48 s],
NDCG1: [ 0.76773631  0.78687724  0.81746807  0.85944961  0.91424319]
NDCG2: [ 0.7045759   0.73482102  0.77396256  0.82632681  0.89318698]
NDCG3: [ 0.71574235  0.74174201  0.77918942  0.82934434  0.89604696]
NDCG4: [ 0.72424993  0.74948428  0.78624152  0.83434283  0.89929929]
Iteration 3 [22.0 s]: ranku_loss = 0.689333 [40.98 s],
NDCG1: [ 0.77819678  0.79564856  0.82577142  0.86635965  0.91795503]
NDCG2: [ 0.73478464  0.76001079  0.79694039  0.84405194  0.90369282]
NDCG3: [ 0.71171539  0.73662427  0.77542467  0.82698427  0.89435588]
NDCG4: [ 0.72510863  0.75101874  0.78785658  0.83602281  0.89992385]
Iteration 4 [22.7 s]: ranku_loss = 0.681564 [44.05 s],
NDCG1: [ 0.78972561  0.80379884  0.83243505  0.87235762  0.92148034]
NDCG2: [ 0.78822999  0.80511588  0.83297733  0.87206554  0.92153147]
NDCG3: [ 0.70101953  0.72964207  0.76961678  0.82188939  0.89133866]
NDCG4: [ 0.73442059  0.75765793  0.7933569   0.84042436  0.90272931]
Iteration 5 [22.6 s]: ranku_loss = 0.664472 [41.34 s],
NDCG1: [ 0.79457265  0.81023084  0.83811586  0.87641521  0.92387253]
NDCG2: [ 0.79429299  0.81064376  0.83803099  0.87638777  0.92389871]
NDCG3: [ 0.68304052  0.71584771  0.75831317  0.81298902  0.88567778]
NDCG4: [ 0.74405237  0.76679539  0.80124369  0.84666949  0.90626334]
Iteration 6 [27.7 s]: ranku_loss = 0.647547 [43.12 s],
NDCG1: [ 0.79598676  0.81048883  0.83878275  0.87708493  0.9241071 ]
NDCG2: [ 0.79440562  0.81134917  0.83880904  0.87670735  0.92402877]
NDCG3: [ 0.6737356   0.70814535  0.751963    0.80764694  0.8825761 ]
NDCG4: [ 0.73622927  0.76151468  0.79634148  0.84339724  0.90388793]
Iteration 7 [22.2 s]: ranku_loss = 0.640981 [40.66 s],
NDCG1: [ 0.79748884  0.81238294  0.84026083  0.87792259  0.92475978]
NDCG2: [ 0.79680852  0.81227839  0.84006884  0.87773524  0.92465207]
NDCG3: [ 0.67050598  0.70602601  0.75086389  0.80678721  0.88179845]
NDCG4: [ 0.73201631  0.75822032  0.79444545  0.84158802  0.90261813]
Iteration 8 [29.9 s]: ranku_loss = 0.635087 [42.49 s],
NDCG1: [ 0.7979882   0.81316994  0.84072314  0.87798229  0.92502621]
NDCG2: [ 0.79773372  0.81287069  0.84041179  0.87806863  0.92495711]
NDCG3: [ 0.68193122  0.71473176  0.7577721   0.81214295  0.88531714]
NDCG4: [ 0.72747729  0.75396998  0.79025786  0.83824036  0.9008845 ]
Iteration 9 [22.2 s]: ranku_loss = 0.629599 [41.38 s],
NDCG1: [ 0.79907549  0.81385484  0.84195281  0.87849489  0.92535141]
NDCG2: [ 0.79775993  0.81312156  0.84097832  0.87830807  0.92504024]
NDCG3: [ 0.69714306  0.72623652  0.76662003  0.81921948  0.88995909]
NDCG4: [ 0.73401654  0.75932067  0.79437221  0.84166151  0.9030179 ]
Iteration 10 [34.7 s]: ranku_loss = 0.622731 [42.13 s],
NDCG1: [ 0.7999066   0.81518593  0.84209007  0.87889243  0.92564219]
NDCG2: [ 0.79810868  0.814741    0.84151325  0.87838423  0.92531247]
NDCG3: [ 0.71105493  0.73812987  0.77586506  0.8263978   0.89451424]
NDCG4: [ 0.73632687  0.76045788  0.79580393  0.84257698  0.90364062]
Iteration 11 [22.4 s]: ranku_loss = 0.617390 [40.89 s],
NDCG1: [ 0.79943527  0.81440281  0.84156555  0.87882298  0.92543908]
NDCG2: [ 0.79883149  0.81391555  0.84151262  0.87868591  0.92531753]
NDCG3: [ 0.70589818  0.73495415  0.77306974  0.82427965  0.89309713]
NDCG4: [ 0.73747823  0.76096758  0.79606834  0.84309146  0.90389488]
End. Best Model is model1.
Test_NDCG:
[ 0.81378448  0.8070286   0.80246107  0.80042338  0.79957832  0.80016165
  0.80193258  0.8046231   0.80830321  0.81291874]

liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/amazonfix20/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/amazonfix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [34.3 s]. #user=16834, #item=30133, #train_user=3535140, #cv=84170, #test=944442
Time: [45.4], Init: 
Init_NDCG1: [ 0.71281302  0.74201307  0.78021347  0.8303844   0.89592343]
Init_NDCG2: [ 0.71993181  0.74718504  0.78451186  0.83269783  0.89799553]
Init_NDCG3: [ 0.71888726  0.74690864  0.78354789  0.83224592  0.89784752]
Init_NDCG4: [ 0.71998189  0.74665761  0.7829445   0.83275575  0.89780538]
Iteration 0 [26.6 s]: ranku_loss = 1.574981 [47.29 s],
NDCG1: [ 0.74833709  0.76907573  0.80226109  0.84753152  0.9069862 ]
NDCG2: [ 0.72240424  0.7497041   0.786789    0.83499904  0.89914281]
NDCG3: [ 0.71974614  0.74830532  0.78536969  0.83298694  0.89830271]
NDCG4: [ 0.70718046  0.73571174  0.77483228  0.82619437  0.89367206]
Iteration 1 [23.8 s]: ranku_loss = 0.783911 [47.92 s],
NDCG1: [ 0.76516231  0.78395771  0.81486934  0.85760492  0.91292871]
NDCG2: [ 0.7070303   0.73720224  0.77614134  0.82635621  0.89396834]
NDCG3: [ 0.72897671  0.75445464  0.79118598  0.83778915  0.90112761]
NDCG4: [ 0.68491797  0.71910139  0.76156929  0.81551733  0.88689157]
Iteration 2 [29.0 s]: ranku_loss = 0.691677 [46.50 s],
NDCG1: [ 0.77921283  0.79688236  0.82606697  0.86689561  0.91820841]
NDCG2: [ 0.73425569  0.76023399  0.79683138  0.84336199  0.90350762]
NDCG3: [ 0.73952879  0.764053    0.79846134  0.84401625  0.90484943]
NDCG4: [ 0.66501045  0.70253729  0.74854269  0.80595061  0.88046472]
Iteration 3 [37.1 s]: ranku_loss = 0.682308 [41.34 s],
NDCG1: [ 0.78775133  0.80604235  0.83343514  0.87229786  0.92155849]
NDCG2: [ 0.78894688  0.80493971  0.83389086  0.87262392  0.92161796]
NDCG3: [ 0.74799589  0.77110842  0.80547995  0.84972406  0.90790487]
NDCG4: [ 0.64963534  0.68947641  0.73848848  0.79801206  0.87539526]
Iteration 4 [37.4 s]: ranku_loss = 0.665067 [41.52 s],
NDCG1: [ 0.79496276  0.81082604  0.83796543  0.87537387  0.92377687]
NDCG2: [ 0.79647553  0.811579    0.83873035  0.87591967  0.9242202 ]
NDCG3: [ 0.76084875  0.77943362  0.81239293  0.85521821  0.91157998]
NDCG4: [ 0.63989479  0.68171278  0.73152986  0.79232624  0.87218276]
Iteration 5 [31.5 s]: ranku_loss = 0.647539 [46.25 s],
NDCG1: [ 0.79729777  0.81294933  0.84017808  0.87700909  0.92473756]
NDCG2: [ 0.79810047  0.81347504  0.84000359  0.87722385  0.92490226]
NDCG3: [ 0.75134158  0.77193855  0.8057712   0.84990575  0.90842662]
NDCG4: [ 0.63864843  0.67986474  0.73016959  0.79115468  0.8716474 ]
Iteration 6 [23.5 s]: ranku_loss = 0.640351 [46.32 s],
NDCG1: [ 0.79833564  0.81339265  0.84085483  0.87752521  0.9250278 ]
NDCG2: [ 0.79792666  0.81263538  0.8401165   0.87736481  0.92480167]
NDCG3: [ 0.71854861  0.74552355  0.78389196  0.83224489  0.89756417]
NDCG4: [ 0.63973335  0.68120306  0.73094643  0.79196971  0.87208791]
Iteration 7 [19.2 s]: ranku_loss = 0.637018 [43.06 s],
NDCG1: [ 0.80003646  0.81470679  0.84144595  0.87831528  0.92549201]
NDCG2: [ 0.79976038  0.81439468  0.84161394  0.87813159  0.92544189]
NDCG3: [ 0.67222973  0.70918752  0.75421064  0.8094051   0.88294142]
NDCG4: [ 0.64273507  0.6836038   0.73257854  0.79331283  0.87298097]
Iteration 8 [19.1 s]: ranku_loss = 0.630561 [42.96 s],
NDCG1: [ 0.7994755   0.81429673  0.84137539  0.87776988  0.92528395]
NDCG2: [ 0.79818957  0.81402173  0.84122103  0.87766438  0.92512284]
NDCG3: [ 0.65441767  0.69372058  0.74101622  0.79979505  0.87691599]
NDCG4: [ 0.65308264  0.69022493  0.73766043  0.79691444  0.87580028]
End. Best Model is model1.
Test_NDCG:
[ 0.81488721  0.80885196  0.80462902  0.80190672  0.80100801  0.8016256
  0.80317288  0.80576915  0.80938589  0.81400014]



