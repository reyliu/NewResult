liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [30.7 s]. #user=4837, #item=12922, #train_user=2902200, #cv=24185, #test=258641
Time: [11.9], Init: 
Init_NDCG1: [ 0.62442387  0.66489092  0.72058866  0.78398196  0.86073654]
Init_NDCG2: [ 0.6194019   0.66178608  0.71522095  0.78081831  0.85913396]
Init_NDCG3: [ 0.61858206  0.65624011  0.71208243  0.77815238  0.85781645]
Init_NDCG4: [ 0.62361304  0.66640413  0.71791366  0.78234015  0.86064499]
Iteration 0 [42.6 s]: ranku_loss = 1.204404 [9.11 s],
NDCG1: [ 0.65740212  0.69260468  0.74251106  0.79971425  0.87232185]
NDCG2: [ 0.66095932  0.69871012  0.74664339  0.80540729  0.87456843]
NDCG3: [ 0.59436601  0.63942313  0.69662558  0.76660263  0.85029191]
NDCG4: [ 0.62859918  0.67323099  0.72579678  0.78799058  0.86357976]
Iteration 1 [24.8 s]: ranku_loss = 0.685624 [8.57 s],
NDCG1: [ 0.73123367  0.75695907  0.79858872  0.84617618  0.8998209 ]
NDCG2: [ 0.72607883  0.7523148   0.79190836  0.84096904  0.89726062]
NDCG3: [ 0.55230442  0.60408582  0.66615472  0.74181107  0.83520262]
NDCG4: [ 0.65779261  0.6938392   0.74338664  0.80218424  0.87293878]
Iteration 2 [32.3 s]: ranku_loss = 0.637766 [8.53 s],
NDCG1: [ 0.73485692  0.76284937  0.80340168  0.8503292   0.90175851]
NDCG2: [ 0.73592155  0.76193555  0.8032731   0.85027919  0.90174785]
NDCG3: [ 0.51643867  0.57716368  0.64796311  0.72804648  0.82439015]
NDCG4: [ 0.65366887  0.6952538   0.74643061  0.80424744  0.87327839]
Iteration 3 [53.3 s]: ranku_loss = 0.619392 [10.39 s],
NDCG1: [ 0.73514134  0.76218082  0.80388542  0.84972696  0.90172036]
NDCG2: [ 0.7342111   0.76158832  0.80307353  0.84989806  0.90146292]
NDCG3: [ 0.51565248  0.5779795   0.64817014  0.72605399  0.82421612]
NDCG4: [ 0.61808144  0.66341937  0.71950889  0.78404148  0.86011129]
End. Best Model is model1.
Test_NDCG:
[ 0.74864452  0.73048729  0.72629143  0.72384618  0.72462837  0.72734323
  0.73201652  0.73812553  0.74405302  0.75094284]
liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix30/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix30/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [29.7 s]. #user=4837, #item=12922, #train_user=2902200, #cv=24185, #test=258641
Time: [12.1], Init: 
Init_NDCG1: [ 0.62617204  0.66654667  0.72128325  0.78440235  0.86166383]
Init_NDCG2: [ 0.62344701  0.66741371  0.71886867  0.7828578   0.86097314]
Init_NDCG3: [ 0.61704399  0.66144321  0.71404826  0.78078366  0.85865773]
Init_NDCG4: [ 0.62608566  0.66536614  0.71917814  0.78376628  0.8610413 ]
Iteration 0 [59.2 s]: ranku_loss = 1.721490 [10.34 s],
NDCG1: [ 0.67949171  0.71440965  0.75907733  0.8132561   0.88070541]
NDCG2: [ 0.60215975  0.6465473   0.69994143  0.7679036   0.85224733]
NDCG3: [ 0.65492379  0.69170786  0.74018963  0.80033278  0.87188308]
NDCG4: [ 0.63585394  0.67488026  0.7281735   0.79147406  0.86526242]
Iteration 1 [38.1 s]: ranku_loss = 0.740898 [10.29 s],
NDCG1: [ 0.70332743  0.73361121  0.77801269  0.82965422  0.8896928 ]
NDCG2: [ 0.5950418   0.6378202   0.69583697  0.76586059  0.84972457]
NDCG3: [ 0.68504275  0.71643312  0.76315317  0.81810146  0.88262412]
NDCG4: [ 0.60876551  0.64959786  0.70832435  0.7763261   0.85524343]
Iteration 2 [55.0 s]: ranku_loss = 0.671595 [10.10 s],
NDCG1: [ 0.72908879  0.75801685  0.79947988  0.84687352  0.89976557]
NDCG2: [ 0.73332978  0.76154795  0.80178173  0.84871643  0.90106861]
NDCG3: [ 0.70781752  0.73748039  0.78059765  0.83224788  0.89124621]
NDCG4: [ 0.57912329  0.62578765  0.68676581  0.75963287  0.84491249]
Iteration 3 [36.0 s]: ranku_loss = 0.627020 [10.03 s],
NDCG1: [ 0.73749696  0.7641929   0.80360488  0.85077682  0.90230741]
NDCG2: [ 0.73676096  0.76316901  0.80380502  0.8509532   0.90205617]
NDCG3: [ 0.71757373  0.74363348  0.7849055   0.83358663  0.89377416]
NDCG4: [ 0.61038894  0.65090743  0.70568255  0.772647    0.85495713]
Iteration 4 [55.9 s]: ranku_loss = 0.616882 [10.31 s],
NDCG1: [ 0.73604388  0.7625626   0.80292961  0.8506552   0.90174321]
NDCG2: [ 0.73544557  0.76110382  0.80273458  0.85045342  0.90147759]
NDCG3: [ 0.72305237  0.74656676  0.7863894   0.83584608  0.89524462]
NDCG4: [ 0.68411213  0.71497655  0.76493902  0.81947619  0.88259073]
End. Best Model is model1.
Test_NDCG:
[ 0.75578482  0.73969596  0.73372672  0.73028217  0.73102267  0.73372215
  0.73755614  0.74209957  0.74787909  0.75494385]

