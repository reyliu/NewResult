liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_formoviefix50/MLP.py --learner adam --lr 0.0001 --path Data/moviefix50/ --batch_size_random 512000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=512000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Time: [174.2], Init: 
Init_NDCG1: [ 0.61241204  0.66459903  0.72262297  0.78677629  0.85993896]
Init_NDCG2: [ 0.59544458  0.65359558  0.71434899  0.78093905  0.85509241]
Init_NDCG3: [ 0.60498767  0.65741271  0.71625232  0.78107713  0.8569399 ]
Init_NDCG4: [ 0.60092104  0.65372288  0.71395082  0.77966225  0.85557709]
Iteration 0 [1093.7 s]: ranku_loss = 0.632709 [160.67 s],
NDCG1: [ 0.76281213  0.79947742  0.84006691  0.87935011  0.91716121]
NDCG2: [ 0.76181663  0.79860305  0.839072    0.8787238   0.91676081]
NDCG3: [ 0.68476605  0.73428502  0.78607733  0.83743229  0.88958986]
NDCG4: [ 0.5255578   0.58917345  0.65982634  0.73733496  0.82855967]
Iteration 1 [1136.6 s]: ranku_loss = 0.619995 [171.73 s],
NDCG1: [ 0.7637073   0.80053845  0.84154596  0.88054193  0.91769924]
NDCG2: [ 0.76333922  0.8006209   0.84147132  0.88030062  0.91762526]
NDCG3: [ 0.68261224  0.72720971  0.77669794  0.82891406  0.88651211]
NDCG4: [ 0.64715441  0.69288584  0.74450726  0.80161455  0.871723  ]
Iteration 2 [1158.8 s]: ranku_loss = 0.613484 [171.49 s],
NDCG1: [ 0.76551485  0.80210756  0.84232241  0.88123866  0.9182885 ]
NDCG2: [ 0.76391709  0.80104219  0.84178445  0.88079832  0.91780951]
NDCG3: [ 0.69118776  0.73468444  0.78363351  0.83542402  0.88987211]
NDCG4: [ 0.67490493  0.7195474   0.76967937  0.82244998  0.88322018]
Iteration 3 [1132.1 s]: ranku_loss = 0.609589 [170.61 s],
NDCG1: [ 0.76708329  0.80273968  0.84255002  0.88132582  0.9185606 ]
NDCG2: [ 0.76745287  0.80266423  0.84272846  0.88171035  0.91862802]
NDCG3: [ 0.69488036  0.73807349  0.78702828  0.83801197  0.89141154]
NDCG4: [ 0.67288323  0.720858    0.77169691  0.82651359  0.88377721]
Iteration 4 [1139.6 s]: ranku_loss = 0.605520 [161.90 s],
NDCG1: [ 0.76777984  0.80439505  0.84392408  0.88212764  0.9191082 ]
NDCG2: [ 0.76839892  0.80459032  0.8440534   0.88232278  0.91925684]
NDCG3: [ 0.68089095  0.72579486  0.77672265  0.8305865   0.88632128]
NDCG4: [ 0.66546489  0.71373049  0.76683919  0.82286101  0.88109299]
Iteration 5 [1091.3 s]: ranku_loss = 0.601685 [159.87 s],
NDCG1: [ 0.76816029  0.80430584  0.84382317  0.88242329  0.91920448]
NDCG2: [ 0.76841322  0.80488228  0.84440288  0.88292738  0.91941561]
NDCG3: [ 0.68265377  0.72745607  0.77773321  0.83089321  0.88682217]
NDCG4: [ 0.64357646  0.69572836  0.75119878  0.80973347  0.87319247]
Iteration 6 [1105.1 s]: ranku_loss = 0.597904 [161.07 s],
NDCG1: [ 0.7701315   0.80586998  0.84451576  0.88323629  0.91975742]
NDCG2: [ 0.76871625  0.8055203   0.84456393  0.88278214  0.91952928]
NDCG3: [ 0.68440956  0.72627213  0.77506459  0.82707086  0.88620602]
NDCG4: [ 0.64843036  0.70148347  0.75704181  0.81460154  0.87564601]
Iteration 7 [1082.1 s]: ranku_loss = 0.591343 [165.87 s],
NDCG1: [ 0.77018676  0.80536988  0.84418591  0.88275104  0.91965396]
NDCG2: [ 0.76708231  0.80365117  0.84331569  0.88217592  0.91895265]
NDCG3: [ 0.67474945  0.7135518   0.76160865  0.8157654   0.88074445]
NDCG4: [ 0.65563774  0.70916734  0.76464054  0.82070586  0.87891082]
End. Best Model is model1.
Test_NDCG:
[ 0.7263628   0.71940791  0.71728265  0.71597436  0.71621654  0.71694756
  0.71841909  0.72049113  0.7227445   0.7254135 ]
liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_formoviefix50/MLP.py --learner adam --lr 0.0001 --path Data/moviefix50/ --batch_size_random 1280000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=1280000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Time: [162.0], Init: 
Init_NDCG1: [ 0.60102838  0.65425529  0.71406268  0.77980938  0.85570716]
Init_NDCG2: [ 0.61168064  0.66258166  0.72115245  0.78588304  0.85942176]
Init_NDCG3: [ 0.60469346  0.65951811  0.7187023   0.78280464  0.85757864]
Init_NDCG4: [ 0.60025404  0.65384563  0.71441021  0.78018486  0.85559877]
Iteration 0 [1855.3 s]: ranku_loss = 0.618188 [159.51 s],
NDCG1: [ 0.76513155  0.80161403  0.84218854  0.88129746  0.9181495 ]
NDCG2: [ 0.76448908  0.80132697  0.84167519  0.88097131  0.91793199]
NDCG3: [ 0.72082314  0.75738386  0.80212908  0.85038539  0.89974644]
NDCG4: [ 0.71856298  0.75680856  0.80118801  0.84894611  0.89917512]
Iteration 1 [1863.2 s]: ranku_loss = 0.603693 [159.64 s],
NDCG1: [ 0.76933091  0.80504581  0.84446337  0.88288401  0.91954481]
NDCG2: [ 0.76336219  0.8016783   0.84235599  0.88133258  0.91801887]
NDCG3: [ 0.70125136  0.74090716  0.78761069  0.83797232  0.89253274]
NDCG4: [ 0.68541615  0.72830645  0.77757892  0.82951473  0.8871073 ]
Iteration 2 [1862.6 s]: ranku_loss = 0.586437 [159.72 s],
NDCG1: [ 0.76778587  0.80278647  0.84151406  0.8802776   0.91844995]
NDCG2: [ 0.75573565  0.79676055  0.83821146  0.87797637  0.91568317]
NDCG3: [ 0.69990176  0.74123058  0.78939688  0.8390166   0.89269219]
NDCG4: [ 0.67532552  0.72116718  0.77325459  0.82690178  0.88427208]
End. Best Model is model1.
Test_NDCG:
[ 0.72428338  0.71886552  0.71580271  0.71441428  0.71410207  0.71513056
  0.71662311  0.71864398  0.72078322  0.72326275]
liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_formoviefix50/MLP.py --learner adam --lr 0.0001 --path Data/moviefix50/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Time: [163.1], Init: 
Init_NDCG1: [ 0.60780683  0.6606917   0.71951971  0.78332625  0.85818004]
Init_NDCG2: [ 0.59934495  0.65472938  0.71526522  0.78110439  0.85572707]
Init_NDCG3: [ 0.60799543  0.66092713  0.72010676  0.78494941  0.85846769]
Init_NDCG4: [ 0.60320322  0.6574718   0.71720902  0.7818682   0.85693139]
Iteration 0 [1211.8 s]: ranku_loss = 0.630202 [161.29 s],
NDCG1: [ 0.76296619  0.79966467  0.8399649   0.87926047  0.91716031]
NDCG2: [ 0.76071887  0.79917512  0.84012733  0.87916897  0.91683772]
NDCG3: [ 0.74089716  0.78733976  0.83204808  0.87310534  0.91161891]
NDCG4: [ 0.75610038  0.79571042  0.83804275  0.87759962  0.91554631]
Iteration 1 [1207.4 s]: ranku_loss = 0.619474 [163.32 s],
NDCG1: [ 0.76395038  0.80124458  0.8410431   0.8804465   0.91772011]
NDCG2: [ 0.76280285  0.80019409  0.84097223  0.88031189  0.9174551 ]
NDCG3: [ 0.73430921  0.77875073  0.82327329  0.86621123  0.90810884]
NDCG4: [ 0.75186564  0.79260076  0.83544531  0.8763729   0.91426277]
Iteration 2 [1218.6 s]: ranku_loss = 0.611115 [161.84 s],
NDCG1: [ 0.76463417  0.80203121  0.84161571  0.88080473  0.9180087 ]
NDCG2: [ 0.7608126   0.79945107  0.84031173  0.87986183  0.9170355 ]
NDCG3: [ 0.70851774  0.75028668  0.79822224  0.84615573  0.89669583]
NDCG4: [ 0.73881804  0.78103513  0.82556971  0.86885373  0.90941117]
Iteration 3 [1208.9 s]: ranku_loss = 0.603956 [162.28 s],
NDCG1: [ 0.7659489   0.80258408  0.84166699  0.8804563   0.91822595]
NDCG2: [ 0.76203576  0.79919326  0.8407012   0.88011429  0.91717569]
NDCG3: [ 0.68062814  0.72562087  0.77722461  0.82968772  0.88626362]
NDCG4: [ 0.72063471  0.76554203  0.81265615  0.8583777   0.9028056 ]
Iteration 4 [1208.8 s]: ranku_loss = 0.594561 [162.01 s],
NDCG1: [ 0.76685696  0.80135864  0.84110891  0.87935123  0.91799744]
NDCG2: [ 0.761044    0.79984681  0.84045266  0.87994274  0.91713171]
NDCG3: [ 0.63668547  0.68746847  0.74358153  0.8034527   0.86995174]
NDCG4: [ 0.70012023  0.74582498  0.7962963   0.84619496  0.89483306]
End. Best Model is model1.
Test_NDCG:
[ 0.72172607  0.71681209  0.71319001  0.71108403  0.71077134  0.711566
  0.71339754  0.71567863  0.71833923  0.72130677]

