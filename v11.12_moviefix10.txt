liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/moviefix10/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix10/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [85.2 s]. #user=69838, #item=8940, #train_user=1396760, #cv=349190, #test=9285378
Time: [485.1], Init: 
Init_NDCG1: [ 0.62060063  0.66702304  0.72493307  0.78819471  0.86156527]
Init_NDCG2: [ 0.60662819  0.65743999  0.71659732  0.78131921  0.85708107]
Init_NDCG3: [ 0.60775638  0.65826765  0.71740554  0.78251872  0.85749818]
Init_NDCG4: [ 0.6124044   0.66351767  0.72293473  0.78724166  0.85976771]
Iteration 0 [33.9 s]: ranku_loss = 1.226822 [479.82 s],
NDCG1: [ 0.68582302  0.72168759  0.76775687  0.82168629  0.88424604]
NDCG2: [ 0.59161265  0.64707114  0.70893903  0.77631761  0.85272802]
NDCG3: [ 0.55911436  0.61652092  0.68190458  0.75423014  0.83992182]
NDCG4: [ 0.63883553  0.68525044  0.73992908  0.79991805  0.86880395]
Iteration 1 [42.5 s]: ranku_loss = 0.693521 [468.99 s],
NDCG1: [ 0.73375248  0.76741051  0.80917616  0.85432971  0.90352776]
NDCG2: [ 0.69794167  0.73993161  0.7895747   0.83967299  0.89216501]
NDCG3: [ 0.52486301  0.58605904  0.65473422  0.73199229  0.82703887]
NDCG4: [ 0.63941462  0.68562544  0.74064154  0.80078867  0.86905977]
Iteration 2 [42.8 s]: ranku_loss = 0.658890 [450.13 s],
NDCG1: [ 0.75220199  0.78754018  0.82865782  0.86994945  0.91204488]
NDCG2: [ 0.74818679  0.78356411  0.82449966  0.8665554   0.91019267]
NDCG3: [ 0.50650988  0.56988199  0.64046828  0.72133807  0.82031843]
NDCG4: [ 0.61140397  0.66472542  0.72341489  0.78691796  0.8598904 ]
Iteration 3 [42.8 s]: ranku_loss = 0.640098 [450.19 s],
NDCG1: [ 0.75656346  0.79155558  0.83211115  0.87277209  0.91372076]
NDCG2: [ 0.75460034  0.78982761  0.83040354  0.87137843  0.91294006]
NDCG3: [ 0.51750744  0.58117786  0.6513427   0.7299641   0.82497381]
NDCG4: [ 0.55291713  0.61553045  0.68338238  0.75648605  0.83942791]
Iteration 4 [43.0 s]: ranku_loss = 0.633547 [449.23 s],
NDCG1: [ 0.75849755  0.79309959  0.83332418  0.87380115  0.91439526]
NDCG2: [ 0.75581708  0.79098813  0.83193483  0.87277103  0.91355118]
NDCG3: [ 0.50926619  0.57381907  0.64544273  0.72543273  0.8219995 ]
NDCG4: [ 0.50469334  0.57520286  0.64974199  0.72989964  0.82251836]
Iteration 5 [42.9 s]: ranku_loss = 0.626221 [448.40 s],
NDCG1: [ 0.75835948  0.79381051  0.83402144  0.87429617  0.91458936]
NDCG2: [ 0.75707949  0.79254778  0.8332184   0.87386127  0.91415631]
NDCG3: [ 0.4866811   0.55673388  0.63166727  0.71473597  0.81473523]
NDCG4: [ 0.48249057  0.55529002  0.63159226  0.71449144  0.81402585]
Iteration 6 [42.5 s]: ranku_loss = 0.614355 [448.80 s],
NDCG1: [ 0.75852578  0.79385101  0.83403783  0.87423952  0.91460812]
NDCG2: [ 0.75647639  0.79234321  0.83316615  0.87377135  0.91403302]
NDCG3: [ 0.47823922  0.54926979  0.62569871  0.71003593  0.81172725]
NDCG4: [ 0.47178565  0.54390397  0.62116118  0.70639708  0.80948843]
Iteration 7 [42.3 s]: ranku_loss = 0.595531 [494.36 s],
NDCG1: [ 0.75572126  0.78970683  0.82950891  0.87042234  0.91288741]
NDCG2: [ 0.73794715  0.77875905  0.82343799  0.86680978  0.90839469]
NDCG3: [ 0.47463315  0.54604753  0.62285836  0.70778636  0.81040978]
NDCG4: [ 0.46656706  0.53836695  0.6158565   0.70241906  0.80726491]
End. Best Model is model1.
Test_NDCG:
[ 0.72022517  0.71380249  0.71296774  0.71265522  0.71348216  0.71570774
  0.71877733  0.72219424  0.72575046  0.72986342]

liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/moviefix10/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix10/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [83.6 s]. #user=69838, #item=8940, #train_user=1396760, #cv=349190, #test=9285378
Time: [483.4], Init: 
Init_NDCG1: [ 0.60068421  0.65357802  0.71354274  0.77982229  0.85546901]
Init_NDCG2: [ 0.60668448  0.6560765   0.71441113  0.78075213  0.85669219]
Init_NDCG3: [ 0.60173101  0.65485264  0.71470498  0.78079848  0.85594771]
Init_NDCG4: [ 0.59559561  0.65037094  0.71168096  0.77835829  0.85408543]
Iteration 0 [33.4 s]: ranku_loss = 1.516498 [510.88 s],
NDCG1: [ 0.65701531  0.70191009  0.7538294   0.810707    0.87575167]
NDCG2: [ 0.58497285  0.63997697  0.70187692  0.77083838  0.84968639]
NDCG3: [ 0.63076122  0.68004113  0.73653284  0.79829939  0.8666987 ]
NDCG4: [ 0.60427958  0.65682775  0.71579928  0.78174628  0.85667273]
Iteration 1 [43.2 s]: ranku_loss = 0.766844 [487.98 s],
NDCG1: [ 0.68620073  0.72790993  0.77744358  0.82934233  0.88693894]
NDCG2: [ 0.55575786  0.61396081  0.67993361  0.75367102  0.83888047]
NDCG3: [ 0.6703201   0.71387392  0.76498158  0.82102632  0.88104101]
NDCG4: [ 0.59244903  0.64575056  0.70712479  0.77564152  0.85232644]
Iteration 2 [43.1 s]: ranku_loss = 0.689075 [487.66 s],
NDCG1: [ 0.71397871  0.75631066  0.80258841  0.84997394  0.89863523]
NDCG2: [ 0.5683884   0.62872751  0.69533779  0.76735687  0.84522328]
NDCG3: [ 0.7017227   0.74235546  0.79042213  0.84134461  0.89317355]
NDCG4: [ 0.60705229  0.65994027  0.72089143  0.78667739  0.85842709]
Iteration 3 [43.4 s]: ranku_loss = 0.675775 [487.91 s],
NDCG1: [ 0.73997668  0.77791287  0.82101111  0.86429621  0.90791277]
NDCG2: [ 0.73688221  0.77246429  0.81507095  0.85906185  0.90559237]
NDCG3: [ 0.72587613  0.76642756  0.81140842  0.85674498  0.90299031]
NDCG4: [ 0.67319232  0.72036365  0.77308075  0.82715987  0.8836955 ]
Iteration 4 [43.6 s]: ranku_loss = 0.651577 [496.24 s],
NDCG1: [ 0.75008743  0.78678432  0.82829871  0.86997061  0.91163966]
NDCG2: [ 0.74965098  0.78592492  0.82687714  0.86849312  0.91114061]
NDCG3: [ 0.74328172  0.78054104  0.82316625  0.86581895  0.90907194]
NDCG4: [ 0.72905052  0.76717624  0.81130919  0.8567027   0.90340526]
Iteration 5 [43.6 s]: ranku_loss = 0.636384 [493.91 s],
NDCG1: [ 0.75493656  0.79058165  0.83149878  0.87226402  0.913255  ]
NDCG2: [ 0.754424    0.79018839  0.83098866  0.87174255  0.91302413]
NDCG3: [ 0.75108025  0.78669783  0.82772928  0.86950041  0.91164462]
NDCG4: [ 0.74662314  0.78321771  0.82488553  0.86764444  0.91014152]
Iteration 6 [44.2 s]: ranku_loss = 0.626968 [541.51 s],
NDCG1: [ 0.75638606  0.79161273  0.83258105  0.87316954  0.91379155]
NDCG2: [ 0.75681817  0.79168474  0.83244191  0.87322102  0.91381434]
NDCG3: [ 0.75325821  0.78889817  0.82935209  0.87075356  0.91245949]
NDCG4: [ 0.7509631   0.78767369  0.82859132  0.87021174  0.91190636]
Iteration 7 [44.1 s]: ranku_loss = 0.613824 [475.05 s],
NDCG1: [ 0.75656217  0.79240516  0.83294609  0.87343984  0.91397559]
NDCG2: [ 0.75690163  0.79240413  0.83311652  0.87368596  0.91405399]
NDCG3: [ 0.75386685  0.78925954  0.82967554  0.87104176  0.91265397]
NDCG4: [ 0.75271196  0.78878605  0.82940514  0.87077024  0.91239913]
Iteration 8 [42.6 s]: ranku_loss = 0.594299 [489.89 s],
NDCG1: [ 0.75670131  0.79214172  0.83293378  0.87328608  0.91395821]
NDCG2: [ 0.74487783  0.78170718  0.825167    0.86801385  0.90989242]
NDCG3: [ 0.75468355  0.78954838  0.82975121  0.87108914  0.91280667]
NDCG4: [ 0.74451041  0.78361142  0.82580629  0.86822953  0.91013184]
End. Best Model is model2.
Test_NDCG:
[ 0.70937654  0.69955248  0.69635694  0.69616668  0.69764406  0.69997826
  0.70349018  0.70762298  0.7118908   0.71642997]
Test_NDCG By model1:
[ 0.71637384  0.70718973  0.70520229  0.70528491  0.70716803  0.71025531
  0.71400538  0.71818807  0.72259331  0.72719413]


