liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/moviefix20/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [169.1 s]. #user=57522, #item=8940, #train_user=12079620, #cv=287610, #test=8538097
Time: [306.6], Init: 
Init_NDCG1: [ 0.60650857  0.65780528  0.71784004  0.78310504  0.85747354]
Init_NDCG2: [ 0.6012248   0.6528406   0.71340594  0.78041415  0.85550315]
Init_NDCG3: [ 0.60650857  0.65780528  0.71784004  0.78310504  0.85747354]
Init_NDCG4: [ 0.6012248   0.6528406   0.71340594  0.78041415  0.85550315]
Iteration 0 [148.4 s]: ranku_loss = 1.174470 [302.62 s],
NDCG1: [ 0.7070981   0.74434968  0.7889189   0.83748867  0.8936616 ]
NDCG2: [ 0.52439305  0.58111259  0.64910416  0.72787723  0.8252923 ]
NDCG3: [ 0.7070981   0.74434968  0.7889189   0.83748867  0.8936616 ]
NDCG4: [ 0.52439305  0.58111259  0.64910416  0.72787723  0.8252923 ]
Iteration 1 [164.6 s]: ranku_loss = 0.693960 [302.97 s],
NDCG1: [ 0.72511125  0.76645706  0.81121583  0.85558709  0.90285926]
NDCG2: [ 0.48167683  0.54849063  0.62469205  0.7106206   0.81205565]
NDCG3: [ 0.72511125  0.76645706  0.81121583  0.85558709  0.90285926]
NDCG4: [ 0.48167683  0.54849063  0.62469205  0.7106206   0.81205565]
Iteration 2 [168.0 s]: ranku_loss = 0.673209 [303.54 s],
NDCG1: [ 0.75654359  0.79285421  0.83319892  0.87405992  0.91424358]
NDCG2: [ 0.7561312   0.7921617   0.83176774  0.87246722  0.91378617]
NDCG3: [ 0.75654359  0.79285421  0.83319892  0.87405992  0.91424358]
NDCG4: [ 0.7561312   0.7921617   0.83176774  0.87246722  0.91378617]
Iteration 3 [172.6 s]: ranku_loss = 0.637159 [328.89 s],
NDCG1: [ 0.75934029  0.79597663  0.83601511  0.87637135  0.91548586]
NDCG2: [ 0.75886996  0.79540887  0.83608159  0.87635118  0.91539568]
NDCG3: [ 0.75934029  0.79597663  0.83601511  0.87637135  0.91548586]
NDCG4: [ 0.75886996  0.79540887  0.83608159  0.87635118  0.91539568]
Iteration 4 [170.0 s]: ranku_loss = 0.631474 [303.39 s],
NDCG1: [ 0.76104962  0.79671688  0.83710559  0.87718961  0.91599556]
NDCG2: [ 0.75844922  0.79547585  0.8363512   0.87680751  0.9154241 ]
NDCG3: [ 0.76104962  0.79671688  0.83710559  0.87718961  0.91599556]
NDCG4: [ 0.75844922  0.79547585  0.8363512   0.87680751  0.9154241 ]
Iteration 5 [166.8 s]: ranku_loss = 0.625302 [303.54 s],
NDCG1: [ 0.76094965  0.79717136  0.83757624  0.87753705  0.9161409 ]
NDCG2: [ 0.75402129  0.79291937  0.83467624  0.87568482  0.91429665]
NDCG3: [ 0.76094965  0.79717136  0.83757624  0.87753705  0.9161409 ]
NDCG4: [ 0.75402129  0.79291937  0.83467624  0.87568482  0.91429665]
Iteration 6 [166.6 s]: ranku_loss = 0.622314 [303.13 s],
NDCG1: [ 0.75989473  0.79614642  0.83646325  0.87616838  0.9156449 ]
NDCG2: [ 0.74778757  0.787796    0.8308722   0.87239782  0.91219203]
NDCG3: [ 0.75989473  0.79614642  0.83646325  0.87616838  0.9156449 ]
NDCG4: [ 0.74778757  0.787796    0.8308722   0.87239782  0.91219203]
End. Best Model is model1.
Test_NDCG:
[ 0.71808796  0.7129323   0.71126046  0.71085717  0.71164549  0.71367028
  0.71623793  0.71917647  0.7224261   0.72594835]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.22_single/MLP.py --learner adam --lr 0.0001 --path Data/moviefix20/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/moviefix20/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [170.1 s]. #user=57522, #item=8940, #train_user=12079620, #cv=287610, #test=8538097
Time: [305.9], Init: 
Init_NDCG1: [ 0.602933    0.65497261  0.71480222  0.78064818  0.85613751]
Init_NDCG2: [ 0.60653166  0.65983148  0.71820651  0.78295976  0.85781374]
Init_NDCG3: [ 0.602933    0.65497261  0.71480222  0.78064818  0.85613751]
Init_NDCG4: [ 0.60653166  0.65983148  0.71820651  0.78295976  0.85781374]
Iteration 0 [147.3 s]: ranku_loss = 1.219894 [307.41 s],
NDCG1: [ 0.66307568  0.70859768  0.75966834  0.81534562  0.87854325]
NDCG2: [ 0.55698947  0.61321749  0.67839598  0.75235762  0.83866146]
NDCG3: [ 0.66307568  0.70859768  0.75966834  0.81534562  0.87854325]
NDCG4: [ 0.55698947  0.61321749  0.67839598  0.75235762  0.83866146]
Iteration 1 [164.4 s]: ranku_loss = 0.695465 [300.54 s],
NDCG1: [ 0.71192124  0.75381997  0.79943603  0.8465214   0.89744411]
NDCG2: [ 0.53658455  0.60411896  0.67475442  0.75160144  0.8347089 ]
NDCG3: [ 0.71192124  0.75381997  0.79943603  0.8465214   0.89744411]
NDCG4: [ 0.53658455  0.60411896  0.67475442  0.75160144  0.8347089 ]
Iteration 2 [166.5 s]: ranku_loss = 0.658494 [300.60 s],
NDCG1: [ 0.75809864  0.79354     0.83392488  0.87408515  0.91458974]
NDCG2: [ 0.75650255  0.79222249  0.83174552  0.87224494  0.91379658]
NDCG3: [ 0.75809864  0.79354     0.83392488  0.87408515  0.91458974]
NDCG4: [ 0.75650255  0.79222249  0.83174552  0.87224494  0.91379658]
Iteration 3 [166.3 s]: ranku_loss = 0.637432 [300.43 s],
NDCG1: [ 0.76048777  0.79624787  0.83615798  0.87543429  0.9155938 ]
NDCG2: [ 0.75964914  0.79507496  0.83542032  0.87532525  0.91526287]
NDCG3: [ 0.76048777  0.79624787  0.83615798  0.87543429  0.9155938 ]
NDCG4: [ 0.75964914  0.79507496  0.83542032  0.87532525  0.91526287]
Iteration 4 [165.2 s]: ranku_loss = 0.632255 [300.80 s],
NDCG1: [ 0.76037249  0.79644233  0.83585265  0.87526081  0.91556665]
NDCG2: [ 0.75723734  0.7942416   0.8348508   0.87547094  0.91482145]
NDCG3: [ 0.76037249  0.79644233  0.83585265  0.87526081  0.91556665]
NDCG4: [ 0.75723734  0.7942416   0.8348508   0.87547094  0.91482145]
End. Best Model is model1.
Test_NDCG:
[ 0.72068492  0.71297961  0.7105097   0.71032062  0.71154628  0.71360232
  0.716039    0.71891028  0.72214354  0.7257323 ]


