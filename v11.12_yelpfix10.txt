liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix10/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix10/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [5.8 s]. #user=13679, #item=12922, #train_user=273580, #cv=68395, #test=503353
Time: [33.2], Init: 
Init_NDCG1: [ 0.62525144  0.66248393  0.71580462  0.78069193  0.85901154]
Init_NDCG2: [ 0.61992263  0.66262408  0.7149912   0.77875964  0.85822762]
Init_NDCG3: [ 0.61946725  0.6594635   0.7117866   0.77695905  0.85711253]
Init_NDCG4: [ 0.6140826   0.65583646  0.71071708  0.77602686  0.85584413]
Iteration 0 [14.4 s]: ranku_loss = 1.512540 [29.78 s],
NDCG1: [ 0.66583889  0.69660446  0.7436608   0.80162647  0.87340381]
NDCG2: [ 0.62017602  0.66073285  0.71466234  0.77864993  0.85773719]
NDCG3: [ 0.63204993  0.66765097  0.72069934  0.78441432  0.86121518]
NDCG4: [ 0.62244035  0.65823574  0.71303619  0.77759959  0.8575244 ]
Iteration 1 [10.4 s]: ranku_loss = 0.776261 [30.17 s],
NDCG1: [ 0.68982789  0.71831294  0.76069155  0.81559402  0.88209792]
NDCG2: [ 0.62073812  0.6608135   0.71427943  0.77753141  0.85773614]
NDCG3: [ 0.6290364   0.66728494  0.71904638  0.78275324  0.86039219]
NDCG4: [ 0.62690875  0.66323356  0.71596437  0.7802535   0.85936398]
Iteration 2 [10.4 s]: ranku_loss = 0.685307 [30.18 s],
NDCG1: [ 0.71558624  0.74238508  0.78356577  0.8333123   0.89257768]
NDCG2: [ 0.68926992  0.72092902  0.76414653  0.81846696  0.8828363 ]
NDCG3: [ 0.6337616   0.67011465  0.72138145  0.7843908   0.86173675]
NDCG4: [ 0.6445979   0.67870268  0.72949997  0.79024186  0.86583495]
Iteration 3 [10.8 s]: ranku_loss = 0.651957 [30.76 s],
NDCG1: [ 0.72797663  0.75322823  0.79224687  0.84049909  0.89705771]
NDCG2: [ 0.72571117  0.74910776  0.78945916  0.83804403  0.89565087]
NDCG3: [ 0.6471954   0.68297436  0.7322778   0.79290484  0.86704444]
NDCG4: [ 0.67019431  0.69962911  0.7464014   0.80381384  0.87478592]
Iteration 4 [13.2 s]: ranku_loss = 0.612301 [31.24 s],
NDCG1: [ 0.73144883  0.75535667  0.79418814  0.84133305  0.89799553]
NDCG2: [ 0.72818379  0.75173683  0.79166532  0.84017117  0.89677026]
NDCG3: [ 0.66776207  0.70096954  0.74847837  0.80625918  0.87486349]
NDCG4: [ 0.6742058   0.70554748  0.75025301  0.8073181   0.87674292]
Iteration 5 [14.5 s]: ranku_loss = 0.592762 [30.89 s],
NDCG1: [ 0.72926224  0.75404724  0.79379966  0.84083368  0.89748143]
NDCG2: [ 0.72530048  0.75120699  0.79201268  0.83956396  0.89629759]
NDCG3: [ 0.67961874  0.7113079   0.75780401  0.8134478   0.87937928]
NDCG4: [ 0.68677847  0.71364904  0.75851647  0.8142658   0.88076714]
End. Best Model is model1.
Test_NDCG:
[ 0.72382877  0.71371323  0.71065447  0.71147191  0.71355323  0.71826951
  0.72450163  0.73286888  0.74235539  0.75303737]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix10/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix10/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [5.7 s]. #user=13679, #item=12922, #train_user=273580, #cv=68395, #test=503353
Time: [32.6], Init: 
Init_NDCG1: [ 0.625536    0.66274112  0.71560226  0.78007068  0.85908267]
Init_NDCG2: [ 0.62523635  0.66344633  0.71699333  0.78056203  0.85931593]
Init_NDCG3: [ 0.62227779  0.66062439  0.71510591  0.77860832  0.85826828]
Init_NDCG4: [ 0.61500182  0.65532516  0.70939159  0.77466707  0.85562383]
Iteration 0 [21.7 s]: ranku_loss = 1.595166 [30.65 s],
NDCG1: [ 0.66369241  0.69440167  0.74151682  0.80038685  0.87250175]
NDCG2: [ 0.61685335  0.65656376  0.71040209  0.77520228  0.85598465]
NDCG3: [ 0.6218371   0.6592725   0.71014963  0.77490034  0.85704459]
NDCG4: [ 0.61955816  0.65720171  0.70927304  0.77505525  0.85649145]
Iteration 1 [17.3 s]: ranku_loss = 0.781951 [30.59 s],
NDCG1: [ 0.6850329   0.71314579  0.75882367  0.81327681  0.8806235 ]
NDCG2: [ 0.60755739  0.64684564  0.70194348  0.76879047  0.852081  ]
NDCG3: [ 0.60314204  0.64347205  0.6973849   0.76528022  0.85046137]
NDCG4: [ 0.61798117  0.65430563  0.70846561  0.77446385  0.85583988]
Iteration 2 [16.3 s]: ranku_loss = 0.686251 [32.20 s],
NDCG1: [ 0.7124892   0.74035689  0.78182203  0.8321819   0.89169969]
NDCG2: [ 0.66800517  0.70297775  0.75118552  0.80905221  0.87567879]
NDCG3: [ 0.59106509  0.63319041  0.68836343  0.75801127  0.84606977]
NDCG4: [ 0.60278333  0.64378238  0.69943967  0.76754663  0.85113701]
Iteration 3 [15.3 s]: ranku_loss = 0.656967 [32.28 s],
NDCG1: [ 0.72587454  0.75139747  0.79152087  0.84010632  0.89655104]
NDCG2: [ 0.72733012  0.74988473  0.78994191  0.83902874  0.89617721]
NDCG3: [ 0.56518911  0.61104704  0.67134654  0.74499773  0.83712365]
NDCG4: [ 0.60053341  0.64194493  0.69603864  0.76479976  0.849921  ]
Iteration 4 [13.8 s]: ranku_loss = 0.615792 [32.00 s],
NDCG1: [ 0.72939102  0.75418623  0.79296292  0.84132714  0.89755736]
NDCG2: [ 0.72833661  0.75343097  0.79253707  0.84092312  0.897203  ]
NDCG3: [ 0.5575156   0.6040844   0.66556836  0.740528    0.83434408]
NDCG4: [ 0.59963661  0.64030813  0.69502464  0.76315309  0.84935866]
Iteration 5 [12.7 s]: ranku_loss = 0.594784 [32.15 s],
NDCG1: [ 0.73105835  0.7550023   0.79357899  0.84139361  0.89789558]
NDCG2: [ 0.7283535   0.75278819  0.79261885  0.84123578  0.89716093]
NDCG3: [ 0.57048535  0.61689582  0.67539917  0.7482598   0.83926068]
NDCG4: [ 0.58007692  0.62270083  0.68054277  0.75055376  0.84195608]
Iteration 6 [14.4 s]: ranku_loss = 0.574226 [32.00 s],
NDCG1: [ 0.73109837  0.75447141  0.7936247   0.84111755  0.89777751]
NDCG2: [ 0.72770227  0.75254648  0.79289521  0.84057067  0.89699386]
NDCG3: [ 0.57393028  0.61855914  0.67672303  0.74899869  0.84013068]
NDCG4: [ 0.57389704  0.61621131  0.67362556  0.74544266  0.83917059]
End. Best Model is model1.
Test_NDCG:
[ 0.72002292  0.71375305  0.71028695  0.70970338  0.71288143  0.71792581
  0.72408335  0.73238436  0.74216463  0.7527778 ]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.12_pair/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix10/
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=256000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix10/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [6.1 s]. #user=13679, #item=12922, #train_user=273580, #cv=68395, #test=503353
Time: [33.0], Init: 
Init_NDCG1: [ 0.62232033  0.66006104  0.71292043  0.77845757  0.85781872]
Init_NDCG2: [ 0.6200701   0.66096902  0.71365548  0.77855019  0.85775118]
Init_NDCG3: [ 0.61967378  0.65855238  0.71211172  0.77769231  0.85718324]
Init_NDCG4: [ 0.62295391  0.65953785  0.71279019  0.77660207  0.85767631]
Iteration 0 [15.1 s]: ranku_loss = 2.288497 [31.97 s],
NDCG1: [ 0.6616338   0.69644834  0.74239023  0.80130967  0.87277233]
NDCG2: [ 0.62018055  0.65868971  0.71156531  0.77627242  0.85708806]
NDCG3: [ 0.62686666  0.66490684  0.71747606  0.78189296  0.859848  ]
NDCG4: [ 0.62087584  0.6624848   0.71457959  0.77840509  0.85810966]
Iteration 1 [12.8 s]: ranku_loss = 1.252357 [31.90 s],
NDCG1: [ 0.67625907  0.70773187  0.75222999  0.80871205  0.87765589]
NDCG2: [ 0.6032976   0.64278571  0.69689521  0.76519368  0.85030462]
NDCG3: [ 0.64197606  0.67889227  0.72888571  0.78910328  0.86541372]
NDCG4: [ 0.60627573  0.65038192  0.70421809  0.77077595  0.85307105]
Iteration 2 [12.4 s]: ranku_loss = 0.830118 [30.58 s],
NDCG1: [ 0.68914239  0.71941574  0.76203972  0.81700497  0.8825722 ]
NDCG2: [ 0.58569429  0.62652601  0.68366958  0.75421731  0.84359216]
NDCG3: [ 0.66417452  0.69524186  0.74180541  0.80012408  0.87264206]
NDCG4: [ 0.59006948  0.63314974  0.68880266  0.75901849  0.84602957]
Iteration 3 [13.0 s]: ranku_loss = 0.702545 [31.73 s],
NDCG1: [ 0.70101047  0.73106289  0.77338582  0.82549629  0.88755792]
NDCG2: [ 0.57809454  0.62351128  0.6809405   0.75254328  0.84187362]
NDCG3: [ 0.67741684  0.70881493  0.75389511  0.80983442  0.87822241]
NDCG4: [ 0.56728415  0.61213559  0.67199013  0.74592435  0.83767726]
Iteration 4 [17.0 s]: ranku_loss = 0.678545 [31.10 s],
NDCG1: [ 0.71498474  0.74197038  0.78341786  0.83320241  0.89241649]
NDCG2: [ 0.67493204  0.70780933  0.75475047  0.81197523  0.87796529]
NDCG3: [ 0.69138652  0.72167022  0.76656931  0.8204647   0.8839413 ]
NDCG4: [ 0.54074198  0.59225718  0.65585002  0.73249887  0.82912339]
Iteration 5 [17.6 s]: ranku_loss = 0.655734 [31.18 s],
NDCG1: [ 0.72440997  0.75064054  0.78977804  0.83848854  0.89582336]
NDCG2: [ 0.72502477  0.75080636  0.78995148  0.83841212  0.89594738]
NDCG3: [ 0.70456739  0.73334219  0.77688939  0.82873596  0.88891535]
NDCG4: [ 0.52351958  0.57975577  0.64430604  0.72342452  0.82353733]
Iteration 6 [18.0 s]: ranku_loss = 0.620297 [33.19 s],
NDCG1: [ 0.72754613  0.75327186  0.79246374  0.84030594  0.89697375]
NDCG2: [ 0.72626205  0.75319099  0.79257     0.84016336  0.89683818]
NDCG3: [ 0.70632446  0.73581543  0.7798758   0.83062315  0.88994546]
NDCG4: [ 0.51936561  0.57503321  0.63997835  0.72041078  0.82170557]
Iteration 7 [15.4 s]: ranku_loss = 0.597645 [32.79 s],
NDCG1: [ 0.72792151  0.75394286  0.79312026  0.84037415  0.897199  ]
NDCG2: [ 0.7278302   0.75339958  0.79321073  0.8405944   0.89714012]
NDCG3: [ 0.69376576  0.72550085  0.77026076  0.82346887  0.88526385]
NDCG4: [ 0.52493693  0.57739875  0.64190684  0.72141404  0.82291019]
Iteration 8 [13.8 s]: ranku_loss = 0.581029 [32.24 s],
NDCG1: [ 0.7289121   0.75411082  0.79324324  0.84032107  0.89731742]
NDCG2: [ 0.72820517  0.75298477  0.79296498  0.8402652   0.89706727]
NDCG3: [ 0.6577405   0.69210806  0.74138426  0.80003051  0.87117561]
NDCG4: [ 0.53869779  0.58635815  0.64900506  0.72634076  0.82681949]
Iteration 9 [13.0 s]: ranku_loss = 0.554522 [32.92 s],
NDCG1: [ 0.72872358  0.75342982  0.79266875  0.84013084  0.89715527]
NDCG2: [ 0.72718121  0.75210384  0.79232534  0.83993526  0.89668259]
NDCG3: [ 0.60674051  0.64749558  0.70103911  0.76786383  0.85203832]
NDCG4: [ 0.55264222  0.59702494  0.65743234  0.73312212  0.83133826]
End. Best Model is model1.
Test_NDCG:
[ 0.71762886  0.71219927  0.70758847  0.70889561  0.71158992  0.71651828
  0.72333659  0.73180097  0.74124768  0.75187044]

