liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix50/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [41.1 s]. #user=2522, #item=12922, #train_user=4993560, #cv=12610, #test=167206
Time: [7.6], Init: 
Init_NDCG1: [ 0.62428765  0.66810332  0.72079003  0.78748839  0.86257686]
Init_NDCG2: [ 0.62335381  0.664558    0.72329242  0.7837523   0.86201558]
Init_NDCG3: [ 0.63252508  0.66850583  0.7213547   0.785647    0.86331983]
Init_NDCG4: [ 0.6265661   0.66929538  0.72289574  0.78593738  0.86256531]
Iteration 0 [65.2 s]: ranku_loss = 0.961910 [4.15 s],
NDCG1: [ 0.72554028  0.75833588  0.79908928  0.84561993  0.90003378]
NDCG2: [ 0.72400711  0.7559728   0.79341215  0.8398207   0.89824451]
NDCG3: [ 0.72538168  0.75829999  0.79898985  0.84568398  0.90000866]
NDCG4: [ 0.72373765  0.75469034  0.79387816  0.83921736  0.8981056 ]
Iteration 1 [49.4 s]: ranku_loss = 0.634999 [4.20 s],
NDCG1: [ 0.74031168  0.77243359  0.80838914  0.85323192  0.90534762]
NDCG2: [ 0.73939976  0.76984717  0.80690145  0.85153312  0.90445274]
NDCG3: [ 0.74015137  0.77294144  0.80808578  0.85329424  0.90536425]
NDCG4: [ 0.74010069  0.76957125  0.80739631  0.85198009  0.90461554]
Iteration 2 [49.2 s]: ranku_loss = 0.619908 [4.19 s],
NDCG1: [ 0.7372541   0.77008473  0.80769699  0.85293757  0.90442796]
NDCG2: [ 0.73497907  0.76899708  0.80635718  0.85152272  0.90366392]
NDCG3: [ 0.73713643  0.77011426  0.80746629  0.85276963  0.9043599 ]
NDCG4: [ 0.73464651  0.76881022  0.8064201   0.85154034  0.90363457]
End. Best Model is model3.
Test_NDCG:
[ 0.76355342  0.74887811  0.74115583  0.7356721   0.73579186  0.73686347
  0.73920463  0.74175477  0.7452513   0.75040503]
Test_NDCG By model1:
[ 0.76350226  0.74956916  0.74094025  0.73570966  0.73576642  0.73682956
  0.73923461  0.74191713  0.74542435  0.75067933]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix50/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [38.1 s]. #user=2522, #item=12922, #train_user=4993560, #cv=12610, #test=167206
Time: [6.8], Init: 
Init_NDCG1: [ 0.62980591  0.67135947  0.72263713  0.78372579  0.8635409 ]
Init_NDCG2: [ 0.6091932   0.65799137  0.71467649  0.77792868  0.85796749]
Init_NDCG3: [ 0.62179822  0.66384521  0.71899133  0.78285305  0.86089854]
Init_NDCG4: [ 0.61746986  0.66321104  0.71741215  0.78192551  0.8601566 ]
Iteration 0 [56.8 s]: ranku_loss = 0.887899 [4.19 s],
NDCG1: [ 0.66770819  0.70491371  0.75104798  0.80759666  0.87744707]
NDCG2: [ 0.59463913  0.63956534  0.69559401  0.76631379  0.85074279]
NDCG3: [ 0.66079806  0.69976197  0.7474413   0.8047281   0.87527859]
NDCG4: [ 0.58928751  0.6376219   0.69338268  0.76285673  0.84918347]
Iteration 1 [49.3 s]: ranku_loss = 0.690679 [4.25 s],
NDCG1: [ 0.72504742  0.75417738  0.79473177  0.84017151  0.89854797]
NDCG2: [ 0.70609749  0.74382078  0.78679873  0.83738026  0.89379435]
NDCG3: [ 0.67346643  0.7045683   0.75477078  0.81133191  0.87890201]
NDCG4: [ 0.59094981  0.64000607  0.70067207  0.7685054   0.85096   ]
Iteration 2 [70.2 s]: ranku_loss = 0.633847 [4.55 s],
NDCG1: [ 0.73556792  0.7697333   0.80822226  0.85211398  0.90427602]
NDCG2: [ 0.73780373  0.76866133  0.80557323  0.85157609  0.90394226]
NDCG3: [ 0.67242807  0.71163764  0.76205291  0.81928915  0.8812131 ]
NDCG4: [ 0.70455141  0.73537141  0.77823601  0.82994259  0.89075489]
Iteration 3 [51.4 s]: ranku_loss = 0.609510 [4.19 s],
NDCG1: [ 0.73728455  0.76960839  0.80551593  0.85207332  0.90391751]
NDCG2: [ 0.73789851  0.76847546  0.80534472  0.85206243  0.90386853]
NDCG3: [ 0.68610385  0.72172597  0.76608727  0.82197285  0.88454118]
NDCG4: [ 0.69384866  0.72929629  0.77211018  0.8241991   0.88718985]
End. Best Model is model1.
Test_NDCG:
[ 0.75932568  0.74272221  0.7361952   0.73347669  0.73136093  0.73292091
  0.73477888  0.73868192  0.74236675  0.74742566]


liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix50/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [45.4 s]. #user=2522, #item=12922, #train_user=4993560, #cv=12610, #test=167206
Time: [6.8], Init: 
Init_NDCG1: [ 0.62551214  0.66713227  0.72058421  0.78485289  0.86194194]
Init_NDCG2: [ 0.62043242  0.66647063  0.72097174  0.78306028  0.86148044]
Init_NDCG3: [ 0.62388298  0.67076577  0.72808148  0.78963498  0.8636742 ]
Init_NDCG4: [ 0.61939309  0.66190843  0.7173838   0.78294689  0.86042521]
Iteration 0 [57.4 s]: ranku_loss = 0.900828 [4.17 s],
NDCG1: [ 0.65641221  0.69446385  0.74263522  0.80287024  0.87326209]
NDCG2: [ 0.59858645  0.64728595  0.70200029  0.76956685  0.85286599]
NDCG3: [ 0.65327569  0.69364021  0.7415224   0.80178666  0.87253649]
NDCG4: [ 0.59387266  0.64429711  0.69938415  0.76834012  0.85161484]
Iteration 1 [50.0 s]: ranku_loss = 0.692029 [4.20 s],
NDCG1: [ 0.71529752  0.74347972  0.78760127  0.83516701  0.89462818]
NDCG2: [ 0.71764515  0.75265694  0.79260207  0.8425329   0.89730037]
NDCG3: [ 0.69896298  0.7335648   0.77732185  0.82791338  0.88957333]
NDCG4: [ 0.63858762  0.68220513  0.7392209   0.79828433  0.86913192]
Iteration 2 [50.1 s]: ranku_loss = 0.633169 [4.21 s],
NDCG1: [ 0.73998911  0.76933875  0.80728096  0.85310926  0.90464202]
NDCG2: [ 0.74147161  0.7708001   0.80849077  0.85331064  0.90509086]
NDCG3: [ 0.73783516  0.76709538  0.80533297  0.85234761  0.90370572]
NDCG4: [ 0.73834679  0.76727675  0.806388    0.85274423  0.9038966 ]
Iteration 3 [49.8 s]: ranku_loss = 0.611951 [4.20 s],
NDCG1: [ 0.73500635  0.76889676  0.80805949  0.85217503  0.90381109]
NDCG2: [ 0.73213783  0.76764136  0.80595501  0.85127732  0.90293048]
NDCG3: [ 0.73502852  0.76376114  0.80203922  0.84897384  0.90205279]
NDCG4: [ 0.73372193  0.7644645   0.80335014  0.84974591  0.902399  ]
End. Best Model is model2.
Test_NDCG:
[ 0.7575708   0.74153437  0.7347443   0.73203802  0.73011427  0.73134153
  0.73344554  0.73714909  0.74120978  0.74625624]
Test_NDCG By model1:
[ 0.7626035   0.74698672  0.73840351  0.7346489   0.73344513  0.73397021
  0.7358886   0.73935371  0.74338372  0.74797655]



liurui@ubuntu:~/DeepRec$ KERAS_BACKEND=theano python v11.02_2model/MLP.py --learner adam --lr 0.0001 --path Data/yelpfix50/ --batch_size_random 640000
Using Theano backend.
MLP arguments: Namespace(batch_size=256, batch_size_random=640000, epochs=20, learner='adam', lr=0.0001, one_layers='[64,32,16,8]', pair_layers='[64,32,16,8]', path='Data/yelpfix50/', reg_one_layers='[0,0,0,0]', reg_pair_layers='[0,0,0,0]', verbose=1) 
Load data done [42.3 s]. #user=2522, #item=12922, #train_user=4993560, #cv=12610, #test=167206
Time: [7.5], Init: 
Init_NDCG1: [ 0.62589635  0.66534326  0.71950365  0.78603783  0.86203864]
Init_NDCG2: [ 0.61781314  0.66545314  0.71659457  0.78168686  0.8602595 ]
Init_NDCG3: [ 0.61499407  0.66242785  0.7202378   0.78200734  0.85995823]
Init_NDCG4: [ 0.61925324  0.65791051  0.71569402  0.77931796  0.85924342]
Iteration 0 [73.3 s]: ranku_loss = 0.964292 [4.75 s],
NDCG1: [ 0.71398264  0.73888352  0.77750171  0.82933432  0.89205141]
NDCG2: [ 0.58449625  0.63942068  0.69982493  0.76611945  0.84973172]
NDCG3: [ 0.71427597  0.73759904  0.77730618  0.82872455  0.89179368]
NDCG4: [ 0.5853933   0.63828293  0.69913324  0.76671981  0.84970924]
Iteration 1 [55.2 s]: ranku_loss = 0.637011 [4.50 s],
NDCG1: [ 0.73992723  0.76879261  0.80740054  0.85227137  0.90446938]
NDCG2: [ 0.73307338  0.76682225  0.80634475  0.85167054  0.90310162]
NDCG3: [ 0.7399494   0.76834327  0.80722101  0.85223202  0.904395  ]
NDCG4: [ 0.73230253  0.76696041  0.80622589  0.85150163  0.90304304]
Iteration 2 [121.7 s]: ranku_loss = 0.619316 [5.17 s],
NDCG1: [ 0.74090638  0.77092683  0.80892385  0.85325125  0.90501589]
NDCG2: [ 0.74132372  0.77074938  0.80842684  0.8542847   0.90498447]
NDCG3: [ 0.74237646  0.77061118  0.80909677  0.8538111   0.90519801]
NDCG4: [ 0.74036357  0.77027521  0.80818328  0.854251    0.90484808]
Iteration 3 [96.8 s]: ranku_loss = 0.614562 [4.62 s],
NDCG1: [ 0.73960661  0.76960982  0.80873323  0.85411127  0.90479115]
NDCG2: [ 0.73845399  0.76821919  0.80779812  0.853724    0.90440211]
NDCG3: [ 0.73950623  0.77026331  0.80856373  0.85414836  0.90484729]
NDCG4: [ 0.7397467   0.76867277  0.80834028  0.85381049  0.90472731]
End. Best Model is model3.
Test_NDCG:
[ 0.76419636  0.74966834  0.7408126   0.7360531   0.73547398  0.73624892
  0.73862859  0.74260579  0.7464361   0.7503488 ]
Test_NDCG By model1:
[ 0.7649314   0.74967621  0.74070065  0.73672483  0.73573879  0.73653416
  0.73916566  0.74271205  0.7467542   0.75049577]

